////////////////////////////////////////////////////////////////////////////////
//
//  ADOBE SYSTEMS INCORPORATED
//  Copyright 2005-2007 Adobe Systems Incorporated
//  All Rights Reserved.
//
//  NOTICE: Adobe permits you to use, modify, and distribute this file
//  in accordance with the terms of the license agreement accompanying it.
//
////////////////////////////////////////////////////////////////////////////////

/* 
 * WarningConstants.java defines the ID's of warning messages output
 * when the -coach compiler option is used, as well as static tables 
 * used in identifying unsupported AS2 properties and methods. 
 */

package macromedia.asc.embedding;
public class WarningConstants
{
   static final int kNumWarningConstants = 519;
   static final int kNumPropertyWarnings = 174;
   static final int kNumMethodWarnings = 218;
   static final int kNumEventWarnings = 81;


      public static final int kWarning_ConstructorReturnsValue = 1030;
      public static final int kWarning_ConstructorReturnsValue_specific = 1031;
      public static final int kWarning_BooleanConstructorWithNoArgs = 1034;
      public static final int kWarning_BooleanConstructorWithNoArgs_specific = 1035;
      public static final int kWarning_NumberFromStringChanges = 1038;
      public static final int kWarning_NumberFromStringChanges_specific = 1039;
      public static final int kWarning_ArrayToStringChanges = 1044;
      public static final int kWarning_ArrayToStringChanges_specific = 1045;
      public static final int kWarning_DepricatedPropertyError = 1058;
      public static final int kWarning_DepricatedPropertyError_specific = 1059;
      public static final int kWarning_DepricatedFunctionError = 1060;
      public static final int kWarning_DepricatedFunctionError_specific = 1061;
      public static final int kWarning_ChangesInResolve = 1066;
      public static final int kWarning_ChangesInResolve_specific = 1067;
      public static final int kUnsupportedProp_Highquality = 2092;
      public static final int kUnsupportedProp_DisplayObj_HighQuality = 2093;
      public static final int kWarning_LevelNotSupported = 1070;
      public static final int kWarning_LevelNotSupported_specific = 1071;
      public static final int kWarning_ClassIsSealed = 1072;
      public static final int kWarning_ClassIsSealed_specific = 1073;
      public static final int kUnsupportedProp_version = 2090;
      public static final int kUnsupportedProp_Focusrect = 2091;
      public static final int kUnsupportedProp_DisplayObj_Quality = 2094;
      public static final int kUnsupportedProp_Quality = 2095;
      public static final int kUnsupportedProp_TextField_Soundbuftime = 2096;
      public static final int kUnsupportedProp_TextField_Target = 2097;
      public static final int kWarning_ScopingChangeInThis = 1082;
      public static final int kWarning_ScopingChangeInThis_specific = 1083;
      public static final int kWarning_MissingNamespaceDecl = 1084;
      public static final int kWarning_MissingNamespaceDecl_specific = 1085;
      public static final int kWarning_ForVarInChanges = 1086;
      public static final int kWarning_ForVarInChanges_specific = 1087;
      public static final int kWarning_InternalError = 1088;
      public static final int kWarning_InternalError_specific = 1089;
      public static final int kWarning_DepricatedEventHandlerError = 1090;
      public static final int kWarning_DepricatedEventHandlerError_specific = 1091;
      public static final int kWarning_NegativeUintLiteral = 1092;
      public static final int kWarning_NegativeUintLiteral_specific = 1093;
      public static final int kUnsupportedProp_MovieClip_target = 2110;
      public static final int kUnsupportedProp_NewLine = 2102;
      public static final int kWarning_BadNullComparision = 1096;
      public static final int kWarning_BadNullComparision_specific = 1097;
      public static final int kWarning_BadNaNComparision = 1098;
      public static final int kWarning_BadNaNComparision_specific = 1099;
      public static final int kWarning_AssignmentWithinConditional = 1100;
      public static final int kWarning_AssignmentWithinConditional_specific = 1101;
      public static final int kWarning_BadNullAssignment = 1102;
      public static final int kWarning_BadNullAssignment_specific = 1103;
      public static final int kWarning_NoConstructor = 1104;
      public static final int kWarning_NoConstructor_specific = 1105;
      public static final int kUnsupportedProp_MaxScroll = 2103;
      public static final int kUnsupportedProp_Level = 2104;
      public static final int kUnsupportedProp_Parent = 2105;
      public static final int kUnsupportedProp_Root = 2106;
      public static final int kWarning_ConstNotInitialized = 1110;
      public static final int kUnsupportedProp_Button_Target = 2108;
      public static final int kUnsupportedProp_MovieClip_Parent = 2109;
      public static final int kWarning_BadArrayCast_specific = 1113;
      public static final int kWarning_NoExplicitSuperCallInConstructor = 1114;
      public static final int kWarning_NoExplicitSuperCallInConstructor_specific = 1115;
      public static final int kUnsupportedProp_TargetPath = 2113;
      public static final int kUnsupportedProp_Video_Height = 2114;
      public static final int kUnsupportedProp_Video_Width = 2115;
      public static final int kWarning_ConstNotInitialized_specific = 1111;
      public static final int kWarning_BadArrayCast = 1112;
      public static final int kUnsupportedProp__remoteClass = 2118;
      public static final int kUnsupportedProp_TextField_Url = 2098;
      public static final int kUnsupportedProp_TextField_Variable = 2099;
      public static final int kUnsupportedProp_Scroll = 2112;
      public static final int kUnsupportedProp__Proto__ = 2116;
      public static final int kUnsupportedProp_Stage = 2117;
      public static final int kUnsupportedProp_Arguments_Caller = 2107;
      public static final int kUnsupportedProp_MovieClip_hitArea = 2111;
      public static final int kWarning_Event_onStatus = 3187;
      public static final int kWarning_Event_onID3 = 3188;
      public static final int kWarning_Event_onLoad = 3189;
      public static final int kWarning_Event_onSoundComplete = 3190;
      public static final int kWarning_Event_onSetFocus = 3191;
      public static final int kWarning_Event_onResize = 3192;
      public static final int kWarning_Event_onChanged = 3193;
      public static final int kWarning_Event_onKillFocus = 3194;
      public static final int kWarning_Event_onScroller = 3195;
      public static final int kWarning_Event_onMouseDown = 3198;
      public static final int kWarning_Event_onMouseUp = 3199;
      public static final int kWarning_Event_onMouseMove = 3200;
      public static final int kWarning_Event_onMouseWheel = 3201;
      public static final int kWarning_Event_onKeyDown = 3202;
      public static final int kWarning_Event_onKeyUp = 3203;
      public static final int kWarning_Event_onData = 3204;
      public static final int kWarning_Event_onHTTPStatus = 3205;
      public static final int kWarning_Event_onDragOut = 3206;
      public static final int kWarning_Event_onDragOver = 3207;
      public static final int kWarning_Event_onPress = 3211;
      public static final int kWarning_Event_onRelease = 3212;
      public static final int kWarning_Event_onReleaseOutside = 3213;
      public static final int kWarning_Event_onRollOut = 3214;
      public static final int kWarning_Event_onRollOver = 3215;
      public static final int kWarning_Event_onActivity = 3217;
      public static final int kWarning_Event_onSelect = 3219;
      public static final int kWarning_Event_onEnterFrame = 3226;
      public static final int kWarning_Event_onUnload = 3240;
      public static final int kWarning_Event_onLoadComplete = 3241;
      public static final int kWarning_Event_onLoadError = 3242;
      public static final int kWarning_Event_onLoadInit = 3243;
      public static final int kWarning_Event_onLoadProgress = 3244;
      public static final int kWarning_Event_onLoadStart = 3245;
      public static final int kWarning_Event_onClose = 3249;
      public static final int kWarning_Event_onConnect = 3250;
      public static final int kWarning_Event_onXML = 3252;
      public static final int kUnsupportedMeth_hasChildNodes = 3253;
      public static final int kUnsupportedMeth_XMLEvent = 3254;
      public static final int kUnsupportedMeth_XMLDoc = 3255;
      public static final int kUnsupportedMeth_Accessibility_isActive = 3256;
      public static final int kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE = 3257;
      public static final int kUnsupportedMeth_SimpleButton_getDepth = 3258;
      public static final int kUnsupportedMeth_SimpleButton_swapDepths = 3259;
      public static final int kUnsupportedMeth_SimpleButton_getInstanceAtDepth = 3260;
      public static final int kUnsupportedMeth_SimpleButton_getNextHighestDepth = 3261;
      public static final int kUnsupportedMeth_ByteArray_available = 3262;
      public static final int kUnsupportedMeth_ByteArray_getFilePointer = 3263;
      public static final int kUnsupportedMeth_ByteArray_seek = 3264;
      public static final int kUnsupportedMeth_Camera_get = 3265;
      public static final int kUnsupportedProp_Camera_currentFps = 3266;
      public static final int kUnsupportedMeth_Camera_setKeyFrameInterval = 3267;
      public static final int kUnsupportedMeth_Camera_setLoopback = 3268;
      public static final int kUnsupportedMeth_ColorTransform_getRGB = 3269;
      public static final int kUnsupportedMeth_ColorTransform_setRGB = 3270;
      public static final int kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot = 3271;
      public static final int kUnsupportedMeth_ContextMenu_copy = 3272;
      public static final int kUnsupportedProp_ContextMenu_forward_back = 3273;
      public static final int kUnsupportedMeth_ContextMenuItem_copy = 3274;
      public static final int kUnsupportedMeth_CustomActions_listActions = 3275;
      public static final int kUnsupportedProp_DataEvent_DATA_TYPE = 3276;
      public static final int kUnsupportedProp_DisplayObject_xscale = 3277;
      public static final int kUnsupportedProp_DisplayObject__xscale = 3278;
      public static final int kUnsupportedProp_DisplayObject_yscale = 3279;
      public static final int kUnsupportedProp_DisplayObject__yscale = 3280;
      public static final int kUnsupportedProp_DisplayObject_xmouse = 3281;
      public static final int kUnsupportedProp_DisplayObject__xmouse = 3282;
      public static final int kUnsupportedProp_DisplayObject_ymouse = 3283;
      public static final int kUnsupportedProp_DisplayObject__ymouse = 3284;
      public static final int kUnsupportedProp_DisplayObject_setRootClass = 3285;
      public static final int kUnsupportedProp_DisplayObject_mapSymbolToClass = 3286;
      public static final int kUnsupportedProp_DisplayObject__name = 3287;
      public static final int kUnsupportedProp_DisplayObject__parent = 3288;
      public static final int kUnsupportedProp_DisplayObject__mask = 3289;
      public static final int kUnsupportedProp_DisplayObject__visible = 3290;
      public static final int kUnsupportedProp_DisplayObject__x = 3291;
      public static final int kUnsupportedProp_DisplayObject__y = 3292;
      public static final int kUnsupportedProp_DisplayObject__rotation = 3293;
      public static final int kUnsupportedProp_DisplayObject__alpha = 3294;
      public static final int kUnsupportedProp_DisplayObject__width = 3295;
      public static final int kUnsupportedProp_DisplayObject__height = 3296;
      public static final int kUnsupportedMeth_ExternalInterface_available = 3297;
      public static final int kUnsupportedProp_ErrorEvent_ERROR_TYPE = 3298;
      public static final int kUnsupportedMeth_Event_isDefaultPrevented = 3299;
      public static final int kUnsupportedProp_Event_ACTIVATE_TYPE = 3300;
      public static final int kUnsupportedProp_Event_ADDED_TYPE = 3301;
      public static final int kUnsupportedProp_Event_CANCEL_TYPE = 3302;
      public static final int kUnsupportedProp_Event_CHANGE_TYPE = 3303;
      public static final int kUnsupportedProp_Event_CLOSE_TYPE = 3304;
      public static final int kUnsupportedProp_Event_COMPLETE_TYPE = 3305;
      public static final int kUnsupportedProp_Event_CONNECT_TYPE = 3306;
      public static final int kUnsupportedProp_Event_DEACTIVATE_TYPE = 3307;
      public static final int kUnsupportedProp_Event_ENTER_FRAME_TYPE = 3308;
      public static final int kUnsupportedProp_Event_ID3_TYPE = 3309;
      public static final int kUnsupportedProp_Event_INIT_TYPE = 3310;
      public static final int kUnsupportedProp_Event_MOUSE_LEAVE_TYPE = 3311;
      public static final int kUnsupportedProp_Event_OPEN_TYPE = 3312;
      public static final int kUnsupportedProp_Event_REMOVED_TYPE = 3313;
      public static final int kUnsupportedProp_Event_RENDER_TYPE = 3314;
      public static final int kUnsupportedProp_Event_RESIZE_TYPE = 3315;
      public static final int kUnsupportedProp_Event_SCROLL_TYPE = 3316;
      public static final int kUnsupportedProp_Event_SELECT_TYPE = 3317;
      public static final int kUnsupportedProp_Event_SOUND_COMPLETE_TYPE = 3318;
      public static final int kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE = 3319;
      public static final int kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE = 3320;
      public static final int kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE = 3321;
      public static final int kUnsupportedProp_Event_UNLOAD_TYPE = 3322;
      public static final int kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE = 3323;
      public static final int kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE = 3324;
      public static final int kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE = 3325;
      public static final int kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE = 3326;
      public static final int kUnsupportedMeth_Graphics_beginImageFill = 3327;
      public static final int kUnsupportedProp_BitmapFilter_XYZ_QUALITY = 3328;
      public static final int kUnsupportedMeth_Keyboard_getAscii = 3329;
      public static final int kUnsupportedMeth_Keyboard_getCode = 3330;
      public static final int kUnsupportedMeth_Keyboard_isDown = 3331;
      public static final int kUnsupportedMeth_Keyboard_isToggled = 3332;
      public static final int kUnsupportedProp_Keyboard_PGDN = 3333;
      public static final int kUnsupportedProp_Keyboard_PGUP = 3334;
      public static final int kUnsupportedProp_Keyboard_DELETEKEY = 3335;
      public static final int kUnsupportedProp_Keyboard_CAPSLOCK = 3336;
      public static final int kUnsupportedProp_Keyboard_NUMPAD = 3337;
      public static final int kUnsupportedProp_InteractiveObject__focusrect = 3338;
      public static final int kUnsupportedProp_InteractiveObject_menu = 3339;
      public static final int kUnsupportedProp_KeyboardEvent_ascii = 3340;
      public static final int kUnsupportedProp_KeyboardEvent_code = 3341;
      public static final int kUnsupportedProp_Loader_loaderInfo = 3342;
      public static final int kUnsupportedProp_Loader_preload = 3343;
      public static final int kUnsupportedProp_Loader_loadCached = 3344;
      public static final int kUnsupportedProp_LoaderInfo_loaderUrl = 3345;
      public static final int kUnsupportedMeth_LocalConnection_domain = 3346;
      public static final int kUnsupportedProp_ContextMenuEvent_menuOwner = 3347;
      public static final int kUnsupportedMeth_Microphone_get = 3348;
      public static final int kUnsupportedMeth_MovieClip_attachMovie = 3349;
      public static final int kUnsupportedMeth_MovieClip_createEmptyMovieClip = 3350;
      public static final int kUnsupportedMeth_MovieClip_createTextField = 3351;
      public static final int kUnsupportedMeth_MovieClip_removeMovieClip = 3352;
      public static final int kUnsupportedMeth_MovieClip_loadMovie = 3353;
      public static final int kUnsupportedMeth_MovieClip_unloadMovie = 3354;
      public static final int kUnsupportedMeth_MovieClip_unloadMovieNum = 3355;
      public static final int kUnsupportedMeth_MovieClip_getDepth = 3356;
      public static final int kUnsupportedMeth_MovieClip_swapDepths = 3357;
      public static final int kUnsupportedMeth_MovieClip_getInstanceAtDepth = 3358;
      public static final int kUnsupportedMeth_MovieClip_getNextHighestDepth = 3359;
      public static final int kUnsupportedMeth_MovieClip_attachAudio = 3360;
      public static final int kUnsupportedMeth_MovieClip_getBytesLoaded = 3361;
      public static final int kUnsupportedMeth_MovieClip_getBytesTotal = 3362;
      public static final int kUnsupportedMeth_MovieClip_getURL = 3363;
      public static final int kUnsupportedProp_MovieClip_url = 3364;
      public static final int kUnsupportedProp_MovieClip__url = 3365;
      public static final int kUnsupportedMeth_MovieClip_setMask = 3366;
      public static final int kUnsupportedMeth_MovieClip_getSWFVersion = 3367;
      public static final int kUnsupportedProp_MovieClip__currentframe = 3368;
      public static final int kUnsupportedProp_MovieClip__framesloaded = 3369;
      public static final int kUnsupportedProp_MovieClip__totalframes = 3370;
      public static final int kUnsupportedProp_MovieClip_lockroot = 3371;
      public static final int kUnsupportedProp_MovieClip__lockroot = 3372;
      public static final int kUnsupportedProp_MovieClip__soundbuftime = 3373;
      public static final int kUnsupportedMeth_MovieClip_clear = 3374;
      public static final int kUnsupportedMeth_MovieClip_beginFill = 3375;
      public static final int kUnsupportedMeth_MovieClip_beginGradientFill = 3376;
      public static final int kUnsupportedMeth_MovieClip_lineGradientStyle = 3377;
      public static final int kUnsupportedMeth_MovieClip_beginImageFill = 3378;
      public static final int kUnsupportedMeth_MovieClip_lineStyle = 3379;
      public static final int kUnsupportedMeth_MovieClip_drawRect = 3380;
      public static final int kUnsupportedMeth_MovieClip_drawRoundRect = 3381;
      public static final int kUnsupportedMeth_MovieClip_drawRoundRectComplex = 3382;
      public static final int kUnsupportedMeth_MovieClip_drawCircle = 3383;
      public static final int kUnsupportedMeth_MovieClip_moveTo = 3384;
      public static final int kUnsupportedMeth_MovieClip_lineTo = 3385;
      public static final int kUnsupportedMeth_MovieClip_curveTo = 3386;
      public static final int kUnsupportedMeth_MovieClip_endFill = 3387;
      public static final int kUnsupportedMeth_NetStream_setBufferTime = 3388;
      public static final int kUnsupportedProp_NetStream_currentFps = 3389;
      public static final int kUnsupportedProp_NetStream_videocodec = 3390;
      public static final int kUnsupportedProp_NetStream_audiocodec = 3391;
      public static final int kUnsupportedMeth_ProductManager_isIntalled = 3392;
      public static final int kUnsupportedMeth_ProductManager_installedVersion = 3393;
      public static final int kUnsupportedMeth_ProductManager_isRunning = 3394;
      public static final int kUnsupportedMeth_Point_addTo = 3395;
      public static final int kUnsupportedProp_Proxy_delDescendants = 3396;
      public static final int kUnsupportedMeth_Profiler_heapdump = 3397;
      public static final int kUnsupportedProp_ProgressEvent_current = 3398;
      public static final int kUnsupportedProp_ProgressEvent_total = 3399;
      public static final int kUnsupportedMeth_Rectangle_isEmpty = 3400;
      public static final int kUnsupportedMeth_SoundTransform_setPan = 3401;
      public static final int kUnsupportedMeth_Socket_available = 3402;
      public static final int kUnsupportedMeth_SharedObject_getSize = 3403;
      public static final int kUnsupportedMeth_SharedObject_setFps = 3404;
      public static final int kUnsupportedMeth_Sprite_getSWF = 3405;
      public static final int kUnsupportedMeth_Sprite_constructChild = 3406;
      public static final int kUnsupportedProp_Sprite__droptarget = 3407;
      public static final int kUnsupportedMeth_Stage_getFocus = 3408;
      public static final int kUnsupportedMeth_Stage_setFocus = 3409;
      public static final int kUnsupportedProp_Stage_showMenu = 3411;
      public static final int kUnsupportedMeth_StyleSheet_getStyleNames = 3412;
      public static final int kUnsupportedMeth_StyleSheet_onData = 3413;
      public static final int kUnsupportedMeth_StyleSheet_load = 3414;
      public static final int kUnsupportedProp_StyleSheet_loaded = 3415;
      public static final int kUnsupportedMeth_StyleSheet_getBytesLoaded = 3416;
      public static final int kUnsupportedMeth_StyleSheet_getBytesTotal = 3417;
      public static final int kUnsupportedMeth_IME_getEnabled = 3418;
      public static final int kUnsupportedMeth_IME_setEnabled = 3419;
      public static final int kUnsupportedMeth_IME_getInstance = 3420;
      public static final int kUnsupportedMeth_IME_getConversionMode = 3421;
      public static final int kUnsupportedMeth_IME_setConversionMode = 3422;
      public static final int kUnsupportedProp_System_getAvmplusVersion = 3423;
      public static final int kUnsupportedProp_SWFLoaderInfo_SWFVersion = 3424;
      public static final int kUnsupportedProp_SWFLoaderInfo_ASVersion = 3425;
      public static final int kUnsupportedMeth_TextField_getNewTextFormat = 3426;
      public static final int kUnsupportedMeth_TextField_setNewTextFormat = 3427;
      public static final int kUnsupportedMeth_TextField_getDepth = 3428;
      public static final int kUnsupportedMeth_TextField_swapDepths = 3429;
      public static final int kUnsupportedMeth_TextField_getInstanceAtDepth = 3430;
      public static final int kUnsupportedMeth_TextField_getNextHighestDepth = 3431;
      public static final int kUnsupportedMeth_TextField_replaceSel = 3432;
      public static final int kUnsupportedMeth_TextField_getLineIndexOfCharacter = 3433;
      public static final int kUnsupportedMeth_TextField_getSelectionBeginIndex = 3434;
      public static final int kUnsupportedMeth_TextField_getSelectionEndIndex = 3435;
      public static final int kUnsupportedMeth_TextField_getCaretIndex = 3436;
      public static final int kUnsupportedMeth_TextField_getFontList = 3437;
      public static final int kUnsupportedProp_TextField_maxscroll = 3438;
      public static final int kUnsupportedProp_TextField_hscroll = 3439;
      public static final int kUnsupportedProp_TextField_maxhscroll = 3440;
      public static final int kUnsupportedProp_TextField_newTextFormat = 3441;
      public static final int kUnsupportedMeth_TextFormat_getTextExtent = 3442;
      public static final int kUnsupportedMeth_TextSnapshot_getCount = 3443;
      public static final int kUnsupportedProp_URLLoader_navigate = 3444;
      public static final int kUnsupportedMeth_URLLoader_send = 3445;
      public static final int kUnsupportedProp_URLLoader_binary = 3446;
      public static final int kUnsupportedMeth_URLStream_available = 3447;
      public static final int kUnsupportedProp_URLRequest_digest = 3448;
      public static final int kUnsupportedProp_URLRequest_importToSandbox = 3449;
      public static final int kUnsupportedMeth_URLRequest_addRequestHeader = 3450;
      public static final int kUnsupportedMeth_XMLDocument_load = 3451;
      public static final int kUnsupportedMeth_XMLDocument_send = 3452;
      public static final int kUnsupportedMeth_XMLDocument_sendAndLoad = 3453;
      public static final int kUnsupportedMeth_XMLDocument_onData = 3454;
      public static final int kUnsupportedMeth_XMLDocument_addRequestHeader = 3455;
      public static final int kUnsupportedMeth_XMLDocument_getBytesLoaded = 3456;
      public static final int kUnsupportedMeth_XMLDocument_getBytesTotal = 3457;
      public static final int kUnsupportedProp_XMLDocument_loaded = 3458;
      public static final int kUnsupportedProp_XMLDocument_contentType = 3459;
      public static final int kUnsupportedProp_XMLDocument_status = 3460;
      public static final int kUnsupportedProp_Button = 3461;
      public static final int kUnsupportedProp_Container = 3462;
      public static final int kUnsupportedProp_Image = 3463;
      public static final int kUnsupportedProp_ImageFilter = 3464;
      public static final int kUnsupportedProp_ImageSprite = 3465;
      public static final int kUnsupportedProp_ImageLoaderInfo = 3466;
      public static final int kUnsupportedProp_ImeEvent = 3467;
      public static final int kUnsupportedProp_Key = 3468;
      public static final int kUnsupportedProp_LineMetrics = 3469;
      public static final int kUnsupportedProp_LoadVars = 3470;
      public static final int kUnsupportedProp_MenuEvent = 3471;
      public static final int kUnsupportedProp_SystemCapabilities = 3472;
      public static final int kUnsupportedProp_TextExtents = 3473;
      public static final int kUnsupportedMeth_Button = 3475;
      public static final int kUnsupportedMeth_Container = 3476;
      public static final int kUnsupportedMeth_Image = 3477;
      public static final int kUnsupportedMeth_ImageFilter = 3478;
      public static final int kUnsupportedMeth_ImageSprite = 3479;
      public static final int kUnsupportedMeth_ImageLoaderInfo = 3480;
      public static final int kUnsupportedMeth_ImeEvent = 3481;
      public static final int kUnsupportedMeth_Key = 3482;
      public static final int kUnsupportedMeth_LineMetrics = 3483;
      public static final int kUnsupportedMeth_LoadVars = 3484;
      public static final int kUnsupportedMeth_MenuEvent = 3485;
      public static final int kUnsupportedMeth_SystemCapabilities = 3486;
      public static final int kUnsupportedMeth_TextExtents = 3487;
      public static final int kUnsupportedProp_Object___resolve  = 3488;
      public static final int kUnsupportedMeth_XMLUI_get = 3489;
      public static final int kUnsupportedMeth_XMLUI_set = 3490;
      public static final int kUnsupportedProp_DisplayObject_accProps = 3491;
      public static final int kUnsupportedMeth_DisplayObject_setScalingGrid = 3492;
      public static final int kUnsupportedMeth_Graphics_drawCircle = 3493;
      public static final int kUnsupportedProp_NetConnection_isConnected = 3494;
      public static final int kUnsupportedProp_Socket_isConnected = 3495;
      public static final int kUnsupportedProp_URLStream_isConnected = 3496;
      public static final int kUnsupportedProp_SyncEvent_list = 3497;
      public static final int kUnsupportedProp_TextField_scroll = 3498;
      public static final int kUnsupportedProp_TextField_bottomScroll = 3499;
      public static final int kUnsupportedProp_BitmapData_RED_CHANNEL = 3500;
      public static final int kUnsupportedProp_BitmapData_GREEN_CHANNEL = 3501;
      public static final int kUnsupportedProp_BitmapData_BLUE_CHANNEL = 3502;
      public static final int kUnsupportedProp_BitmapData_ALPHA_CHANNEL = 3503;
      public static final int kUnsupportedMeth_instanceof = 3504;
      public static final int kUnsupportedMeth_System_showSettings = 3505;
      public static final int kUnsupportedProp_System_useCodepage = 3506;
      public static final int kUnsupportedProp_AsBroadcaster = 3507;
      public static final int kUnsupportedProp_SimpleButton_Soundbuftime = 3508;
      public static final int kUnsupportedMeth_BitmapData_loadBitmap = 3509;
      public static final int kUnsupportedMeth_MovieClip_loadVariables = 3510;
      public static final int kUnsupportedProp_MovieClipLoader = 3511;
      public static final int kUnsupportedMeth_MovieClipLoader = 3512;
      public static final int kUnsupportedMeth_IME_addListener = 3513;
      public static final int kUnsupportedMeth_IME_removeListener = 3514;
      public static final int kUnsupportedProp_IME_ALPHANUMERIC_FULL = 3515;
      public static final int kUnsupportedProp_IME_ALPHANUMERIC_HALF = 3516;
      public static final int kUnsupportedProp_IME_CHINESE = 3517;
      public static final int kUnsupportedProp_IME_JAPANESE_HIRAGANA = 3518;
      public static final int kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL = 3519;
      public static final int kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF = 3520;
      public static final int kUnsupportedProp_IME_KOREAN = 3521;
      public static final int kUnsupportedProp_IME_UNKNOWN = 3522;
      public static final int kUnsupportedMeth_FileReferenceList_addListener = 3523;
      public static final int kUnsupportedMeth_FileReferenceList_removeListener = 3524;
      public static final int kWarning_Event_onCancel = 3527;
      public static final int kUnsupportedProp_Keyboard__listeners = 3528;
      public static final int kWarning_Event_onIMEComposition = 3529;
      public static final int kUnsupportedProp_SimpleButton__url = 3530;
      public static final int kUnsupportedMeth_Date_getYear = 3531;
      public static final int kUnsupportedMeth_Date_setYear = 3532;
      public static final int kUnsupportedMeth_Date_getUTCYear = 3533;
      public static final int kUnsupportedMeth_Microphone_setRate = 3534;
      public static final int kUnsupportedProp_Selection = 3535;
      public static final int kUnsupportedMeth_Selection = 3536;
      public static final int kUnsupportedMeth_Microphone_setGain = 3537;
      public static final int kUnsupportedMeth_ColorTransform_getTransform = 3538;
      public static final int kUnsupportedMeth_ColorTransform_setTransform = 3539;
      public static final int kUnsupportedProp_MovieClip_focusEnabled = 3540;
      public static final int kUnsupportedMeth_MovieClip_beginBitmapFill = 3541;
      public static final int kUnsupportedMeth_MovieClip_hitTest = 3542;
      public static final int kUnsupportedMeth_MovieClip_attachBitmap = 3543;
      public static final int kUnsupportedMeth_Sound_loadSound = 3544;
      public static final int kUnsupportedMeth_Sound_getVolume = 3545;
      public static final int kUnsupportedMeth_Sound_getTransform = 3546;
      public static final int kUnsupportedMeth_Sound_getPan = 3547;
      public static final int kUnsupportedMeth_Sound_setPan = 3548;
      public static final int kUnsupportedMeth_Sound_getBytesLoaded = 3549;
      public static final int kUnsupportedMeth_Sound_getBytesTotal = 3550;
      public static final int kWarning_SlowTextFieldAddition = 3551;
      public static final int kWarning_SlowTextFieldAddition_specific = 3552;
      public static final int kWarning_UnlikelyFunctionValue = 3553;
      public static final int kWarning_UnlikelyFunctionValue_specific = 3554;
      public static final int kWarning_InstanceOfChanges = 3555;
      public static final int kWarning_InstanceOfChanges_specific = 3556;
      public static final int kUnsupportedProp_LocalConnection_allowDomain = 3557;
      public static final int kUnsupportedProp_LocalConnection_allowInsecureDomain = 3558;
      public static final int kUnsupportedMeth_call = 3559;
      public static final int kUnsupportedProp_Color = 3560;
      public static final int kUnsupportedMeth_Color = 3561;
      public static final int kUnsupportedProp_System_exactSettings = 3562;
      public static final int kUnsupportedProp_capabilities = 3563;
      public static final int kUnsupportedMeth_capabilities = 3564;
      public static final int kUnsupportedMeth_FileReference_addListener = 3565;
      public static final int kUnsupportedMeth_FileReference_removeListener = 3566;
      public static final int kWarning_Event_onComplete = 3567;
      public static final int kWarning_Event_onHTTPError = 3568;
      public static final int kWarning_Event_onIOError = 3569;
      public static final int kWarning_Event_onProgress = 3570;
      public static final int kWarning_Event_onSecurityError = 3571;
      public static final int kWarning_Event_onOpen = 3572;
      public static final int kWarning_XML_ClassHasChanged = 3573;
      public static final int kWarning_XML_ClassHasChanged_specific = 3574;
      public static final int kWarning_BadDateCast = 3575;
      public static final int kWarning_BadDateCast_specific = 3576;
      public static final int kWarning_ImportHidesClass = 3581;
      public static final int kWarning_ImportHidesClass_specific = 3582;
      public static final int kWarning_DuplicateArgumentNames = 3583;
      public static final int kWarning_DuplicateArgumentNames_specific = 3584;
      public static final int kUnsupportedMeth_Rectangle_containsRectangle = 3585;
      public static final int kUnsupportedMeth_eval = 3586;
      public static final int kUnsupportedMeth_getVersion = 3587;
      public static final int kUnsupportedMeth_ifFrameLoaded = 3588;
      public static final int kUnsupportedProp__global = 3589;
      public static final int kWarning_BadBoolAssignment = 3590;
      public static final int kWarning_BadBoolAssignment_specific = 3591;
      public static final int kWarning_BadES3TypeProp = 3592;
      public static final int kWarning_BadES3TypeProp_specific = 3593;
      public static final int kWarning_BadES3TypeMethod = 3594;
      public static final int kWarning_BadES3TypeMethodProp_specific = 3595;
      public static final int kWarning_DuplicateVariableDef = 3596;
      public static final int kWarning_DuplicateVariableDef_specific = 3597;
      public static final int kWarning_DefinitionShadowedByPackageName = 3598;
      public static final int kWarning_DefinitionShadowedByPackageName_specific = 3599;
      public static final int kWarning_DeleteOfFixedProperty = 3600;
      public static final int kWarning_DeleteOfFixedProperty_specific = 3601;
      public static final int kWarning_Deprecated = 3602;
      public static final int kWarning_Deprecated_specific = 3603;
      public static final int kWarning_DeprecatedMessage = 3604;
      public static final int kWarning_DeprecatedMessage_specific = 3605;
      public static final int kWarning_DeprecatedUseReplacement = 3606;
      public static final int kWarning_DeprecatedUseReplacement_specific = 3607;
      public static final int kWarning_DeprecatedSince = 3608;
      public static final int kWarning_DeprecatedSince_specific = 3609;
      public static final int kWarning_DeprecatedSinceNoReplacement = 3610;
      public static final int kWarning_DeprecatedSinceNoReplacement_specific = 3611;
      public static final int kUnsupportedMeth_random = 2617;
      public static final int kUnsupportedMeth_chr = 2618;
      public static final int kUnsupportedMeth_mbchr = 2619;
      public static final int kUnsupportedMeth_ord = 2621;
      public static final int kUnsupportedMeth_mbord = 2622;
      public static final int kUnsupportedMeth_substring = 2623;
      public static final int kUnsupportedMeth_mbsubstring = 2624;
      public static final int kUnsupportedMeth_length = 2625;
      public static final int kUnsupportedMeth_mblength = 2626;
      public static final int kUnsupportedMeth_ASNative = 2627;
      public static final int kUnsupportedMeth_addProperty = 2628;
      public static final int kUnsupportedMeth_getProperty = 2629;
      public static final int kUnsupportedMeth_setProperty = 2630;
      public static final int kUnsupportedMeth_asfunction = 2631;
      public static final int kUnsupportedMeth_clearInterval = 2633;
      public static final int kUnsupportedMeth_duplicateMovieClip = 2634;
      public static final int kUnsupportedMeth_fscommand = 2636;
      public static final int kUnsupportedMeth_getURL = 2638;
      public static final int kUnsupportedMeth_gotoAndPlay = 2639;
      public static final int kUnsupportedMeth_gotoAndStop = 2640;
      public static final int kUnsupportedMeth_play = 2641;
      public static final int kUnsupportedMeth_print = 2642;
      public static final int kUnsupportedMeth_printAsBitmap = 2643;
      public static final int kUnsupportedMeth_printAsBitmapNum = 2644;
      public static final int kUnsupportedMeth_printNum = 2645;
      public static final int kUnsupportedMeth_removeMovieClip = 2646;
      public static final int kUnsupportedMeth_setInterval = 2647;
      public static final int kUnsupportedMeth_nextFrame = 2648;
      public static final int kUnsupportedMeth_startDrag = 2649;
      public static final int kUnsupportedMeth_stop = 2650;
      public static final int kUnsupportedMeth_stopAllSounds = 2651;
      public static final int kUnsupportedMeth_stopDrag = 2652;
      public static final int kUnsupportedMeth_tellTarget = 2653;
      public static final int kUnsupportedMeth_toggleHighQuality = 2654;
      public static final int kUnsupportedMeth_unloadMovie = 2656;
      public static final int kUnsupportedMeth_unloadMovieNum = 2657;
      public static final int kUnsupportedMeth_updateAfterEvent = 2658;
      public static final int kUnsupportedMeth_Video_attachVideo = 2659;
      public static final int kUnsupportedMeth_TextField_StyleSheet_load = 2660;
      public static final int kUnsupportedMeth_Object_registerClass = 2663;
      public static final int kUnsupportedMeth_Object_unwatch = 2664;
      public static final int kUnsupportedMeth_Object_watch = 2665;
      public static final int kUnsupportedMeth_loadMovie = 2666;
      public static final int kUnsupportedMeth_loadMovieNum = 2667;
      public static final int kUnsupportedMeth_loadVariables = 2668;
      public static final int kUnsupportedMeth_loadVariablesNum = 2669;
      public static final int kUnsupportedMeth_Stage_addListener = 2678;
      public static final int kUnsupportedMeth_Stage_removeListener = 2679;
      public static final int kUnsupportedMeth_TextField_addListener = 2680;
      public static final int kUnsupportedMeth_TextField_removeListener = 2681;
      public static final int kUnsupportedMeth_Mouse_addListener = 2682;
      public static final int kUnsupportedMeth_Mouse_removeListener = 2683;
      public static final int kUnsupportedMeth_Keyboard_addListener = 2684;
      public static final int kUnsupportedMeth_Keyboard_removeListener = 2685;
      public static final int kUnsupportedMeth_Sound_attachSound = 2686;
      public static final int kWarning_NoTypeDecl = 1008;
      public static final int kWarning_NoTypeDecl_specific = 1009;
      public static final int kWarning_BadUndefinedComparision = 1012;
      public static final int kWarning_BadUndefinedComparision_specific = 1013;
   
   
   
   // enum for common types we need to lookup quickly
   public static final int kVoidType = 0;
   public static final int kObjectType = 1;
   public static final int kFunctionType = 2;
   public static final int kStringType = 3;
   public static final int kNumberType = 4;
   public static final int kBooleanType = 5;
   public static final int kArrayType = 6;
   public static final int kDateType = 7;
   public static final int kMathType = 8;
   public static final int kErrorType = 9;
   public static final int kRegExpType = 10;
   public static final int kDisplayObjectType = 11;
   public static final int kMovieClipType = 12;
   public static final int kTextFieldType = 13;
   public static final int kTextFormatType = 14;
   public static final int kMicrophoneType = 15;
   public static final int kSimpleButtonType = 16;
   public static final int kVideoType = 17;
   public static final int kStyleSheetType = 18;
   public static final int kSelectionType = 19;
   public static final int kColorType = 20;
   public static final int kStageType = 21;
   public static final int kMouseType = 22;
   public static final int kKeyboardType = 23;
   public static final int kSoundType = 24;
   public static final int kSystemType = 25;
   public static final int kXMLType = 26;
   public static final int kXMLSocketType = 27;
   public static final int kXMLListType = 28;
   public static final int kQNameType = 29;
   public static final int kLoadVarsType = 30;
   public static final int kCameraType = 31;
   public static final int kContextMenuType = 32;
   public static final int kContextMenuItemType = 33;
   public static final int kMovieClipLoaderType = 34;
   public static final int kNetStreamType = 35;
   public static final int kAccessibilityType = 36;
   public static final int kActivityEventType = 37;
   public static final int kByteArrayType = 38;
   public static final int kColorTransformType = 39;
   public static final int kDisplayObjectContainerType = 40;
   public static final int kCustomActionsType = 41;
   public static final int kDataEventType = 42;
   public static final int kExternalInterfaceType = 43;
   public static final int kErrorEventType = 44;
   public static final int kEventType = 45;
   public static final int kFocusEventType = 46;
   public static final int kGraphicsType = 47;
   public static final int kBitmapFilterType = 48;
   public static final int kInteractiveObjectType = 49;
   public static final int kKeyboardEventType = 50;
   public static final int kLoaderType = 51;
   public static final int kLoaderInfoType = 52;
   public static final int kLocalConnectionType = 53;
   public static final int kContextMenuEventType = 54;
   public static final int kProductManagerType = 55;
   public static final int kPointType = 56;
   public static final int kProxyType = 57;
   public static final int kProfilerType = 58;
   public static final int kProgressEventType = 59;
   public static final int kRectangleType = 60;
   public static final int kSoundTransformType = 61;
   public static final int kSocketType = 62;
   public static final int kSharedObjectType = 63;
   public static final int kSpriteType = 64;
   public static final int kIMEType = 65;
   public static final int kSWFLoaderInfoType = 66;
   public static final int kTextSnapshotType = 67;
   public static final int kURLLoaderType = 68;
   public static final int kURLStreamType = 69;
   public static final int kURLRequestType = 70;
   public static final int kXMLDocumentType = 71;
   public static final int kXMLNodeType = 72;
   public static final int kNetConnectionType = 73;
   public static final int kSyncEventType = 74;
   public static final int kBitmapDataType = 75;
   public static final int kXMLUIType = 76;
   public static final int kFileReferenceListType = 77;
   public static final int kFileReferenceType = 78;
   public static final int kNumDefaultTypes =  79;
   
   public static class AscWarning
   {
      int code;  // enum used to identify or lookup this message/problem
      String pWarning; // a particular warning message    '
      AscWarning(int c, String s) { code = c; pWarning = s; }
   } ;
   
   public static class AscWarningInstance
   {
      int code;			// enum identifying the warning to use if we find a match for baseType and name
      int baseType;		// type of the base in the member expression we are looking for 
      boolean is_static;  // is a static property or method
      String name;		// name of the property or method we are looking for
      AscWarningInstance(int c, int b, String s, boolean isStatic) { code = c; baseType = b; name = s; is_static = isStatic; }
   } ;
   
   
   public static void initWarningConstants() 
   {
      initWarningConstantsEN();
      initWarningConstantsDE();
      initWarningConstantsES();
      initWarningConstantsFR();
      initWarningConstantsIT();
      initWarningConstantsJP();
      initWarningConstantsKR();
      initWarningConstantsCN();
      initWarningConstantsTW();
   }

   static final AscWarning[] warningConstantsEN= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsEN() 
   {
      int index=0;
        warningConstantsEN[index++] = new AscWarning(kWarning_NoTypeDecl, "Missing type declaration." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' has no type declaration." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Illogical comparison with undefined.  Only untyped variables (or variables of type *) can be undefined." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Variables of type %s cannot be undefined. The value undefined will be type coerced to %s before comparison." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Function used in new expression returns a value.  Result will be what the function returns, rather than a new instance of that function." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Migration issue: Result of new %s will be the return value of %s, rather than a new instance of that function." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() with no arguments returns false in ActionScript 3.0.  Boolean() returned undefined in ActionScript 2.0." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Use of Boolean() with no arguments." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NumberFromStringChanges, "In ActionScript 3.0, white space is ignored and '' returns 0. Number() returns NaN in ActionScript 2.0 when the parameter is '' or contains white space." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Migration issue: When the Number('') function is called with an empty string argument it returns 0 in ActionScript 3.0, and NaN in ActionScript 2.0." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() format has changed." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Migration issue: Array.toString() handling of null and undefined elements has changed." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Unsupported ActionScript 2.0 property." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Migration issue: The property %s is no longer supported.  %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Unsupported ActionScript 2.0 function." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Migration issue: The method %s is no longer supported.  %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Migration issue: __resolve is no longer supported.  Use the new Proxy class for similar functionality." );
        warningConstantsEN[index++] = new AscWarning(kWarning_LevelNotSupported, "_level is no longer supported. For more information, see the flash.display package." );
        warningConstantsEN[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Migration issue: _level is no longer supported. For more information, see the flash.display package." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ClassIsSealed, "Class is sealed.  It cannot have members added to it dynamically." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Migration issue: %s is not a dynamic class.  Instances cannot have members added to them dynamically." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Change in scoping for the this keyword.  Class methods extracted from an instance of a class will always resolve this back to that instance.  In ActionScript 2.0 this is looked up dynamically based on where the method is invoked from." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Migration issue: Method %s will behave differently in ActionScript 3.0 due to the change in scoping for the this keyword. See the entry for warning 1083 for additional information." );
        warningConstantsEN[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Missing namespace declaration (e.g. variable is not defined to be public, private, etc.)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s will be scoped to the default namespace: %s internal.  It will not be visible outside of this package." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 iterates over an object's properties within a \"for x in target\" statement in random order." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Migration issue: ActionScript 3.0 iterates over an object's properties within a \"for x in target\" statement in random order." );
        warningConstantsEN[index++] = new AscWarning(kWarning_InternalError, "Internal error in compiler." );
        warningConstantsEN[index++] = new AscWarning(kWarning_InternalError_specific, "Error code: %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler was not added as a listener." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Migration issue: %s" );
        warningConstantsEN[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Negative value will become a large positive value when assigned to a uint data type." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Negative value used where a uint (non-negative) value is expected." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNullComparision, "Illogical comparison with null." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Illogical comparison with null.  Variables of type %s cannot be null." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNaNComparision, "Illogical comparison with NaN. Any comparison operation involving NaN will evaluate to false because NaN != NaN." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Illogical comparison with NaN.  This statement always evaluates to false." );
        warningConstantsEN[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Assignment within conditional." );
        warningConstantsEN[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Assignment within conditional.  Did you mean == instead of =?" );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNullAssignment, "Impossible null assignment." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "null used where a %s value was expected." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoConstructor, "Missing constructor." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoConstructor_specific, "No constructor function was specified for class %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ConstNotInitialized, "Constant not initialized." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "The constant was not initialized." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadArrayCast, "Possibly invalid Array cast operation." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) behaves the same as new Array(x).  To cast a value to type Array use the expression x as Array instead of Array(x)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "The super() statement was not called within the constructor." );
        warningConstantsEN[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "The super() statement will be executed prior to entering this constructor.  Add a call to super() within the constructor if you want to explicitly control when it is executed." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_version, "Use Capabilities.version instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Focusrect, "For more information, see InteractiveObject.focusRect." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Highquality, "For more information, see Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "For more information, see Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "For more information, see Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Quality, "For more information, see Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Use the static property flash.media.SoundMixer.bufferTime instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "This functionality is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "For more information, see LoaderInfo.url." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "This functionality is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NewLine, "Use '\n' for newline." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "For more information, see textField.maxScroll." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Level, "The concept of levels does not exist in ActionScript 3.0, which instead provides direct access to the display list. See the flash.display package for details." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Parent, "Use the parent property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Root, "This property has been removed. The closest equivalent is the Stage, which serves as the root of the ActionScript 3.0 display list." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Try declaring caller as an argument of the function instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Button_Target, "This functionality is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Use the parent property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "This functionality is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "For more information, see Sprite.hitArea." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Scroll, "For more information, see the scrollH and scrollV properties of flash.text.TextField class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Use MovieClip objects directly as arguments instead of paths." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Video_Height, "For more information, see Video.videoHeight." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Video_Width, "For more information, see Video.videoWidth." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp__Proto__, "For more information, see obsolete  __proto__." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Stage, "For more information, see DisplayObject.stage." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Use the registerClass() method in the flash.net package instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_random, "Use Math.random() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_chr, "Use String.fromCharCode() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Use String.fromCharCode() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ord, "Use String.charCodeAt() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_mbord, "Use String.charCodeAt() instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_substring, "Use the String.substr method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Use the String.substr method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_length, "Use the length property of the argument instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_mblength, "Use the length property of the argument instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ASNative, "For more information, see changes to ASnative." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Set properties directly on the instance using dot (.) notation instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Access properties directly using dot (.) notation instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Set properties directly on the instance using dot (.) notation instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_asfunction, "For more information, see TextEvent.LINK and addEventListener()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "This method has moved to the flash.utils package." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Replaced by new MovieClip class constructor function." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Moved to flash.system package. Also, please see flash.external.ExternalInterface class for Javascript/ActionScript communication." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_getURL, "For equivalent functionality, see flash.net.URLLoader.  The flash.net package also contains package-level functions navigateToURL() and sendToURL()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "For more information, see MovieClip.gotoAndPlay()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "For more information, see MovieClip.gotoAndStop()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_play, "For more information, see MovieClip.play()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_print, "For more information, see PrintJob.start()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "For more information, see PrintJob." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "For more information, see PrintJob." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_printNum, "For more information, see PrintJob." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Use Container.removeChild(childName). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Moved to the flash.utils package.  Consider using the Timer class instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "For more information, see MovieClip.nextFrame()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_startDrag, "For more information, see MovieClip.startDrag()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_stop, "For more information, see MovieClip.stop()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "For more information, see Sound.stopAllSounds()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "For more information, see MovieClip.stopDrag()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Use the dot (.) operator or the with statement instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "For more information, see DisplayObject.stage and Stage.quality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Use DisplayObjectContainer.removeChild(childName) instead. For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Use DisplayObjectContainer.removeChild(childName) instead. For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "This function is no longer a global function, but is still available as a method of the TimerEvent, MouseEvent, and KeyboardEvent classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "For more information, see Video.attachNetStream, Video.attachCamera." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Use the URLLoader class to perform loading and pass the result to StyleSheet.parseCSS()" );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "In ActionScript 3.0 all classes are registered by default.  If you are using AMF, see flash.utils.registerClassAlias() for more information." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Use accessor properties (get/set functions) or the flash.utils.Proxy class for similar functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Use accessor properties (get/set functions) or the flash.utils.Proxy class for similar functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "For more information, see MovieClip.loadMovie()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "For more information, see MovieClip.loadMovieNum()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "For more information, see Loader.load()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "For more information, see Loader.load()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Use SWF class to create sounds from library" );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onStatus, "The onStatus event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'status', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onID3, "The onID3 event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'id3', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoad, "The onLoad event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'load', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onSoundComplete, "The onSoundComplete event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'soundComplete', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onSetFocus, "The onSetFocus event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'focusIn', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onResize, "The onResize event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'resize', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onChanged, "The onChanged event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'change', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onKillFocus, "The onKillFocus event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'focusOut', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onScroller, "The onScroller event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'scroll', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onMouseDown, "The onMouseDown event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onMouseUp, "The onMouseUp event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onMouseMove, "The onMouseMove event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseMove', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onMouseWheel, "The onMouseWheel event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseWheel', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onKeyDown, "The onKeyDown event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'keyDown', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onKeyUp, "The onKeyUp event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'keyUp', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onData, "The onData event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'data', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "The onHTTPStatus event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'httpStatus', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onDragOut, "The onDragOut event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onDragOver, "The onDragOver event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onPress, "The onPress event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onRelease, "The onRelease event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'click', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "The onReleaseOutside event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onRollOut, "The onRollOut event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onRollOver, "The onRollOver event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onActivity, "The onActivity event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'activity', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onSelect, "The onSelect event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'menuSelect', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onEnterFrame, "The onEnterFrame is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'enterFrame', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onUnload, "The onUnload event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'unload', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadComplete, "The onLoadComplete is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'load', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadError, "The onLoadError event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'error', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadInit, "The onLoadInit event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'init', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadProgress, "The onLoadProgress event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'progress', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onLoadStart, "The onLoadStart is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'start', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onClose, "The onClose event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'close', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onConnect, "The onConnect event handler is not triggered automatically by Flash player in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'connect', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onXML, "onXML is not triggered automatically by Flash Player in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( 'xml', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Use the property hasChildNodes instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "The XMLEvent class is obsolete, and the xml event is no longer dispatched. Only the data event is dispatched during file loading." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "The XMLDoc class has been renamed XMLDocument." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Use the Accessibility.active property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Use ActivityEvent.ACTIVITY constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Use DisplayObjectContainer.parent.getChildIndex instead. See help for the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Use DisplayObjectContainer.parent.setChildIndex instead. See help for the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Use DisplayObjectContainer.getChildAt instead. See help for the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Use DisplayObjectContainer.numChildren instead. DisplayObjectContainer.addChild always adds the new child to index DisplayObjectContainer.numChildren." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Use the ByteArray.bytesAvailable property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Use the ByteArray.position property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Use the ByteArray.position property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Use the Camera.getCamera() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Use the Camera.currentFPS property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Use the Camera.keyFrameInterval property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Use the Camera.loopback property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Use the ColorTransform.color property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Use the ColorTransform.color property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Use the Container.textSnapshot property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Use the ContextMenu.clone() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Use the ContextMenu.forwardAndBack property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Use the ContextMenuItem.clone() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Use the CustomActions.actionsList property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Use the DataEvent.DATA constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Use the DisplayObject.scaleX property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Use the DisplayObject.scaleX property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Use the DisplayObject.scaleY property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Use the DisplayObject.scaleY property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Use the DisplayObject.mouseX property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Use the DisplayObject.mouseX property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Use the DisplayObject.mouseY property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Use the DisplayObject.mouseY property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "This feature is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "This feature is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Use the DisplayObject.name property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Use the DisplayObject.parent property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Use the DisplayObject.mask property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Use the DisplayObject.visible property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Use the DisplayObject.x property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Use the DisplayObject.y property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Use the DisplayObject.rotation property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Use the DisplayObject.alpha property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Use the DisplayObject.width property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Use the DisplayObject.height property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Use the ExternalInterface.available property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Use the ErrorEvent.ERROR constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Use the Event.isDefaultPrevented property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Use the Event.ACTIVATE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Use the Event.ADDED constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Use the Event.CANCEL constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Use the Event.CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Use the Event.CLOSE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Use the Event.COMPLETE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Use the Event.CONNECT constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Use the Event.DEACTIVATE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Use the Event.ENTER_FRAME constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Use the Event.ID3 constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Use the Event.INIT constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Use the Event.MOUSE_LEAVE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Use the Event.OPEN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Use the Event.REMOVED constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Use the Event.RENDER constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Use the Event.RESIZE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Use the Event.SCROLL constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Use the Event.SELECT constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Use the Event.SOUND_COMPLETE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Use the Event.TAB_CHILDREN_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Use the Event.TAB_ENABLED_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Use the Event.TAB_INDEX_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Use the Event.UNLOAD constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Use the FocusEvent.FOCUS_IN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Use the FocusEvent.FOCUS_OUT constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Use the FocusEvent.KEY_FOCUS_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Use the FocusEvent.MOUSE_FOCUS_CHANGE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Use the Graphics.beginBitmapFill() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Use the BitmapFilter.quality property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Use KeyboardEvent.charCode instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Use KeyboardEvent.keyCode instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "For more information, see the KeyboardEvent class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "For more information, see KeyboardEvent.ctrlKey, KeyboardEvent.altKey, and KeyboardEvent.shiftKey." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Use the PAGE_DOWN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Use the PAGE_UP constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Use the DELETE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Use the CAPS_LOCK constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Use one of the NUMPAD_0 -> NUMPAD_9 constants instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Use the InteractiveObject.focusRect property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Use the InteractiveObject.contextMenu property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Use the KeyboardEvent.charCode property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Use the KeyboardEvent.keyCode property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Use the Loader.contentLoaderInfo property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "This feature is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "This feature is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Use the LoaderInfo.loaderURL property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Use the LocalConnection.domain property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Use the MenuEvent.contextMenuOwner property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Use the Microphone.getMicrophone() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "If the MovieClip subclass name is A use var mc= new A(); addChild(mc). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Use var mc= new MovieClip(); addChild(mc). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Use var tf= new TextField(); addChild(mc). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Use Container.removeChild(childName). For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Use var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));. For more information, see the Loader and DisplayObjectContainer classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Use DisplayObjectContainer.removeChild(childName) instead. For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Use DisplayObjectContainer.removeChild(childName) instead. For more information, see the DisplayObjectContainer class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Use DisplayObjectContainer.parent.getChildIndex instead. For more information, see the DisplayObjectContainer class, is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Use DisplayObjectContainer.parent.setChildIndex instead. For more information, see the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Use DisplayObjectContainer.getChildAt instead. For more information, see the DisplayObjectContainer class, which is extended by MovieClip." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Use DisplayObjectContainer.numChildren instead. DisplayObjectContainer.addChild always adds the new child to index DisplayObjectContainer.numChildren." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "For more information, see DisplayObject.addChild." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "For more information, see LoaderInfo.bytesLoaded and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "For more information, see LoaderInfo.bytesTotal and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "For equivalent functionality, see flash.net.URLLoader.  The flash.net package also contains package-level functions navigateToURL() and sendToURL()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "For more information, see LoaderInfo.url and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "For more information, see LoaderInfo.url and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Use the MovieClip.mask property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "For more information, see LoaderInfo.swfVersion and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Use the MovieClip.currentFrame property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Use the MovieClip.framesLoaded property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Use the MovieClip.totalFrames property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "For more information, see displayObjectInstance.root." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "For more information, see displayObjectInstance.root." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Use the static propery flash.media.SoundMixer.bufferTime instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "For more information, see the Graphics class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Use the NetStream.bufferTime property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Use the NetStream.currentFPS property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Use the NetStream.videoCodec property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Use the NetStream.audioCodec property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Use the ProductManager.isInstalled property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Use the ProductManager.installedVersion property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Use the ProductManager.isRunning property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Use the Point.add() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Use the Proxy.deleteDescendants property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Use the heapDump() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Use the ProgressEvent.bytesLoaded property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Use the ProgressEvent.bytesTotal property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Use the Rectangle.isEmpty property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Use the SoundTransform.pan property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Use the Sockect.bytesAvailable property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Use the SharedObject.size property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Use the SharedObject.fps property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "This is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Use the Sprite.constructChildren() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Use the Sprite.dropTarget property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Use the Stage.focus property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Use the Stage.focus property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Use the Stage.showDefaultContextMenu property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Use the StyleSheet.styleNames property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Use an instance of URLLoader to load the StyleSheet data, and then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Use the IME.enabled property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Use the IME.enabled property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Use the IME.instance property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Use the IME.conversionMode property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Use the IME.conversionMode property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Use the System.vmVersion property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Use the SWFLoaderInfo.swfVersion property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Use the SWFLoaderInfo.actionScriptVersion property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Use the TextField.defaultTextFormat property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Use the TextField.defaultTextFormat property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Use DisplayObjectContainer.parent.getChildIndex instead. For more information, see the DisplayObjectContainer class, which MovieClip extends." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Use DisplayObjectContainer.parent.setChildIndex instead. For more information, see the DisplayObjectContainer class, which MovieClip extends." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Use DisplayObjectContainer.getChildAt instead. For more information, see the DisplayObjectContainer class, which MovieClip extends." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Use DisplayObjectContainer.numChildren instead.  DisplayObjectContainer.addChild always adds the new child to index DisplayObjectContainer.numChildren." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Use the TextField.replaceSelectedText() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Use the TextField.getLineIndexOfChar() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Use the TextField.selectionBeginIndex property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Use the TextField.selectionEndIndex property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Use the TextField.caretIndex property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Use the Font.enumerateFonts() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Use the TextField.maxScrollV property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Use the TextField.scrollH property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Use the TextField.maxScrollH property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Use the TextField.defaultTextFormat property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Create a temporary TextField and use TextField.getLineMetrics instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Use the TextSnapshot.charCount property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Use the navigateToURL() method in the flash.net package instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Use the sendToURL() method in the flash.net package instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Use the URLLoader.dataFormat property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Use the URLStream.bytesAvailable property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "This property is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Use the URLRequest.applicationDomain property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "To add request headers, set the URLRequest.requestHeaders property to an array of URLRequestHeader objects." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Use an instance of URLLoader to load the XML file, then pass the URLLoaders data to the XMLDocuments constructor. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Use the sendToURL() method in the flash.net package instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Set a URLRequest object postData property and use it with a URLLoader object to load the XML file.  Pass the URLLoaders data to the XMLDocuments constructor. For more information, see the URLLoader, URLRequest and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Use an instance of URLLoader to load the XML file, then pass the URLLoaders data to the XMLDocuments constructor. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "To add request headers, set the URLRequest.requestHeaders property to an array of URLRequestHeader objects." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "For more information, see URLLoader.bytesLoaded and the URLLoader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "For more information, see URLLoader.bytesTotal and the URLLoader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Use an instance of URLLoader to load the XML file, then pass the loaders data to the StyleSheet.parseCSS method. For more information, see the URLLoader and EventDispatcher classes." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Use the URLRequest.contentType property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Check for the possible exceptions thrown by the XMLDocument constructor or the XMLDocument.parseXML method instead. For more information, see XMLDocument." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Button, "The Button class has been renamed SimpleButton." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Container, "The Container class has been renamed DisplayObjectContainer." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Image, "The Image class has been renamed BitmapData." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "The ImageFilter class has been renamed BitmapFilter." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "The ImageSprite class has been renamed Bitmap." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "The ImageLoaderInfo class has been renamed BitmapLoaderInfo." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "The ImeEvent class has been renamed IMEEvent." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Key, "The Key class has been renamed Keyboard." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "The LineMetrics class has been renamed TextLineMetrics." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LoadVars, "For more information, see the URLVariables class, the URLRequest.urlVariables and URLRequest.postData properties, and the URLLoader.dataFormat property." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "The MenuEvent class has been renamed ContextMenuEvent." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "The SystemCapabilities class has been renamed Capabilities." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Use the TextField.getLineMetrics property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Button, "The Button class has been renamed SimpleButton." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Container, "The Container class has been renamed DisplayObjectContainer." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Image, "The Image class has been renamed BitmapData." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "The ImageFilter class has been renamed BitmapFilter." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "The ImageSprite class has been renamed Bitmap." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "The ImageLoaderInfo class has been renamed BitmapLoaderInfo." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "The ImeEvent class has been renamed IMEEvent." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Key, "The Key class has been renamed Keyboard." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "The LineMetrics class has been renamed TextLineMetrics." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "For more information, see the URLVariables class, the URLRequest.urlVariables and URLRequest.postData properties, and the URLLoader.dataFormat property." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "The MenuEvent class has been renamed ContextMenuEvent." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "The SystemCapabilities class has been renamed Capabilities." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Use the TextField.getLineMetrics property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "For more information, see help for the Proxy class, which offers similar functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Use the XMLUI.getProperty method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Use the XMLUI.setProperty method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Use the DisplayObject.accessibilityProperties property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Use the DisplayObject.scale9Grid property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Use the Graphics.drawOval method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Use the NetConnection.connected property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Use the Socket.connected property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Use the URLStream.connected property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Use the SyncEvent.changeList property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Use the TextField.scrollV property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Use the TextField.bottomScrollV property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Use the BitmapDataChannel.RED constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Use the BitmapDataChannel.GREEN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Use the BitmapDataChannel.BLUE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Use the BitmapDataChannel.ALPHA constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Use the is operator instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Use the flash.system.Security.showSettings method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Use the System.useCodePage property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Use the flash.events.EventDispatcher class instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Use the static propery flash.media.SoundMixer.bufferTime instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Create a new instance of the bitmap library symbol class, i.e. new myBitmapName(), instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "For more information, see Loader.load()." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "The MovieClipLoader class has been replaced by the flash.display.Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "The MovieClipLoader class has been replaced by the flash.display.Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "For more information, see addEventListener(eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "For more information, see removeEventListener(eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Use the flash.system.IMEConversionMode.ALPHANUMERIC_FULL constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Use the flash.system.IMEConversionMode.ALPHANUMERIC_HALF constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Use the flash.system.IMEConversionMode.CHINESE constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Use the flash.system.IMEConversionMode.JAPANESE_HIRAGANA constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Use the flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Use the flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Use the flash.system.IMEConversionMode.KOREAN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Use the flash.system.IMEConversionMode.UNKNOWN constant instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "For more information, see addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "For more information, see removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onCancel, "The onCancel event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( cancel, onCancel)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "There is no direct replacement. The willTrigger() method can be used to tell if any listeners have been registered." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onIMEComposition, "The onIMEComposition event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ( imeComposition, handlerName)." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "For more information, see LoaderInfo.url and the Loader class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Use the getFullYear() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Use the setFullYear() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Use the getUTCFullYear() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Use the rate property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Selection, "The Selection class has been removed. For more information, see the addEventListener method of the class you want selection information from." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Selection, "The Selection class has been removed. For more information, see the addEventListener method of the class you want selection information from." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Use the gain property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Color values can be assigned directly using the ColorTransform class constructor or properties." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Color values can be assigned directly using the ColorTransform class constructor or properties." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "See help for the focus related properties of the flash.display.InteractiveObject class." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "See help for the flash.display.Graphics.beginBitmapFill method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "See help for the flash.display.DisplayObject.hitTestObject() method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "See help for the addChild() method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Use the load() method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Use flash.media.SoundChannel.leftPeak and flash.media.SoundChannel.rightPeak to monitor and control the amplitude of a sound channel." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Use the soundTransform property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Use the SoundTransform.pan property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Use the SoundTransform.pan property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Use the bytesLoaded property instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Use the bytesTotal property instead." );
        warningConstantsEN[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Inefficient use of += on a TextField." );
        warningConstantsEN[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Appending text to a TextField using += is many times slower than using the TextField.appendText() method." );
        warningConstantsEN[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Possible missing parentheses." );
        warningConstantsEN[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Function value used where type %s was expected.  Possibly the parentheses () are missing after this function reference." );
        warningConstantsEN[index++] = new AscWarning(kWarning_InstanceOfChanges, "Use of the instanceof operator." );
        warningConstantsEN[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "The instanceof operator is deprecated, use the is operator instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "The allowDomain() event handler is now a standard method, rather than an event callback. For more information, see the new LocalConnection.allowDomain method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "The allowInsecureDomain() event handler is now a standard method, rather than an event callback. For more information, see the new LocalConnection.allowInsecureDomain method." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_call, "The global call() method is no longer supported." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_Color, "The Color class has been removed. Use the flash.geom.ColorTransform class for equivalent functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Color, "The Color class has been removed. Use the flash.geom.ColorTransform class for equivalent functionality." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF files always use exact domain matching rules." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp_capabilities, "The capabilities class has been renamed Capabilities." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_capabilities, "The capabilities class has been renamed Capabilities." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "For more information, see addEventListener(eventName, listener, useCapture, priority )." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "For more information, see removeEventListener(eventName, listener, useCapture)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onComplete, "The onComplete event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('complete', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onHTTPError, "The onHTTPError event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('httpError', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onIOError, "The onIOError event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('ioError', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onProgress, "The onProgress event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('progress', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onSecurityError, "The onSecurityError event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('securityError', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Event_onOpen, "The onOpen event handler is not triggered automatically by Flash Player at run time in ActionScript 3.0.  You must first register this handler for the event using addEventListener ('open', callback_handler)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Possible usage of the ActionScript 2.0 XML class." );
        warningConstantsEN[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Migration issue: The ActionScript 2.0 XML class has been renamed XMLDocument." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadDateCast, "Invalid Date cast operation." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) behaves the same as new Date().toString(). To cast a value to type Date use \"x as Date\" instead of Date(x)." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ImportHidesClass, "Importing a package by the same name as the current class will hide that class identifier in this scope." );
        warningConstantsEN[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Importing a package by the same name as the current class will hide that class identifier in this scope." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "More than one argument has the same name." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "More than one argument named '%s' specified.  References to that argument will always resolve to the last one." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Use the Rectangle.containsRect method instead." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_eval, "This functionality has been removed." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_getVersion, "This functionality has been replaced by the flash.system.Capabilities.version property." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "This functionality has been replaced by the flash.display.MovieClip.framesLoaded property." );
        warningConstantsEN[index++] = new AscWarning(kUnsupportedProp__global, "The _global property has been removed.  For equivalent functionality, use a static member of a class." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadBoolAssignment, "Non-Boolean value used where a Boolean value was expected." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "%s used where a Boolean value was expected.  The expression will be type coerced to Boolean." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadES3TypeProp, "Unknown property." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s is not a recognized property of the dynamic class %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Unknown method." );
        warningConstantsEN[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s is not a recognized method of the dynamic class %s." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Duplicate variable definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Duplicate variable definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Definition name is the same as an imported package name.  Unqualified references to that name will resolve to the package and not the definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Definition name is the same as an imported package name.  Unqualified references to that name will resolve to the package and not the definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Possible attempt to delete a fixed property." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "The declared property %s cannot be deleted. To free associated memory, set its value to null." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsEN[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   };

   static final AscWarning[] warningConstantsDE= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsDE() 
   {
      int index=0;
        warningConstantsDE[index++] = new AscWarning(kWarning_NoTypeDecl, "Typdeklaration fehlt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' hat keine Typdeklaration." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Unlogischer Vergleich mit undefinierter Variable. Nur unklassifizierte Variablen (oder Variablen des Typs *) dürfen undefiniert sein." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Variablen vom Typ %s dürfen nicht undefiniert sein. Der Typ des nicht definierten Werts wird vor dem Vergleich in %s umgewandelt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "Die in dem neuen Ausdruck verwendete Funktion gibt einen Wert zurück. Das Ergebnis ist der Rückgabewert der Funktion und nicht eine neue Instanz dieser Funktion." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Migrationsfehler: Das Ergebnis der neuen %s ist der Rückgabewert von %s und nicht eine neue Instanz dieser Funktion." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() ohne Argumente gibt falsche Werte in ActionScript 3.0 zurück. Boolean() wurde in ActionScript 2.0 als undefiniert zurückgegeben." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Verwendung von Boolean() ohne Argumente." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NumberFromStringChanges, "In ActionScript 3.0 werden Leerzeichen ignoriert und '' gibt 0 zurück. Number() gibt in ActionScript 2.0 den Wert NaN zurück, wenn der Parameter '' lautet oder Leerzeichen enthält." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Migrationsfehler: Wenn die Zahlenfunktion ('') mit einem Argument mit einem leeren String abgerufen wird, wird in ActionScript 3.0 der Wert 0 ausgegeben und in ActionScript 2.0 der Wert NaN." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Format von Array.toString() hat sich geändert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Migrationsfehler: Array.toString()-Behandlung der Null und undefinierter Elemente hat sich geändert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Nicht unterstützte Eigenschaft in ActionScript 2.0." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Migrationsfehler: Die Eigenschaft %s wird nicht mehr unterstützt. %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Nicht unterstützte ActionScript 2.0-Funktion." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Migrationsfehler: Die Methode %s wird nicht mehr unterstützt. %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Migrationsfehler: __resolve wird nicht mehr unterstützt. Verwenden Sie die neue Proxy-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kWarning_LevelNotSupported, "_level wird nicht mehr unterstützt. Weitere Informationen hierzu finden Sie im flash.display-Paket." );
        warningConstantsDE[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Migrationsfehler: _level wird nicht mehr unterstützt. Weitere Informationen hierzu finden Sie im flash.display-Paket." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ClassIsSealed, "Klasse ist versiegelt. Es können keine Mitglieder dynamisch hinzugefügt werden." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Migrationsfehler: %s ist keine dynamische Klasse. Instanzen können keine Mitglieder dynamisch hinzugefügt werden." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Änderung beim Festlegen des Gültigkeitsbereichs für dieses Schlüsselwort. Aus einer Klasseninstanz extrahierte Klassenmethoden werden immer in diese Instanz zurückgegeben. In ActionScript 2.0 wird diese Instanz dynamisch gesucht, abhängig davon, woher die Methode aufgerufen wird." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Migrationsfehler: Methode %s verhält sich in ActionScript 3.0 aufgrund einer Änderung beim Festlegen des Gültigkeitsbereichs für dieses Schlüsselwort anders. Weitere Informationen finden Sie in der Beschreibung für Warnung 1083." );
        warningConstantsDE[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Namespace-Deklaration fehlt (z. B. Variable ist nicht als 'public', 'private' usw. definiert)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "Der Gültigkeitsbereich von %s wird auf den Standard-Namespace festgelegt: %s intern. Der Namespace ist außerhalb dieses Pakets nicht sichtbar." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 durchläuft alle Objekteigenschaften innerhalb einer 'for x in target'-Anweisung in zufälliger Reihenfolge." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Migrationsfehler: ActionScript 3.0 durchläuft alle Objekteigenschaften innerhalb einer 'for x in target'-Anweisung in zufälliger Reihenfolge." );
        warningConstantsDE[index++] = new AscWarning(kWarning_InternalError, "Interner Fehler im Compiler." );
        warningConstantsDE[index++] = new AscWarning(kWarning_InternalError_specific, "Fehlercode: %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler wurde nicht als Listener hinzugefügt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Migrationsfehler: %s" );
        warningConstantsDE[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Der negative Wert ändert sich in einen großen positiven Wert, wenn er einem uint-Datentyp zugewiesen wird." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Negativer Wert wird verwendet, wenn ein uint-Wert (nicht negativ) erwartet wird." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNullComparision, "Unlogischer Vergleich mit null." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Unlogischer Vergleich mit null. Variablen vom Typ %s dürfen nicht null sein." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNaNComparision, "Unlogischer Vergleich mit NaN. Jeder Vergleichsvorgang mit NaN wird als 'false' ausgegeben, da NaN != NaN." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Unlogischer Vergleich mit NaN. Diese Anweisung wird immer als 'false' ausgegeben." );
        warningConstantsDE[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Zuweisung in Bedingung." );
        warningConstantsDE[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Zuweisung in Bedingung. Wollten Sie == statt = eingeben?" );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNullAssignment, "Nicht ausführbare Nullzuweisung." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "Anstelle des erwarteten Werts %s wird null verwendet." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoConstructor, "Konstruktor fehlt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoConstructor_specific, "Für Klasse %s wurde keine Konstruktorfunktion definiert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ConstNotInitialized, "Konstante nicht initialisiert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "Die Konstante wurde nicht initialisiert." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadArrayCast, "Möglicherweise ist der Array-Umwandlungsvorgang ungültig." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) verhält sich genauso wie neues Array(x). Um einen Wert in den Typ Array umzuwandeln, verwenden Sie den Ausdruck 'x' als Array anstelle von Array(x)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "Die super()-Anweisung wurde nicht innerhalb des Konstruktors aufgerufen." );
        warningConstantsDE[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Die super()-Anweisung wird vor dem Aufrufen dieses Konstruktors ausgeführt. Fügen Sie innerhalb des Konstruktors einen super()-Aufruf hinzu, wenn Sie ausdrücklich steuern möchten, wann die Anweisung ausgeführt wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_version, "Verwenden Sie stattdessen Capabilities.version." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Weitere Informationen finden Sie unter InteractiveObject.focusRect." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Highquality, "Weitere Informationen finden Sie unter Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Weitere Informationen finden Sie unter Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Weitere Informationen finden Sie unter Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Quality, "Weitere Informationen finden Sie unter Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Verwenden Sie stattdessen die statische Eigenschaft flash.media.SoundMixer.bufferTime." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Weitere Informationen finden Sie unter LoaderInfo.url." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NewLine, "Verwenden Sie '\n' für 'newline'." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Weitere Informationen finden Sie unter textField.maxScroll." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Level, "Das Stufenkonzept ist in ActionScript 3.0 nicht vorhanden; stattdessen ist der direkte Zugriff auf die Anzeigeliste möglich. Weitere Informationen finden Sie im flash.display-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Parent, "Verwenden Sie stattdessen die übergeordnete Eigenschaft." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Root, "Diese Eigenschaft wurde entfernt. Die nächstliegende Entsprechung ist Stage, die als Stammverzeichnis der ActionScript 3.0-Anzeigeliste dient." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Deklarieren Sie stattdessen den Aufruf als ein Argument der Funktion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Verwenden Sie stattdessen die übergeordnete Eigenschaft." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Weitere Informationen finden Sie unter Sprite.hitArea." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Scroll, "Weitere Informationen hierzu finden Sie in den Eigenschaften scrollH und scrollV der flash.text.TextField-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Anstelle von Pfaden, verwenden Sie MovieClip-Objekte direkt als Argumente." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Weitere Informationen finden Sie unter Video.videoHeight." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Weitere Informationen finden Sie unter Video.videoWidth." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp__Proto__, "Weitere Informationen finden Sie unter __proto__ (veraltet)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Stage, "Weitere Informationen finden Sie unter DisplayObject.stage." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Verwenden Sie stattdessen die Methode registerClass() im flash.net-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_random, "Verwenden Sie stattdessen Math.random()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_chr, "Verwenden Sie stattdessen String.fromCharCode()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Verwenden Sie stattdessen String.fromCharCode()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ord, "Verwenden Sie stattdessen String.charCodeAt()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_mbord, "Verwenden Sie stattdessen String.charCodeAt()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_substring, "Verwenden Sie stattdessen die Methode String.substr." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Verwenden Sie stattdessen die Methode String.substr." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_length, "Verwenden Sie stattdessen die Eigenschaft length des Arguments." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_mblength, "Verwenden Sie stattdessen die Eigenschaft length des Arguments." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Weitere Informationen finden Sie in den Änderungen zu ASnative." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Legen Sie stattdessen die Eigenschaften direkt in der Instanz mithilfe der Punktsyntax (.) fest." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Greifen Sie stattdessen mit der Punktsyntax (.) direkt auf die Eigenschaften zu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Legen Sie stattdessen die Eigenschaften direkt in der Instanz mithilfe der Punktsyntax (.) fest." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Weitere Informationen hierzu finden Sie unter TextEvent.LINK und addEventListener()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Diese Methode wurde in das flash.utils-Paket verschoben." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Ersetzt durch neue Konstruktorfunktion der MovieClip-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Verschoben in das flash.system-Paket. Siehe auch flash.external.ExternalInterface-Klasse für JavaScript/ActionScript-Kommunikation." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_getURL, "Ähnliche Funktionen finden Sie unter flash.net.URLLoader. Das flash.net-Paket enthält außerdem die Paketfunktionen navigateToURL() und sendToURL()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Weitere Informationen finden Sie unter MovieClip.gotoAndPlay()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Weitere Informationen finden Sie unter MovieClip.gotoAndStop()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_play, "Weitere Informationen finden Sie unter MovieClip.play()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_print, "Weitere Informationen finden Sie unter PrintJob.start()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Weitere Informationen finden Sie unter PrintJob." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Weitere Informationen finden Sie unter PrintJob." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_printNum, "Weitere Informationen finden Sie unter PrintJob." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Verwenden Sie Container.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Verschoben in das flash.utils-Paket. Sie können stattdessen die Timer-Klasse verwenden." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Weitere Informationen finden Sie unter MovieClip.nextFrame()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Weitere Informationen finden Sie unter MovieClip.startDrag()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_stop, "Weitere Informationen finden Sie unter MovieClip.stop()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Weitere Informationen finden Sie unter Sound.stopAllSounds()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Weitere Informationen finden Sie unter MovieClip.stopDrag()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Verwenden Sie stattdessen den Punkt-Operator (.) für die with-Anweisung." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Weitere Informationen hierzu finden Sie unter DisplayObject.stage und Stage.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Verwenden Sie stattdessen DisplayObjectContainer.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Verwenden Sie stattdessen DisplayObjectContainer.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Diese Funktion ist keine globale Funktion mehr, sie ist jedoch weiterhin als eine Methode der TimerEvent-, MouseEvent- und KeyboardEvent-Klassen verfügbar." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Weitere Informationen finden Sie unter Video.attachNetStream, Video.attachCamera." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Verwenden Sie die URLLoader-Klasse, um den Ladevorgang auszuführen und das Ergebnis an StyleSheet.parseCSS() weiterzuleiten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "In ActionScript 3.0 werden alle Klassen standardmäßig registriert. Wenn Sie AMF verwenden, erhalten Sie weitere Informationen unter flash.utils.registerClassAlias()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Verwenden Sie Zugriffsfunktionen (get/set-Funktionen) oder die flash.utils.Proxy-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Verwenden Sie Zugriffsfunktionen (get/set-Funktionen) oder die flash.utils.Proxy-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Weitere Informationen finden Sie unter MovieClip.loadMovie()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Weitere Informationen finden Sie unter MovieClip.loadMovieNum()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Weitere Informationen finden Sie unter Loader.load()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Weitere Informationen finden Sie unter Loader.load()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Verwenden Sie die SWF-Klasse, um Sound aus der Bibliothek zu erstellen" );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onStatus, "Die Ereignisprozedur onStatus wird in ActionScript 3.0 zur Laufzeit nicht automatisch vom Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('status', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onID3, "Die Ereignisprozedur onID3 wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('id3', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoad, "Die Ereignisprozedur onLoad wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('load', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onSoundComplete, "Die Ereignisprozedur onSoundComplete wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('soundComplete', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onSetFocus, "Die Ereignisprozedur onSetFocus wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('focusIn', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onResize, "Die Ereignisprozedur onResize wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('resize', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onChanged, "Die Ereignisprozedur onChanged wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('change', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onKillFocus, "Die Ereignisprozedur onKillFocus wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('focusOut', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onScroller, "Die Ereignisprozedur onScroller wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('scroll', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onMouseDown, "Die Ereignisprozedur onMouseDown wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseDown', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onMouseUp, "Die Ereignisprozedur onMouseUp wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseUp', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onMouseMove, "Die Ereignisprozedur onMouseMove wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseMove', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onMouseWheel, "Die Ereignisprozedur onMouseWheel wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseWheel', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onKeyDown, "Die Ereignisprozedur onKeyDown wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('keyDown', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onKeyUp, "Die Ereignisprozedur onKeyUp wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('keyUp', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onData, "Die Ereignisprozedur onData wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('data', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "Die Ereignisprozedur onHTTPStatus wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('httpStatus', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onDragOut, "Die Ereignisprozedur onDragOut wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseOut', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onDragOver, "Die Ereignisprozedur onDragOver wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseOver', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onPress, "Die Ereignisprozedur onPress wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseDown', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onRelease, "Die Ereignisprozedur onRelease wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('click', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "Die Ereignisprozedur onReleaseOutside wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseUp', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onRollOut, "Die Ereignisprozedur onRollOut wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseOut', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onRollOver, "Die Ereignisprozedur onRollOver wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('mouseOver', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onActivity, "Die Ereignisprozedur onActivity wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('activity', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onSelect, "Die Ereignisprozedur onSelect wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('menuSelect', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onEnterFrame, "onEnterFrame wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('enterFrame', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onUnload, "Die Ereignisprozedur onUnload wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('unload', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadComplete, "onLoadComplete wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('load', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadError, "Die Ereignisprozedur onLoadError wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('error', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadInit, "Die Ereignisprozedur onLoadInit wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('init', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadProgress, "Die Ereignisprozedur onLoadProgress wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('progress', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onLoadStart, "onLoadStart wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('start', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onClose, "Die Ereignisprozedur onClose wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('close', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onConnect, "Die Ereignisprozedur onConnect wird in ActionScript 3.0 nicht automatisch von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('connect', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onXML, "onXML wird in ActionScript 3.0 nicht automatisch von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('xml', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Verwenden Sie stattdessen die Eigenschaft hasChildNodes." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "Die XMLEvent-Klasse ist veraltet und das xml-Ereignis wird nicht mehr gesendet. Beim Laden der Datei wird nur das data-Ereignis gesendet." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "Die XMLDoc-Klasse wurde in XMLDocument umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Verwenden Sie stattdessen die Eigenschaft Accessibility.active." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Verwenden Sie stattdessen die Konstante ActivityEvent.ACTIVITY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Verwenden Sie stattdessen DisplayObjectContainer.parent.getChildIndex. Lesen Sie die Hilfe zur DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Verwenden Sie stattdessen DisplayObjectContainer.parent.setChildIndex. Lesen Sie die Hilfe zur DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Verwenden Sie stattdessen DisplayObjectContainer.getChildAt. Lesen Sie die Hilfe zur DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Verwenden Sie stattdessen DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild fügt das neue untergeordnete Element immer zum Index DisplayObjectContainer.numChildren hinzu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Verwenden Sie stattdessen die Eigenschaft ByteArray.bytesAvailable." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Verwenden Sie stattdessen die Eigenschaft ByteArray.position." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Verwenden Sie stattdessen die Eigenschaft ByteArray.position." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Verwenden Sie stattdessen die Methode Camera.getCamera()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Verwenden Sie stattdessen die Eigenschaft Camera.currentFPS." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Verwenden Sie stattdessen die Eigenschaft Camera.keyFrameInterval." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Verwenden Sie stattdessen die Eigenschaft Camera.loopback." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Verwenden Sie stattdessen die Eigenschaft ColorTransform.color." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Verwenden Sie stattdessen die Eigenschaft ColorTransform.color." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Verwenden Sie stattdessen die Eigenschaft Container.textSnapshot." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Verwenden Sie stattdessen die Methode ContextMenu.clone()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Verwenden Sie stattdessen die Eigenschaft ContextMenu.forwardAndBack." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Verwenden Sie stattdessen die Methode ContextMenuItem.clone()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Verwenden Sie stattdessen die Eigenschaft CustomActions.actionsList." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Verwenden Sie stattdessen die Konstante DataEvent.DATA." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scaleX." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scaleX." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scaleY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scaleY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mouseX." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mouseX." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mouseY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mouseY." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.name." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.parent." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.mask." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.visible." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.x." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.y." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.rotation." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.alpha." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.width." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.height." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Verwenden Sie stattdessen die Eigenschaft ExternalInterface.available." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Verwenden Sie stattdessen die Konstante ErrorEvent.ERROR." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Verwenden Sie stattdessen die Eigenschaft Event.isDefaultPrevented." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Verwenden Sie stattdessen die Konstante Event.ACTIVATE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Verwenden Sie stattdessen die Konstante Event.ADDED." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Verwenden Sie stattdessen die Konstante Event.CANCEL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante Event.CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Verwenden Sie stattdessen die Konstante Event.CLOSE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Verwenden Sie stattdessen die Konstante Event.COMPLETE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Verwenden Sie stattdessen die Konstante Event.CONNECT." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Verwenden Sie stattdessen die Konstante Event.DEACTIVATE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Verwenden Sie stattdessen die Konstante Event.ENTER_FRAME." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Verwenden Sie stattdessen die Konstante Event.ID3." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Verwenden Sie stattdessen die Konstante Event.INIT." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Verwenden Sie stattdessen die Konstante Event.MOUSE_LEAVE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Verwenden Sie stattdessen die Konstante Event.OPEN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Verwenden Sie stattdessen die Konstante Event.REMOVED." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Verwenden Sie stattdessen die Konstante Event.RENDER." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Verwenden Sie stattdessen die Konstante Event.RESIZE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Verwenden Sie stattdessen die Konstante Event.SCROLL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Verwenden Sie stattdessen die Konstante Event.SELECT." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Verwenden Sie stattdessen die Konstante Event.SOUND_COMPLETE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante Event.TAB_CHILDREN_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante Event.TAB_ENABLED_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante Event.TAB_INDEX_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Verwenden Sie stattdessen die Konstante Event.UNLOAD." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Verwenden Sie stattdessen die Konstante FocusEvent.FOCUS_IN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Verwenden Sie stattdessen die Konstante FocusEvent.FOCUS_OUT." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Verwenden Sie stattdessen die Konstante FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Verwenden Sie stattdessen die Methode Graphics.beginBitmapFill()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Verwenden Sie stattdessen die Eigenschaft BitmapFilter.quality." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Verwenden Sie stattdessen KeyboardEvent.charCode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Verwenden Sie stattdessen KeyboardEvent.keyCode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Weitere Informationen finden Sie in der KeyboardEvent-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Weitere Informationen finden Sie unter KeyboardEvent.ctrlKey, KeyboardEvent.altKey und KeyboardEvent.shiftKey." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Verwenden Sie stattdessen die Konstante PAGE_DOWN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Verwenden Sie stattdessen die Konstante PAGE_UP." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Verwenden Sie stattdessen die Konstante DELETE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Verwenden Sie stattdessen die Konstante CAPS_LOCK." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Verwenden Sie stattdessen eine der Konstanten NUMPAD_0 -> NUMPAD_9." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Verwenden Sie stattdessen die Eigenschaft InteractiveObject.focusRect." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Verwenden Sie stattdessen die Eigenschaft InteractiveObject.contextMenu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Verwenden Sie stattdessen die Eigenschaft KeyboardEvent.charCode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Verwenden Sie stattdessen die Eigenschaft KeyboardEvent.keyCode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Verwenden Sie stattdessen die Eigenschaft Loader.contentLoaderInfo." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Diese Funktion wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Verwenden Sie stattdessen die Eigenschaft LoaderInfo.loaderURL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Verwenden Sie stattdessen die Eigenschaft LocalConnection.domain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Verwenden Sie stattdessen die Eigenschaft MenuEvent.contextMenuOwner." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Verwenden Sie stattdessen die Methode Microphone.getMicrophone()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Wenn der Name der MovieClip-Unterklasse A lautet, verwenden Sie var mc= new A(); addChild(mc). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Verwenden Sie var mc= new MovieClip(); addChild(mc). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Verwenden Sie var tf= new TextField(); addChild(mc). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Verwenden Sie Container.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Verwenden Sie var l = new Loader(); addChild(l); l.load(new URLRequest(\"Ihre URL\"));. Weitere Informationen finden Sie in den Klassen Loader und DisplayObjectContainer." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Verwenden Sie stattdessen DisplayObjectContainer.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Verwenden Sie stattdessen DisplayObjectContainer.removeChild(childName). Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Verwenden Sie stattdessen DisplayObjectContainer.parent.getChildIndex. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Verwenden Sie stattdessen DisplayObjectContainer.parent.setChildIndex. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Verwenden Sie stattdessen DisplayObjectContainer.getChildAt. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Verwenden Sie stattdessen DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild fügt das neue untergeordnete Element immer zum Index DisplayObjectContainer.numChildren hinzu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Weitere Informationen finden Sie unter DisplayObject.addChild." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Weitere Informationen finden Sie in den Klassen LoaderInfo.bytesLoaded und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Weitere Informationen finden Sie in den Klassen LoaderInfo.bytesTotal und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Ähnliche Funktionen finden Sie unter flash.net.URLLoader. Das flash.net-Paket enthält außerdem die Paketfunktionen navigateToURL() und sendToURL()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Weitere Informationen finden Sie in den Klassen LoaderInfo.url und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Weitere Informationen finden Sie in den Klassen LoaderInfo.url und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Verwenden Sie stattdessen die Eigenschaft MovieClip.mask." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Weitere Informationen finden Sie in den Klassen LoaderInfo.swfVersion und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Verwenden Sie stattdessen die Eigenschaft MovieClip.currentFrame." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Verwenden Sie stattdessen die Eigenschaft MovieClip.framesLoaded." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Verwenden Sie stattdessen die Eigenschaft MovieClip.totalFrames." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Weitere Informationen finden Sie unter displayObjectInstance.root." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Weitere Informationen finden Sie unter displayObjectInstance.root." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Verwenden Sie stattdessen die statische Eigenschaft flash.media.SoundMixer.bufferTime." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Weitere Informationen finden Sie in der Graphics-Klasse." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Verwenden Sie stattdessen die Eigenschaft NetStream.bufferTime." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Verwenden Sie stattdessen die Eigenschaft NetStream.currentFPS." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Verwenden Sie stattdessen die Eigenschaft NetStream.videoCodec." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Verwenden Sie stattdessen die Eigenschaft NetStream.audioCodec." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Verwenden Sie stattdessen die Eigenschaft ProductManager.isInstalled." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Verwenden Sie stattdessen die Eigenschaft ProductManager.installedVersion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Verwenden Sie stattdessen die Eigenschaft ProductManager.isRunning." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Verwenden Sie stattdessen die Methode Point.add()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Verwenden Sie stattdessen die Eigenschaft Proxy.deleteDescendants." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Verwenden Sie stattdessen die Methode heapDump()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Verwenden Sie stattdessen die Eigenschaft ProgressEvent.bytesLoaded." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Verwenden Sie stattdessen die Eigenschaft ProgressEvent.bytesTotal." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Verwenden Sie stattdessen die Eigenschaft Rectangle.isEmpty." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Verwenden Sie stattdessen die Eigenschaft SoundTransform.pan." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Verwenden Sie stattdessen die Eigenschaft Sockect.bytesAvailable." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Verwenden Sie stattdessen die Eigenschaft SharedObject.size." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Verwenden Sie stattdessen die Eigenschaft SharedObject.fps." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Diese Methode wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Verwenden Sie stattdessen die Methode Sprite.constructChildren()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Verwenden Sie stattdessen die Eigenschaft Sprite.dropTarget." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Verwenden Sie stattdessen die Eigenschaft Stage.focus." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Verwenden Sie stattdessen die Eigenschaft Stage.focus." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Verwenden Sie stattdessen die Eigenschaft Stage.showDefaultContextMenu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Verwenden Sie stattdessen die Eigenschaft StyleSheet.styleNames." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Verwenden Sie eine Instanz von URLLoader, um die StyleSheet-Daten zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Verwenden Sie stattdessen die Eigenschaft IME.enabled." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Verwenden Sie stattdessen die Eigenschaft IME.enabled." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Verwenden Sie stattdessen die Eigenschaft IME.instance." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Verwenden Sie stattdessen die Eigenschaft IME.conversionMode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Verwenden Sie stattdessen die Eigenschaft IME.conversionMode." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Verwenden Sie stattdessen die Eigenschaft System.vmVersion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Verwenden Sie stattdessen die Eigenschaft SWFLoaderInfo.swfVersion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Verwenden Sie stattdessen die Eigenschaft SWFLoaderInfo.actionScriptVersion." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Verwenden Sie stattdessen die Eigenschaft TextField.defaultTextFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Verwenden Sie stattdessen die Eigenschaft TextField.defaultTextFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Verwenden Sie stattdessen DisplayObjectContainer.parent.getChildIndex. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Verwenden Sie stattdessen DisplayObjectContainer.parent.setChildIndex. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Verwenden Sie stattdessen DisplayObjectContainer.getChildAt. Weitere Informationen finden Sie in der DisplayObjectContainer-Klasse, die durch MovieClip erweitert wird." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Verwenden Sie stattdessen DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild fügt das neue untergeordnete Element immer zum Index DisplayObjectContainer.numChildren hinzu." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Verwenden Sie stattdessen die Methode TextField.replaceSelectedText()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Verwenden Sie stattdessen die Methode TextField.getLineIndexOfChar()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Verwenden Sie stattdessen die Eigenschaft TextField.selectionBeginIndex." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Verwenden Sie stattdessen die Eigenschaft TextField.selectionEndIndex." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Verwenden Sie stattdessen die Eigenschaft TextField.caretIndex." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Verwenden Sie stattdessen die Methode Font.enumerateFonts()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Verwenden Sie stattdessen die Eigenschaft TextField.maxScrollV." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Verwenden Sie stattdessen die Eigenschaft TextField.scrollH." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Verwenden Sie stattdessen die Eigenschaft TextField.maxScrollH." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Verwenden Sie stattdessen die Eigenschaft TextField.defaultTextFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Erstellen Sie ein temporäres Textfeld und verwenden Sie stattdessen TextField.getLineMetrics." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Verwenden Sie stattdessen die Eigenschaft TextSnapshot.charCount." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Verwenden Sie stattdessen die Methode navigateToURL() im flash.net-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Verwenden Sie stattdessen die Methode sendToURL() im flash.net-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Verwenden Sie stattdessen die Eigenschaft URLLoader.dataFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Verwenden Sie stattdessen die Eigenschaft URLStream.bytesAvailable." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Diese Eigenschaft wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Verwenden Sie stattdessen die Eigenschaft URLRequest.applicationDomain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Um Anforderungsheader hinzuzufügen, setzen Sie die Eigenschaft URLRequest.requestHeaders auf ein Array mit URLRequestHeader-Objekten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Verwenden Sie eine Instanz von URLLoader, um die XML-Datei zu laden, und leiten Sie dann die Daten des URLLoaders an den Konstruktor von XMLDocument weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Verwenden Sie stattdessen die Methode sendToURL() im flash.net-Paket." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Legen Sie eine postData-Eigenschaft für das URLRequest-Objekt fest und verwenden Sie sie mit einem URLLoader-Objekt, um die XML-Datei zu laden. Leiten Sie die Daten des URLLoaders an den Konstruktor von XMLDocument weiter. Weitere Informationen finden Sie in den Klassen URLLoader, URLRequest und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Verwenden Sie eine Instanz von URLLoader, um die XML-Datei zu laden, und leiten Sie dann die Daten des URLLoaders an den Konstruktor von XMLDocument weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Um Anforderungsheader hinzuzufügen, setzen Sie die Eigenschaft URLRequest.requestHeaders auf ein Array mit URLRequestHeader-Objekten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Weitere Informationen finden Sie in den Klassen URLLoader.bytesLoaded und URLLoader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Weitere Informationen finden Sie in den Klassen URLLoader.bytesTotal und URLLoader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Verwenden Sie eine Instanz von URLLoader, um die XML-Datei zu laden, und leiten Sie dann die Daten des Loaders an die Methode StyleSheet.parseCSS weiter. Weitere Informationen finden Sie in den Klassen URLLoader und EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Verwenden Sie stattdessen die Eigenschaft URLRequest.contentType." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Überprüfen Sie die möglichen Ausnahmen, die vom XMLDocument-Konstruktor ausgegeben werden könnten, oder verwenden Sie stattdessen die Methode XMLDocument.parseXML. Weitere Informationen finden Sie unter XMLDocument." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Button, "Die Button-Klasse wurde in SimpleButton umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Container, "Die Container-Klasse wurde in DisplayObjectContainer umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Image, "Die Image-Klasse wurde in BitmapData umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "Die ImageFilter-Klasse wurde in BitmapFilter umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "Die ImageSprite-Klasse wurde in Bitmap umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "Die ImageLoaderInfo-Klasse wurde in BitmapLoaderInfo umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "Die ImeEvent-Klasse wurde in IMEEvent umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Key, "Die Key-Klasse wurde in Keyboard umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "Die LineMetrics-Klasse wurde in TextLineMetrics umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Weitere Informationen hierzu finden Sie in der Klasse URLVariables und den Eigenschaften URLRequest.urlVariables, URLRequest.postData und URLLoader.dataFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "Die MenuEvent-Klasse wurde in ContextMenuEvent umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "Die SystemCapabilities-Klasse wurde in Capabilities umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Verwenden Sie stattdessen die Eigenschaft TextField.getLineMetrics." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Button, "Die Button-Klasse wurde in SimpleButton umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Container, "Die Container-Klasse wurde in DisplayObjectContainer umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Image, "Die Image-Klasse wurde in BitmapData umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "Die ImageFilter-Klasse wurde in BitmapFilter umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "Die ImageSprite-Klasse wurde in Bitmap umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "Die ImageLoaderInfo-Klasse wurde in BitmapLoaderInfo umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "Die ImeEvent-Klasse wurde in IMEEvent umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Key, "Die Key-Klasse wurde in Keyboard umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "Die LineMetrics-Klasse wurde in TextLineMetrics umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Weitere Informationen hierzu finden Sie in der Klasse URLVariables und den Eigenschaften URLRequest.urlVariables, URLRequest.postData und URLLoader.dataFormat." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "Die MenuEvent-Klasse wurde in ContextMenuEvent umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "Die SystemCapabilities-Klasse wurde in Capabilities umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Verwenden Sie stattdessen die Eigenschaft TextField.getLineMetrics." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Weitere Informationen finden Sie in der Hilfe zur Proxy-Klasse, die ähnliche Funktionen ermöglicht." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Verwenden Sie stattdessen die Methode XMLUI.getProperty." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Verwenden Sie stattdessen die Methode XMLUI.setProperty." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.accessibilityProperties." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Verwenden Sie stattdessen die Eigenschaft DisplayObject.scale9Grid." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Verwenden Sie stattdessen die Methode Graphics.drawOval." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Verwenden Sie stattdessen die Eigenschaft NetConnection.connected." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Verwenden Sie stattdessen die Eigenschaft Socket.connected." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Verwenden Sie stattdessen die Eigenschaft URLStream.connected." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Verwenden Sie stattdessen die Eigenschaft SyncEvent.changeList." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Verwenden Sie stattdessen die Eigenschaft TextField.scrollV." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Verwenden Sie stattdessen die Eigenschaft TextField.bottomScrollV." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Verwenden Sie stattdessen die Konstante BitmapDataChannel.RED." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Verwenden Sie stattdessen die Konstante BitmapDataChannel.GREEN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Verwenden Sie stattdessen die Konstante BitmapDataChannel.BLUE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Verwenden Sie stattdessen die Konstante BitmapDataChannel.ALPHA." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Verwenden Sie stattdessen den is-Operator." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Verwenden Sie stattdessen die Methode flash.system.Security.showSettings." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Verwenden Sie stattdessen die Eigenschaft System.useCodePage." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Verwenden Sie stattdessen die Eigenschaft flash.events.EventDispatcher." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Verwenden Sie stattdessen die statische Eigenschaft flash.media.SoundMixer.bufferTime." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Erstellen Sie stattdessen eine neue Instanz der bitmap library symbol-Klasse, z. B. new myBitmapName()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Weitere Informationen finden Sie unter Loader.load()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "Die MovieClipLoader-Klasse wurde durch die flash.display.Loader-Klasse ersetzt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "Die MovieClipLoader-Klasse wurde durch die flash.display.Loader-Klasse ersetzt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.CHINESE." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.KOREAN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Verwenden Sie stattdessen die Konstante flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onCancel, "Die Ereignisprozedur onCancel wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren (cancel, onCancel)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Es gibt keinen direkten Ersatz. Mit der Methode willTrigger() können Sie feststellen, ob Listener registriert wurden." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onIMEComposition, "Die Ereignisprozedur onIMEComposition wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren (imeComposition, handlerName)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Weitere Informationen finden Sie in den Klassen LoaderInfo.url und Loader." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Verwenden Sie stattdessen die Methode getFullYear()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Verwenden Sie stattdessen die Methode setFullYear()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Verwenden Sie stattdessen die Methode getUTCFullYear()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Verwenden Sie stattdessen die Eigenschaft rate." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Selection, "Die Selection-Klasse wurde entfernt. Weitere Informationen finden Sie in der Methode addEventListener der Klasse, aus der Sie Auswahlinformationen abrufen möchten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Selection, "Die Selection-Klasse wurde entfernt. Weitere Informationen finden Sie in der Methode addEventListener der Klasse, aus der Sie Auswahlinformationen abrufen möchten." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Verwenden Sie stattdessen die Eigenschaft gain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Farbwerte können direkt mit dem Konstruktor oder den Eigenschaften der ColorTransform-Klasse zugewiesen werden." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Farbwerte können direkt mit dem Konstruktor oder den Eigenschaften der ColorTransform-Klasse zugewiesen werden." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Informationen zu fokusbezogenen Eigenschaften der flash.display.InteractiveObject-Klasse finden Sie in der Hilfe." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Siehe Hilfe zur Methode flash.display.Graphics.beginBitmapFill." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Siehe Hilfe zur Methode flash.display.DisplayObject.hitTestObject()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Siehe Hilfe zur Methode addChild()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Verwenden Sie stattdessen die Methode load()." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Verwenden Sie flash.media.SoundChannel.leftPeak und flash.media.SoundChannel.rightPeak, um die Lautstärke des Soundkanals zu überwachen und zu steuern." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Verwenden Sie stattdessen die Eigenschaft soundTransform." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Verwenden Sie stattdessen die Eigenschaft SoundTransform.pan." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Verwenden Sie stattdessen die Eigenschaft SoundTransform.pan." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Verwenden Sie stattdessen die Eigenschaft bytesLoaded." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Verwenden Sie stattdessen die Eigenschaft bytesTotal." );
        warningConstantsDE[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Ineffiziente Verwendung von += in einem TextField." );
        warningConstantsDE[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Das Anhängen von Text an ein TextField mit += ist wesentlich langsamer als das Verwenden der Methode TextField.appendText()." );
        warningConstantsDE[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Möglicherweise fehlen Klammern." );
        warningConstantsDE[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Anstelle des erwarteten Werts %s wird der Funktionswert verwendet. Möglicherweise fehlen hinter dieser Funktionsreferenz die Klammern ()." );
        warningConstantsDE[index++] = new AscWarning(kWarning_InstanceOfChanges, "Verwenden Sie den instanceof-Operator." );
        warningConstantsDE[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "Der instanceof-Operator ist veraltet; verwenden Sie stattdessen den is-Operator." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Die Ereignisprozedur allowDomain() ist jetzt kein Ereignisrückruf mehr, sondern eine Standardmethode. Weitere Informationen finden Sie in der neuen Methode LocalConnection.allowDomain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Die Ereignisprozedur allowInsecureDomain() ist jetzt kein Ereignisrückruf mehr, sondern eine Standardmethode. Weitere Informationen finden Sie in der neuen Methode LocalConnection.allowInsecureDomain." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_call, "Die globale Methode call() wird nicht mehr unterstützt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_Color, "Die Color-Klasse wurde entfernt. Verwenden Sie die flash.geom.ColorTransform-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Color, "Die Color-Klasse wurde entfernt. Verwenden Sie die flash.geom.ColorTransform-Klasse für ähnliche Funktionen." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "In SWF-Dateien von ActionScript 3.0 werden immer Regeln für die exakte Übereinstimmung von Domänen verwendet." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp_capabilities, "Die capabilities-Klasse wurde in Capabilities umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_capabilities, "Die capabilities-Klasse wurde in Capabilities umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Weitere Informationen finden Sie unter addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Weitere Informationen finden Sie unter removeEventListener (eventName, listener, useCapture)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onComplete, "Die Ereignisprozedur onComplete wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('complete', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onHTTPError, "Die Ereignisprozedur onHTTPError wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('httpError', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onIOError, "Die Ereignisprozedur onIOError wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('ioError', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onProgress, "Die Ereignisprozedur onProgress wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('progress', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onSecurityError, "Die Ereignisprozedur onSecurityError wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('securityError', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Event_onOpen, "Die Ereignisprozedur onOpen wird in ActionScript 3.0 nicht automatisch zur Laufzeit von Flash Player ausgelöst. Sie müssen die Prozedur für das Ereignis mit addEventListener zuerst registrieren ('open', callback_handler)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Mögliche Verwendung der XML-Klasse von ActionScript 2.0." );
        warningConstantsDE[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Migrationsfehler: Die ActionScript 2.0-Klasse wurde in XMLDocument umbenannt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadDateCast, "Ungültiger Date-Umwandlungsvorgang." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) verhält sich genauso wie neues Date().toString(). Um einen Wert in den Typ Date umzuwandeln, verwenden Sie 'x as Date' anstelle von Date(x)." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ImportHidesClass, "Durch das Importieren eines Pakets mit demselben Namen wie die aktuelle Klasse wird die Klassen-ID in diesem Gültigkeitsbereich ausgeblendet." );
        warningConstantsDE[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Durch das Importieren eines Pakets mit demselben Namen wie die aktuelle Klasse wird die Klassen-ID in diesem Gültigkeitsbereich ausgeblendet." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Es sind mehrere Argumente mit demselben Namen vorhanden." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Es sind mehrere Argumente mit dem Namen '%s' vorhanden. Verweise auf dieses Argument beziehen sich immer auf das letzte Argument." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Verwenden Sie stattdessen die Methode Rectangle.containsRect." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_eval, "Diese Funktion wurde entfernt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Diese Funktion wurde durch die Eigenschaft flash.system.Capabilities.version ersetzt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Diese Funktion wurde durch die Eigenschaft flash.display.MovieClip.framesLoaded ersetzt." );
        warningConstantsDE[index++] = new AscWarning(kUnsupportedProp__global, "Die Eigenschaft _global wurde entfernt. Verwenden Sie für ähnliche Funktionen ein statisches Mitglied einer Klasse." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadBoolAssignment, "Anstelle des erwarteten Booleschen Werts wird ein nicht Boolescher Wert verwendet." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Anstelle des erwarteten Booleschen Werts wird %s verwendet. Der Ausdruck wird vor dem Vergleich in einen Booleschen Wert umgewandelt." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadES3TypeProp, "Unbekannte Eigenschaft." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s ist keine erkannte Eigenschaft der dynamischen Klasse %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Unbekannte Methode." );
        warningConstantsDE[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s ist keine erkannte Methode der dynamischen Klasse %s." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Doppelte Variablendefinition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Doppelte Variablendefinition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Der Definitionsname ist identisch mit dem Namen eines importierten Pakets. Unzureichend definierte Verweise auf diesen Namen beziehen sich auf das Paket, nicht auf die Definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Der Definitionsname ist identisch mit dem Namen eines importierten Pakets. Unzureichend definierte Verweise auf diesen Namen beziehen sich auf das Paket, nicht auf die Definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Möglicherweise wird versucht, eine feste Eigenschaft zu löschen." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Die deklarierte Eigenschaft %s darf nicht gelöscht werden. Um zugewiesenen Speicherplatz verfügbar zu machen, setzen Sie ihren Wert auf null." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsDE[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   };

   static final AscWarning[] warningConstantsES= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsES() 
   {
      int index=0;
        warningConstantsES[index++] = new AscWarning(kWarning_NoTypeDecl, "Falta la declaración de tipo." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' no tiene ninguna declaración de tipo." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Comparación no lógica con undefined.  Sólo las variables sin ningún tipo (o las variables de tipo *) pueden ser undefined." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Las variables de tipo %s no pueden ser undefined. Se forzará la conversión del valor undefined a %s antes de la comparación." );
        warningConstantsES[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "La función que se utiliza en la nueva expresión devuelve un valor.  El resultado será el devuelto por la función y no una nueva instancia de dicha función." );
        warningConstantsES[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Problema de migración: el resultado del nuevo %s será el valor devuelto por %s y no una nueva instancia de dicha función." );
        warningConstantsES[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Si Boolean() no tiene argumentos, devuelve false en ActionScript 3.0.  Boolean() devolvía undefined en ActionScript 2.0." );
        warningConstantsES[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Se ha utilizado Boolean() sin argumentos." );
        warningConstantsES[index++] = new AscWarning(kWarning_NumberFromStringChanges, "En ActionScript 3.0, el espacio en blanco se ignora y '' devuelve 0. Number() devuelve NaN en ActionScript 2.0 si el parámetro es '' o si contiene un espacio en blanco." );
        warningConstantsES[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Problema de migración: si se llama a la función Number('') con un argumento de cadena vacía, devuelve 0 en ActionScript 3.0 y NaN en ActionScript 2.0." );
        warningConstantsES[index++] = new AscWarning(kWarning_ArrayToStringChanges, "El formato de Array.toString() ha cambiado." );
        warningConstantsES[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Problema de migración: ha cambiado la gestión de los elementos undefined y null por parte de Array.toString()." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Propiedad de ActionScript 2.0 no admitida." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Problema de migración: la propiedad %s ya no se admite.  %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Función de ActionScript 2.0 no admitida." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Problema de migración: el método %s ya no se admite.  %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Problema de migración: __resolve ya no se admite.  Utilice la nueva clase Proxy para una funcionalidad similar." );
        warningConstantsES[index++] = new AscWarning(kWarning_LevelNotSupported, "_level ya no se admite. Para más información, consulte el paquete flash.display." );
        warningConstantsES[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Problema de migración: _level ya no se admite. Para más información, consulte el paquete flash.display." );
        warningConstantsES[index++] = new AscWarning(kWarning_ClassIsSealed, "La clase está sellada.  No pueden agregarse miembros dinámicamente." );
        warningConstantsES[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Problema de migración: %s no es una clase dinámica.  No se pueden agregar miembros dinámicamente a las instancias." );
        warningConstantsES[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Cambio del ámbito para la palabra clave this.  Los métodos de clase extraídos de la instancia de una clase siempre resolverán this de nuevo en dicha instancia.  En ActionScript 2.0 this se busca dinámicamente basándose en el lugar desde donde se invoca el método." );
        warningConstantsES[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Problema de migración: el comportamiento del método %s será distinto en ActionScript 3.0 debido al cambio del ámbito para la palabra clave this. Consulte la entrada de la advertencia 1083 para obtener más información." );
        warningConstantsES[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Falta la declaración del espacio de nombres (es decir, no se ha definido la variable para ser public, private, etc.)." );
        warningConstantsES[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s tendrá el ámbito del espacio de nombres predeterminado: %s interno.  No será visible fuera de este paquete." );
        warningConstantsES[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 se repite en las propiedades del objeto de una sentencia \"for x in target\" en orden aleatorio." );
        warningConstantsES[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Problema de migración: ActionScript 3.0 se repite en las propiedades del objeto de una sentencia \"for x in target\" en orden aleatorio." );
        warningConstantsES[index++] = new AscWarning(kWarning_InternalError, "Error interno en el compilador." );
        warningConstantsES[index++] = new AscWarning(kWarning_InternalError_specific, "Código de error: %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler no se agregó como detector." );
        warningConstantsES[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Problema de migración: %s" );
        warningConstantsES[index++] = new AscWarning(kWarning_NegativeUintLiteral, "El valor negativo se convertirá en un valor positivo elevado al asignarlo a un tipo de datos uint." );
        warningConstantsES[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Valor negativo utilizado cuando se espera un valor uint (no negativo)." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNullComparision, "Comparación no lógica con null." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Comparación no lógica con null.  Las variables de tipo %s no pueden ser null." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNaNComparision, "Comparación no lógica con NaN. Toda operación de comparación en la que intervenga NaN dará como resultado false porque NaN != NaN." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Comparación no lógica con NaN.  Esta sentencia siempre da como resultado false." );
        warningConstantsES[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Asignación con lógica condicional." );
        warningConstantsES[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Asignación con lógica condicional.  ¿Quiso utilizar == y no =?" );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNullAssignment, "Asignación null imposible." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "Se utilizó null donde se esperaba un valor %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoConstructor, "Falta el constructor." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoConstructor_specific, "No se especificó ninguna función constructora para la clase %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_ConstNotInitialized, "Constante no inicializada." );
        warningConstantsES[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "La constante no se inicializó." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadArrayCast, "Operación de conversión Array posiblemente no válida." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadArrayCast_specific, "El comportamiento de Array(x) es el mismo que el de la nueva Array(x).  Para convertir un valor en tipo Array, utilice la expresión \"x as Array\"en vez de Array(x)." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "No se llamó a la sentencia super() en el constructor." );
        warningConstantsES[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "Se ejecutará la sentencia super() antes de acceder a este constructor.  Agregue una llamada a super() en el constructor si quiere controlar de forma explícita cuándo se ejecuta." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_version, "Utilice Capabilities.version en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Para más información, consulte InteractiveObject.focusRect." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Highquality, "Para más información, consulte Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Para más información, consulte Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Para más información, consulte Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Quality, "Para más información, consulte Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Utilice la propiedad estática flash.media.SoundMixer.bufferTime en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Esta funcionalidad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Para más información, consulte LoaderInfo.url." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Esta funcionalidad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NewLine, "Utilice '\n' para una nueva línea." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Para más información, consulte textField.maxScroll." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Level, "El concepto de niveles no existe en ActionScript 3.0; éste proporciona acceso directo a la lista de visualización. Consulte el paquete flash.display para obtener más información." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Parent, "Utilice la propiedad parent en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Root, "Se ha quitado esta propiedad. El equivalente más próximo es Stage, que funciona como raíz de la lista de visualización de ActionScript 3.0." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "En su lugar, intente declarar caller como argumento de la función." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Esta funcionalidad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Utilice la propiedad parent en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Esta funcionalidad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Para más información, consulte Sprite.hitArea." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Scroll, "Para más información, consulte las propiedades scrollH y scrollV de la clase flash.text.TextField." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Utilice objetos MovieClip directamente como argumentos en lugar de rutas." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Para más información, consulte Video.videoHeight." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Para más información, consulte Video.videoWidth." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp__Proto__, "Para más información, consulte __proto__ (obsoleta)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Stage, "Para más información, consulte DisplayObject.stage." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Utilice el método registerClass() del paquete flash.net en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_random, "Utilice Math.random() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_chr, "Utilice String.fromCharCode() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Utilice String.fromCharCode() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ord, "Utilice String.charCodeAt() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_mbord, "Utilice String.charCodeAt() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_substring, "Utilice el método String.substr en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Utilice el método String.substr en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_length, "En su lugar, utilice la propiedad length del argumento." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_mblength, "En su lugar, utilice la propiedad length del argumento." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Para más información, consulte los cambios de ASnative." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Establezca las propiedades directamente en la instancia utilizando la notación de puntos (.) en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Obtenga acceso a las propiedades directamente utilizando la notación  de puntos (.) en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Establezca las propiedades directamente en la instancia utilizando la notación de puntos (.) en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Para más información, consulte TextEvent.LINK y addEventListener()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Este método se ha movido al paquete flash.utils." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Sustituido por la nueva función constructora de la clase MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Se ha movido al paquete flash.system. Consulte también la clase flash.external.ExternalInterface para la comunicación con Javascript/ActionScript." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_getURL, "Para obtener una funcionalidad equivalente, consulte flash.net.URLLoader.  El paquete flash.net también contiene funciones de nivel de paquetes navigateToURL() y sendToURL()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Para más información, consulte MovieClip.gotoAndPlay()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Para más información, consulte MovieClip.gotoAndStop()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_play, "Para más información, consulte MovieClip.play()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_print, "Para más información, consulte PrintJob.start()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Para más información, consulte PrintJob." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Para más información, consulte PrintJob." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_printNum, "Para más información, consulte PrintJob." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Utilice Container.removeChild(childName). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Se ha movido al paquete flash.utils.  Considere utilizar la clase Timer en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Para más información, consulte MovieClip.nextFrame()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Para más información, consulte MovieClip.startDrag()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_stop, "Para más información, consulte MovieClip.stop()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Para más información, consulte Sound.stopAllSounds()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Para más información, consulte MovieClip.stopDrag()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Utilice el operador de punto (.) o la sentencia with en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Para más información, consulte DisplayObject.stage y Stage.quality." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Utilice DisplayObjectContainer.removeChild(childName) en su lugar. Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Utilice DisplayObjectContainer.removeChild(childName) en su lugar. Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Esta función ya no es una función global, pero sigue estando disponible como método de las clases TimerEvent, MouseEvent y KeyboardEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Para más información, consulte Video.attachNetStream, Video.attachCamera." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Utilice la clase URLLoader para llevar a cabo la carga y transferir el resultado a StyleSheet.parseCSS()" );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "En ActionScript 3.0 se registran todas las clases de forma predeterminada.  Si utiliza codificación AMF, consulte flash.utils.registerClassAlias() para obtener más información." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Utilice las propiedades de descriptor de acceso (funciones get/set) o la clase flash.utils.Proxy para una funcionalidad similar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Utilice las propiedades de descriptor de acceso (funciones get/set) o la clase flash.utils.Proxy para una funcionalidad similar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Para más información, consulte MovieClip.loadMovie()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Para más información, consulte MovieClip.loadMovieNum()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Para más información, consulte Loader.load()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Para más información, consulte Loader.load()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Utilice la clase SWF para crear sonidos de la biblioteca." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onStatus, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onStatus en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('status', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onID3, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onID3 en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('id3', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoad, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onLoad en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('load', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onSoundComplete, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onSoundComplete en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('soundComplete', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onSetFocus, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onSetFocus en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('focusIn', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onResize, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onResize en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('resize', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onChanged, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onChanged en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('change', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onKillFocus, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onKillFocus en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('focusOut', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onScroller, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onScroller en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('scroll', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onMouseDown, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onMouseDown en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseDown', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onMouseUp, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onMouseUp en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseUp', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onMouseMove, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onMouseMove en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseMove', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onMouseWheel, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onMouseWheel en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseWheel', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onKeyDown, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onKeyDown en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('keyDown', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onKeyUp, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onKeyUp en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('keyUp', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onData, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onData en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('data', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onHTTPStatus en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('httpStatus', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onDragOut, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onDragOut en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseOut', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onDragOver, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onDragOver en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseOver', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onPress, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onPress en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseDown', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onRelease, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onRelease en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('click', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onReleaseOutside en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseUp', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onRollOut, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onRollOut en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseOut', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onRollOver, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onRollOver en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('mouseOver', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onActivity, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onActivity en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('activity', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onSelect, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onSelect en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('menuSelect', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onEnterFrame, "En ActionScript 3.0, Flash Player no activa automáticamente onEnterFrame en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('enterFrame', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onUnload, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onUnload en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('unload', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadComplete, "En ActionScript 3.0, Flash Player no activa automáticamente onLoadComplete en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('load', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadError, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onLoadError en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('error', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadInit, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onLoadInit en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('init', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadProgress, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onLoadProgress en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('progress', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onLoadStart, "En ActionScript 3.0, Flash Player no activa automáticamente onLoadStart en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('start', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onClose, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onClose en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('close', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onConnect, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onConnect.  Primero debe registrar este controlador para el evento mediante addEventListener ('connect', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onXML, "En ActionScript 3.0, Flash Player no activa automáticamente onXML.  Primero debe registrar este controlador para el evento mediante addEventListener ('xml', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Utilice la propiedad hasChildNodes en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "La clase XMLEvent está obsoleta y el evento xml ya no se distribuye. Sólo se distribuye el evento de datos durante la carga del archivo." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "La clase XMLDoc ahora se llama XMLDocument." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Utilice la propiedad Accessibility.active en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Utilice la constante ActivityEvent.ACTIVITY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Utilice DisplayObjectContainer.parent.getChildIndex en su lugar. Consulte la ayuda de la clase DisplayObjectContainer, que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Utilice DisplayObjectContainer.parent.setChildIndex en su lugar. Consulte la ayuda de la clase DisplayObjectContainer, que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Utilice DisplayObjectContainer.getChildAt en su lugar. Consulte la ayuda de la clase DisplayObjectContainer, que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Utilice DisplayObjectContainer.numChildren en su lugar. DisplayObjectContainer.addChild siempre agrega el nuevo elemento secundario para crear índices en DisplayObjectContainer.numChildren." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Utilice la propiedad ByteArray.bytesAvailable en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Utilice la propiedad ByteArray.position en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Utilice la propiedad ByteArray.position en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Utilice el método Camera.getCamera() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Utilice la propiedad Camera.currentFPS en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Utilice la propiedad Camera.keyFrameInterval en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Utilice la propiedad Camera.loopback en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Utilice la propiedad ColorTransform.color en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Utilice la propiedad ColorTransform.color en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Utilice la propiedad Container.textSnapshot en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Utilice el método ContextMenu.clone() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Utilice la propiedad ContextMenu.forwardAndBack en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Utilice el método ContextMenuItem.clone() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Utilice la propiedad CustomActions.actionsList en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Utilice la constante DataEvent.DATA en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Utilice la propiedad DisplayObject.scaleX en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Utilice la propiedad DisplayObject.scaleX en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Utilice la propiedad DisplayObject.scaleY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Utilice la propiedad DisplayObject.scaleY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Utilice la propiedad DisplayObject.mouseX en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Utilice la propiedad DisplayObject.mouseX en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Utilice la propiedad DisplayObject.mouseY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Utilice la propiedad DisplayObject.mouseY en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Esta función ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Esta función ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Utilice la propiedad DisplayObject.name en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Utilice la propiedad DisplayObject.parent en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Utilice la propiedad DisplayObject.mask en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Utilice la propiedad DisplayObject.visible en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Utilice la propiedad DisplayObject.x en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Utilice la propiedad DisplayObject.y en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Utilice la propiedad DisplayObject.rotation en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Utilice la propiedad DisplayObject.alpha en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Utilice la propiedad DisplayObject.width en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Utilice la propiedad DisplayObject.height en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Utilice la propiedad ExternalInterface.available en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Utilice la constante ErrorEvent.ERROR en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Utilice la propiedad Event.isDefaultPrevented en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Utilice la constante Event.ACTIVATE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Utilice la constante Event.ADDED en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Utilice la constante Event.CANCEL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Utilice la constante Event.CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Utilice la constante Event.CLOSE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Utilice la constante Event.COMPLETE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Utilice la constante Event.CONNECT en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Utilice la constante Event.DEACTIVATE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Utilice la constante Event.ENTER_FRAME en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Utilice la constante Event.ID3 en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Utilice la constante Event.INIT en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Utilice la constante Event.MOUSE_LEAVE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Utilice la constante Event.OPEN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Utilice la constante Event.REMOVED en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Utilice la constante Event.RENDER en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Utilice la constante Event.RESIZE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Utilice la constante Event.SCROLL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Utilice la constante Event.SELECT en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Utilice la constante Event.SOUND_COMPLETE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Utilice la constante Event.TAB_CHILDREN_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Utilice la constante Event.TAB_ENABLED_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Utilice la constante Event.TAB_INDEX_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Utilice la constante Event.UNLOAD en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Utilice la constante FocusEvent.FOCUS_IN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Utilice la constante FocusEvent.FOCUS_OUT en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Utilice la constante FocusEvent.KEY_FOCUS_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Utilice la constante FocusEvent.MOUSE_FOCUS_CHANGE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Utilice el método Graphics.beginBitmapFill() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Utilice la propiedad BitmapFilter.quality en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Utilice KeyboardEvent.charCode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Utilice KeyboardEvent.keyCode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Para más información, consulte la clase KeyboardEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Para más información, consulte KeyboardEvent.ctrlKey, KeyboardEvent.altKey y KeyboardEvent.shiftKey." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Utilice la constante PAGE_DOWN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Utilice la constante PAGE_UP en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Utilice la constante DELETE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Utilice la constante CAPS_LOCK en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Utilice una de las constantes NUMPAD_0 -> NUMPAD_9 en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Utilice la propiedad InteractiveObject.focusRect en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Utilice la propiedad InteractiveObject.contextMenu en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Utilice la propiedad KeyboardEvent.charCode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Utilice la propiedad KeyboardEvent.keyCode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Utilice la propiedad Loader.contentLoaderInfo en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Esta función ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Esta función ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Utilice la propiedad LoaderInfo.loaderURL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Utilice la propiedad LocalConnection.domain en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Utilice la propiedad MenuEvent.contextMenuOwner en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Utilice el método Microphone.getMicrophone() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Si el nombre de la subclase MovieClip es A, utilice var mc= new A(); addChild(mc). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Utilice var mc= new MovieClip(); addChild(mc). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Utilice var tf= new TextField(); addChild(mc). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Utilice Container.removeChild(childName). Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Utilice var l = new Loader(); addChild(l); l.load(new URLRequest(\"su url\"));. Para más información, consulte las clases Loader y DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Utilice DisplayObjectContainer.removeChild(childName) en su lugar. Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Utilice DisplayObjectContainer.removeChild(childName) en su lugar. Para más información, consulte la clase DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Utilice DisplayObjectContainer.parent.getChildIndex en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Utilice DisplayObjectContainer.parent.setChildIndex en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Utilice DisplayObjectContainer.getChildAt en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Utilice DisplayObjectContainer.numChildren en su lugar. DisplayObjectContainer.addChild siempre agrega el nuevo elemento secundario para crear índices en DisplayObjectContainer.numChildren." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Para más información, consulte DisplayObject.addChild." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Para más información, consulte LoaderInfo.bytesLoaded y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Para más información, consulte LoaderInfo.bytesTotal y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Para obtener una funcionalidad equivalente, consulte flash.net.URLLoader.  El paquete flash.net también contiene funciones de nivel de paquetes navigateToURL() y sendToURL()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Para más información, consulte LoaderInfo.url y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Para más información, consulte LoaderInfo.url y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Utilice la propiedad MovieClip.mask en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Para más información, consulte LoaderInfo.swfVersion y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Utilice la propiedad MovieClip.currentFrame en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Utilice la propiedad MovieClip.framesLoaded en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Utilice la propiedad MovieClip.totalFrames en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Para más información, consulte displayObjectInstance.root." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Para más información, consulte displayObjectInstance.root." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Utilice la propiedad estática flash.media.SoundMixer.bufferTime en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Para más información, consulte la clase Graphics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Utilice la propiedad NetStream.bufferTime en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Utilice la propiedad NetStream.currentFPS en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Utilice la propiedad NetStream.videoCodec en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Utilice la propiedad NetStream.audioCodec en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Utilice la propiedad ProductManager.isInstalled en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Utilice la propiedad ProductManager.installedVersion en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Utilice la propiedad ProductManager.isRunning en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Utilice el método Point.add() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Utilice la propiedad Proxy.deleteDescendants en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Utilice el método heapDump() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Utilice la propiedad ProgressEvent.bytesLoaded en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Utilice la propiedad ProgressEvent.bytesTotal en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Utilice la propiedad Rectangle.isEmpty en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Utilice la propiedad SoundTransform.pan en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Utilice la propiedad Sockect.bytesAvailable en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Utilice la propiedad SharedObject.size en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Utilice la propiedad SharedObject.fps en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Utilice el método Sprite.constructChildren() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Utilice la propiedad Sprite.dropTarget en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Utilice la propiedad Stage.focus en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Utilice la propiedad Stage.focus en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Utilice la propiedad Stage.showDefaultContextMenu en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Utilice la propiedad StyleSheet.styleNames en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Utilice una instancia de URLLoader para cargar los datos de StyleSheet y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Utilice la propiedad IME.enabled en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Utilice la propiedad IME.enabled en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Utilice la propiedad IME.instance en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Utilice la propiedad IME.conversionMode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Utilice la propiedad IME.conversionMode en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Utilice la propiedad System.vmVersion en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Utilice la propiedad SWFLoaderInfo.swfVersion en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Utilice la propiedad SWFLoaderInfo.actionScriptVersion en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Utilice la propiedad TextField.defaultTextFormat en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Utilice la propiedad TextField.defaultTextFormat en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Utilice DisplayObjectContainer.parent.getChildIndex en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Utilice DisplayObjectContainer.parent.setChildIndex en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Utilice DisplayObjectContainer.getChildAt en su lugar. Para más información, consulte la clase DisplayObjectContainer que se amplía con MovieClip." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Utilice DisplayObjectContainer.numChildren en su lugar. DisplayObjectContainer.addChild siempre agrega el nuevo elemento secundario para crear índices en DisplayObjectContainer.numChildren." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Utilice el método TextField.replaceSelectedText() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Utilice el método TextField.getLineIndexOfChar() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Utilice la propiedad TextField.selectionBeginIndex en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Utilice la propiedad TextField.selectionEndIndex en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Utilice la propiedad TextField.caretIndex en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Utilice el método Font.enumerateFonts() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Utilice la propiedad TextField.maxScrollV en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Utilice la propiedad TextField.scrollH en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Utilice la propiedad TextField.maxScrollH en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Utilice la propiedad TextField.defaultTextFormat en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Cree un campo TextField temporal y utilice TextField.getLineMetrics en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Utilice la propiedad TextSnapshot.charCount en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Utilice el método navigateToURL() del paquete flash.net en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Utilice el método sendToURL() del paquete flash.net en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Utilice la propiedad URLLoader.dataFormat en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Utilice la propiedad URLStream.bytesAvailable en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Esta propiedad ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Utilice la propiedad URLRequest.applicationDomain en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Para agregar encabezados de petición, defina la propiedad URLRequest.requestHeaders como una matriz de objetos URLRequestHeader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Utilice una instancia de URLLoader para cargar el archivo XML y, a continuación, transfiera los datos de carga de URLLoader al constructor de documentos XMLDocument. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Utilice el método sendToURL() del paquete flash.net en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Defina una propiedad postData de objeto URLRequest y utilícela con un objeto URLLoader para cargar el archivo XML.  Transfiera los datos de URLLoader al constructor XMLDocument. Para más información, consulte las clases URLLoader, URLRequest y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Utilice una instancia de URLLoader para cargar el archivo XML y, a continuación, transfiera los datos de carga de URLLoader al constructor de documentos XMLDocument. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Para agregar encabezados de petición, defina la propiedad URLRequest.requestHeaders como una matriz de objetos URLRequestHeader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Para más información, consulte URLLoader.bytesLoaded y la clase URLLoader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Para más información, consulte URLLoader.bytesTotal y la clase URLLoader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Utilice una instancia de URLLoader para cargar el archivo XML y, a continuación, transfiera los datos de carga al método StyleSheet.parseCSS. Para más información, consulte las clases URLLoader y EventDispatcher." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Utilice la propiedad URLRequest.contentType en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Busque posibles excepciones emitidas por el constructor XMLDocument o el método XMLDocument.parseXML en su lugar. Para más información, consulte XMLDocument." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Button, "La clase Button ahora se llama SimpleButton." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Container, "La clase Container ahora se llama DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Image, "La clase Image ahora se llama BitmapData." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "La clase ImageFilter ahora se llama BitmapFilter." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "La clase ImageSprite ahora se llama Bitmap." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "La clase ImageLoaderInfo ahora se llama BitmapLoaderInfo." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "La clase ImeEvent ahora se llama IMEEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Key, "La clase Key ahora se llama Keyboard." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "La clase LineMetrics ahora se llama TextLineMetrics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Para más información, consulte la clase URLVariables, las propiedades URLRequest.urlVariables y URLRequest.postData, y la propiedad URLLoader.dataFormat." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "La clase MenuEvent ahora se llama ContextMenuEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "La clase SystemCapabilities ahora se llama Capabilities." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Utilice la propiedad TextField.getLineMetrics en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Button, "La clase Button ahora se llama SimpleButton." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Container, "La clase Container ahora se llama DisplayObjectContainer." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Image, "La clase Image ahora se llama BitmapData." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "La clase ImageFilter ahora se llama BitmapFilter." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "La clase ImageSprite ahora se llama Bitmap." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "La clase ImageLoaderInfo ahora se llama BitmapLoaderInfo." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "La clase ImeEvent ahora se llama IMEEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Key, "La clase Key ahora se llama Keyboard." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "La clase LineMetrics ahora se llama TextLineMetrics." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Para más información, consulte la clase URLVariables, las propiedades URLRequest.urlVariables y URLRequest.postData, y la propiedad URLLoader.dataFormat." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "La clase MenuEvent ahora se llama ContextMenuEvent." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "La clase SystemCapabilities ahora se llama Capabilities." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Utilice la propiedad TextField.getLineMetrics en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Para más información, consulte la ayuda de la clase Proxy, que ofrece una funcionalidad similar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Utilice el método XMLUI.getProperty en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Utilice el método XMLUI.setProperty en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Utilice la propiedad DisplayObject.accessibilityProperties en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Utilice la propiedad DisplayObject.scale9Grid en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Utilice el método Graphics.drawOval en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Utilice la propiedad NetConnection.connected en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Utilice la propiedad Socket.connected en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Utilice la propiedad URLStream.connected en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Utilice la propiedad SyncEvent.changeList en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Utilice la propiedad TextField.scrollV en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Utilice la propiedad TextField.bottomScrollV en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Utilice la constante BitmapDataChannel.RED en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Utilice la constante BitmapDataChannel.GREEN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Utilice la constante BitmapDataChannel.BLUE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Utilice la constante BitmapDataChannel.ALPHA en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Utilice el operador is en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Utilice el método flash.system.Security.showSettings en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Utilice la propiedad System.useCodePage en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Utilice la clase flash.events.EventDispatcher en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Utilice la propiedad estática flash.media.SoundMixer.bufferTime en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Cree una nueva instancia de la clase de símbolo de biblioteca bitmap, por ejemplo, new myBitmapName(), en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Para más información, consulte Loader.load()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "La clase MovieClipLoader se ha sustituido por la clase flash.display.Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "La clase MovieClipLoader se ha sustituido por la clase flash.display.Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Utilice la constante flash.system.IMEConversionMode.ALPHANUMERIC_FULL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Utilice la constante flash.system.IMEConversionMode.ALPHANUMERIC_HALF en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Utilice la constante flash.system.IMEConversionMode.CHINESE en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Utilice la constante flash.system.IMEConversionMode.JAPANESE_HIRAGANA en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Utilice la constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Utilice la constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Utilice la constante flash.system.IMEConversionMode.KOREAN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Utilice la constante flash.system.IMEConversionMode.UNKNOWN en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onCancel, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onCancel en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener (cancel, onCancel)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "No hay sustitución directa. El método willTrigger() se puede utilizar para indicar si se ha registrado algún detector." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onIMEComposition, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onIMEComposition en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener (imeComposition, handlerName)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Para más información, consulte LoaderInfo.url y la clase Loader." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Utilice el método getFullYear() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Utilice el método setFullYear() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Utilice el método getUTCFullYear() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Utilice la propiedad rate en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Selection, "Se ha quitado la clase Selection. Para más información, consulte el método addEventListener de la clase de la cual desee obtener información de selección." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Selection, "Se ha quitado la clase Selection. Para más información, consulte el método addEventListener de la clase de la cual desee obtener información de selección." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Utilice la propiedad gain en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Los valores de color se pueden asignar directamente mediante el constructor o las propiedades de la clase ColorTransform." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Los valores de color se pueden asignar directamente mediante el constructor o las propiedades de la clase ColorTransform." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Consulte la ayuda de las propiedades de la clase flash.display.InteractiveObject relacionadas con la selección." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Consulte la ayuda del método flash.display.Graphics.beginBitmapFill." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Consulte la ayuda del método flash.display.DisplayObject.hitTestObject()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Consulte la ayuda del método addChild()." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Utilice el método load() en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Utilice flash.media.SoundChannel.leftPeak y flash.media.SoundChannel.rightPeak para supervisar y controlar la amplitud de un canal de sonido." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Utilice la propiedad soundTransform en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Utilice la propiedad SoundTransform.pan en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Utilice la propiedad SoundTransform.pan en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Utilice la propiedad bytesLoaded en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Utilice la propiedad bytesTotal en su lugar." );
        warningConstantsES[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Se ha utilizado += de forma ineficaz en un campo TextField." );
        warningConstantsES[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "Añadir texto a un campo TextField con += es mucho más lento que utilizar el método TextField.appendText()." );
        warningConstantsES[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Posiblemente faltan paréntesis." );
        warningConstantsES[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Se utilizó el valor de la función donde se esperaba el tipo %s.  Posiblemente faltan los paréntesis () detrás de esta referencia de función." );
        warningConstantsES[index++] = new AscWarning(kWarning_InstanceOfChanges, "Se ha utilizado el operador instanceof." );
        warningConstantsES[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "El operador instanceof está desfasado; utilice el operador is en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "El controlador de eventos allowDomain() ahora es un método estándar, no una función callback de evento. Para más información, consulte el nuevo método LocalConnection.allowDomain." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "El controlador de eventos allowInsecureDomain() ahora es un método estándar, no una función callback de evento. Para más información, consulte el nuevo método LocalConnection.allowInsecureDomain." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_call, "El método global call() ya no se admite." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_Color, "Se ha quitado la clase Color. Utilice la clase flash.geom.ColorTransform para una funcionalidad equivalente." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Color, "Se ha quitado la clase Color. Utilice la clase flash.geom.ColorTransform para una funcionalidad equivalente." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "Los archivos SWF de ActionScript 3.0 siempre utilizan reglas de coincidencia de dominio exacto." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp_capabilities, "La clase capabilities ahora se llama Capabilities." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_capabilities, "La clase capabilities ahora se llama Capabilities." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Para más información, consulte addEventListener (eventName, listener, useCapture, priority)." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Para más información, consulte removeEventListener (eventName, listener, useCapture)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onComplete, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onComplete en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('complete', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onHTTPError, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onHTTPError en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('httpError', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onIOError, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onIOError en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('ioError', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onProgress, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onProgress en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('progress', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onSecurityError, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onSecurityError en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('securityError', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_Event_onOpen, "En ActionScript 3.0, Flash Player no activa automáticamente el controlador de eventos onOpen en tiempo de ejecución.  Primero debe registrar este controlador para el evento mediante addEventListener ('open', callback_handler)." );
        warningConstantsES[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Posiblemente se ha utilizado la clase XML de ActionScript 2.0." );
        warningConstantsES[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Problema de migración: la clase XML de ActionScript 2.0 ahora se llama XMLDocument." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadDateCast, "Operación de conversión Date no válida." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadDateCast_specific, "El comportamiento de Date(x) es el mismo que el de la nueva Date().toString(). Para comparar un valor con el tipo Date utilice \"x as Date\" en vez de Date(x)." );
        warningConstantsES[index++] = new AscWarning(kWarning_ImportHidesClass, "Al importar un paquete con el mismo nombre que la clase actual se ocultará el identificador de la clase en este ámbito." );
        warningConstantsES[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "Al importar un paquete con el mismo nombre que la clase actual se ocultará el identificador de la clase en este ámbito." );
        warningConstantsES[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Hay varios argumentos con el mismo nombre." );
        warningConstantsES[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Se ha especificado más de un argumento llamado '%s'.  Las referencias a dicho argumento siempre se resolverán en el último." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Utilice el método Rectangle.containsRect en su lugar." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_eval, "Se ha quitado esta funcionalidad." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Esta funcionalidad se ha sustituido por la propiedad flash.system.Capabilities.version." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Esta funcionalidad se ha sustituido por la propiedad flash.display.MovieClip.framesLoaded." );
        warningConstantsES[index++] = new AscWarning(kUnsupportedProp__global, "Se ha quitado la propiedad _global.  Para una funcionalidad equivalente, utilice un miembro estático de una clase." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadBoolAssignment, "Se utilizó un valor no booleano donde se esperaba uno booleano." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Se utilizó %s donde se esperaba un valor booleano.  Se forzará la conversión de la expresión a valor booleano." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadES3TypeProp, "Propiedad desconocida." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s no es una propiedad reconocida de la clase dinámica %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Método desconocido." );
        warningConstantsES[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s no es un método reconocido de la clase dinámica %s." );
        warningConstantsES[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Definición de variable duplicada." );
        warningConstantsES[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Definición de variable duplicada." );
        warningConstantsES[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "El nombre de la definición coincide con el nombre de un paquete importado.  Las referencias no cualificadas a dicho nombre se resolverán en el paquete y no en la definición." );
        warningConstantsES[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "El nombre de la definición coincide con el nombre de un paquete importado.  Las referencias no cualificadas a dicho nombre se resolverán en el paquete y no en la definición." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Posiblemente se intentó eliminar una propiedad fija." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "La propiedad %s declarada no se puede eliminar. Para liberar memoria asociada, defina su valor en null." );
        warningConstantsES[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsES[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsES[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   };

   static final AscWarning[] warningConstantsFR= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsFR() 
   {
      int index=0;
        warningConstantsFR[index++] = new AscWarning(kWarning_NoTypeDecl, "Déclaration de type absente." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s Pas de déclaration de type pour %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Comparaison non logique avec un type non défini.  Seules les variables non typées (ou les variables de type *) peuvent être undefined." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Les variables de type %s ne peuvent pas être non définies. Avant comparaison, la valeur undefined va faire l'objet d'un transtypage forcé comme %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "La fonction utilisée dans l'expression new renvoie une valeur.  Le résultat sera la valeur renvoyée par la fonction, et non pas une nouvelle instance de cette fonction." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Problème de migration : Le résultat de new %s sera la valeur renvoyée par %s, et non pas une nouvelle instance de cette fonction." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "La valeur Boolean() sans arguments renvoie False en ActionScript 3.0.  Boolean() renvoyait undefined en ActionScript 2.0." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Utilisation de Boolean() sans arguments." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NumberFromStringChanges, "En ActionScript 3.0, les espaces blancs sont ignorés et '' renvoie 0. Number() renvoie NaN en ActionScript 2.0 lorsque le paramètre est '' ou contient des espaces blancs." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Problème de migration : lorsque la fonction Number('') est appelée avec une chaîne vide comme argument, elle renvoie 0 en ActionScript 3.0, et NaN en ActionScript 2.0." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Le format de Array.toString() a changé." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Problème de migration : La gestion par Array.toString() des éléments null et undefined a changé." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Propriété ActionScript 2.0 non prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Problème de migration : la propriété '%s' n'est plus prise en charge.  %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Fonction ActionScript 2.0 non prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Problème de migration : la méthode '%s' n'est plus prise en charge.  %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ChangesInResolve, "'__resolve' n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Problème de migration : '__resolve' n'est plus prise en charge.  Utilisez la nouvelle classe Proxy pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kWarning_LevelNotSupported, "'_level' n'est plus prise en charge. Pour plus d'informations, consultez le package flash.display." );
        warningConstantsFR[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Problème de migration : '_level' n'est plus prise en charge. Pour plus d'informations, consultez le package flash.display." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ClassIsSealed, "Cette classe est fermée.  Il est impossible de lui ajouter des membres dynamiquement." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Problème de migration : %s n'est pas une classe dynamique.  Il est impossible d'ajouter dynamiquement des membres aux instances." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Changement de portée de ce mot-clé.  Les méthodes de classe extraites d'une instance d'une classe doivent toujours résoudre this avec cette instance.  En ActionScript 2.0, 'this' est recherché dynamiquement en fonction du point d'appel de la méthode." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Problème de migration : La méthode %s se comporte différemment en ActionScript 3.0, en raison du changement de portée du mot-clé this. Pour plus d'informations, consultez la description de l'avertissement 1083." );
        warningConstantsFR[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Déclaration d'espace de nom absente (par ex. variable non définie comme public, private, etc.)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "La portée de %s sera limitée à l'espace de nom par défaut : %s internal.  Elle ne sera pas visible à l'extérieur de ce package." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ForVarInChanges, "En ActionScript 3.0 les itérations des propriétés d'un objet s'effectuent dans une déclaration \"for x in target\" en ordre aléatoire." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Problème de migration : En ActionScript 3.0 les itérations des propriétés d'un objet s'effectuent dans une déclaration \"for x in target\" en ordre aléatoire." );
        warningConstantsFR[index++] = new AscWarning(kWarning_InternalError, "Erreur interne du compilateur." );
        warningConstantsFR[index++] = new AscWarning(kWarning_InternalError_specific, "Code d'erreur : %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler n'a pas été ajouté comme module d'écoute." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Problème de migration : %s" );
        warningConstantsFR[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Les valeurs négatives deviennent des nombres positifs importants lorsqu'elles sont affectées à un type de données uint." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "Valeur négative utilisée, alors qu'une valeur uint (non négative) est attendue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNullComparision, "Comparaison non logique avec null." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Comparaison non logique avec null.  Les variables de type %s ne peuvent pas être nulles." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNaNComparision, "Comparaison non logique avec NaN. Toute opération de comparaison avec NaN sera évaluée comme 'false', puisque NaN != NaN." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Comparaison non logique avec NaN.  Cette instruction est toujours évaluée comme false." );
        warningConstantsFR[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Affectation dans une clause conditionnelle." );
        warningConstantsFR[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Affectation dans une clause conditionnelle.  Peut-être vouliez-vous saisir == au lieu de = ?" );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNullAssignment, "Affectation de null impossible." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "null utilisée alors qu'une valeur %s est attendue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoConstructor, "Constructeur absent." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoConstructor_specific, "Aucune fonction constructeur n'a été spécifiée pour la classe %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ConstNotInitialized, "Constante non initialisée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "La constante n'a pas été initialisée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadArrayCast, "L'opération de transtypage sur Array ne semble pas valide." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) se comporte de la même façon que new Array(x).  Pour convertir une valeur dans le type Array, utilisez l'expression x as Array au lieu de Array(x)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "L'instruction super() n'a pas été appelée par le constructeur." );
        warningConstantsFR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "L'instruction super() sera exécutée avant l'entrée dans ce constructeur.  Si vous souhaitez contrôler explicitement son exécution, ajoutez un appel à super() au sein du constructeur." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_version, "Utilisez plutôt Capabilities.version." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Pour plus d'informations, consultez la section InteractiveObject.focusRect." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Highquality, "Pour plus d'informations, consultez la section Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Pour plus d'informations, consultez la section Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Pour plus d'informations, consultez la section Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Quality, "Pour plus d'informations, consultez la section Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Utilisez plutôt la propriété statique flash.media.SoundMixer.bufferTime." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Pour plus d'informations, consultez la section LoaderInfo.url." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NewLine, "Pour un saut de ligne, utilisez '\n'." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Pour plus d'informations, consultez la section textField.maxScroll." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Level, "Le concept de niveaux n'existe pas en ActionScript 3.0, par contre ce langage permet d'accéder directement à la liste d'affichage. Pour plus d'informations, consultez le package flash.display." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Parent, "Utilisez plutôt la propriété parent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Root, "Cette propriété a été supprimée. L'équivalent le plus proche est Stage, qui représente la racine de la liste d'affichage en ActionScript 3.0." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Essayez plutôt de déclarer l'appelant comme argument de la fonction." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Utilisez plutôt la propriété parent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Pour plus d'informations, consultez la section Sprite.hitArea." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Scroll, "Pour plus d'informations, consultez les propriétés scrollH et scrollV de la classe flash.text.TextField." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Utilisez les objets MovieClip directement comme arguments au lieu de chemins." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Pour plus d'informations, consultez la section Video.videoHeight." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Pour plus d'informations, consultez la section Video.videoWidth." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp__Proto__, "Pour plus d'informations, consultez le mot-clé obsolète __proto__." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Stage, "Pour plus d'informations, consultez la section DisplayObject.stage." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Utilisez plutôt la méthode registerClass() du package flash.net." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_random, "Utilisez plutôt Math.random()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_chr, "Utilisez plutôt String.fromCharCode()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Utilisez plutôt String.fromCharCode()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ord, "Utilisez plutôt String.charCodeAt()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_mbord, "Utilisez plutôt String.charCodeAt()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_substring, "Utilisez plutôt la méthode String.substr." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Utilisez plutôt la méthode String.substr." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_length, "Utilisez plutôt la propriété length de l'argument." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_mblength, "Utilisez plutôt la propriété length de l'argument." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Pour plus d'informations, consultez les modifications de ASnative." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Définissez plutôt les propriétés directement dans l'instance à l'aide de la notation avec point (.)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Accédez plutôt directement aux propriétés en utilisant la notation avec point (.)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Définissez plutôt les propriétés directement dans l'instance à l'aide de la notation avec point (.)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Pour plus d'informations, consultez les sections TextEvent.LINK et addEventListener()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Cette méthode a été déplacée dans le package flash.utils." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Remplacée par la nouvelle fonction constructeur de classe MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Déplacée dans le package flash.system. Consultez la classe flash.external.ExternalInterface pour les communications Javascript/ActionScript." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_getURL, "Pour une fonctionnalité équivalente, consultez flash.net.URLLoader. Le package flash.net contient aussi les fonctions de niveau package navigateToURL() et sendToURL()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Pour plus d'informations, consultez la section MovieClip.gotoAndPlay()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Pour plus d'informations, consultez la section MovieClip.gotoAndStop()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_play, "Pour plus d'informations, consultez la section MovieClip.play()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_print, "Pour plus d'informations, consultez la section PrintJob.start()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Pour plus d'informations, consultez la section PrintJob." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Pour plus d'informations, consultez la section PrintJob." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_printNum, "Pour plus d'informations, consultez la section PrintJob." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Utilisez Container.removeChild(Nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Déplacée dans le package flash.utils.  Utilisez plutôt la classe Timer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Pour plus d'informations, consultez la section MovieClip.nextFrame()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Pour plus d'informations, consultez la section MovieClip.startDrag()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_stop, "Pour plus d'informations, consultez la section MovieClip.stop()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Pour plus d'informations, consultez la section Sound.stopAllSounds()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Pour plus d'informations, consultez la section MovieClip.stopDrag()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Utilisez plutôt l'opérateur point (.) ou l'instruction with." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Pour plus d'informations, consultez les sections DisplayObject.stage et Stage.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Utilisez plutôt DisplayObjectContainer.removeChild(nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Utilisez plutôt DisplayObjectContainer.removeChild(nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Cette fonction n'est plus une fonction globale, mais elle reste disponible comme méthode des classes TimerEvent, MouseEvent et KeyboardEvent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Pour plus d'informations, consultez Video.attachNetStream, Video.attachCamera." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Utilisez la classe URLLoader pour le chargement et le passage du résultat à StyleSheet.parseCSS()" );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "En ActionScript 3.0, toutes les classes sont enregistrées par défaut.  Si vous utilisez le format AMF, reportez-vous à la section flash.utils.registerClassAlias()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Utilisez les propriétés d'accès (fonctions get/set) ou la classe flash.utils.Proxy pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Utilisez les propriétés d'accès (fonctions get/set) ou la classe flash.utils.Proxy pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Pour plus d'informations, consultez la section MovieClip.loadMovie()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Pour plus d'informations, consultez la section MovieClip.loadMovieNum()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Pour plus d'informations, consultez la section Loader.load()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Pour plus d'informations, consultez la section Loader.load()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Utilisez la classe SWF pour créer des sons à partir de la bibliothèque." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onStatus, "En ActionScript 3.0, le gestionnaire d'événement onStatus n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'status', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onID3, "En ActionScript 3.0, le gestionnaire d'événement onID3 n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'id3', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoad, "En ActionScript 3.0, le gestionnaire d'événement onLoad n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'load', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onSoundComplete, "En ActionScript 3.0, le gestionnaire d'événement onSoundComplete n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'soundComplete', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onSetFocus, "En ActionScript 3.0, le gestionnaire d'événement onSetFocus n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'focusIn', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onResize, "En ActionScript 3.0, le gestionnaire d'événement onResize n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'resize', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onChanged, "En ActionScript 3.0, le gestionnaire d'événement onChanged n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'change', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onKillFocus, "En ActionScript 3.0, le gestionnaire d'événement onKillFocus n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'focusOut', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onScroller, "En ActionScript 3.0, le gestionnaire d'événement onScroller n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'scroll', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onMouseDown, "En ActionScript 3.0, le gestionnaire d'événement onMouseDown n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onMouseUp, "En ActionScript 3.0, le gestionnaire d'événement onMouseUp n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onMouseMove, "En ActionScript 3.0, le gestionnaire d'événement onMouseMove n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseMove', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onMouseWheel, "En ActionScript 3.0, le gestionnaire d'événement onMouseWheel n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseWheel', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onKeyDown, "En ActionScript 3.0, le gestionnaire d'événement onKeyDown n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'keyDown', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onKeyUp, "En ActionScript 3.0, le gestionnaire d'événement onKeyUp n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'keyUp', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onData, "En ActionScript 3.0, le gestionnaire d'événement onData n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'data', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "En ActionScript 3.0, le gestionnaire d'événement onHTTPStatus n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'httpStatus', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onDragOut, "En ActionScript 3.0, le gestionnaire d'événement onDragOut n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onDragOver, "En ActionScript 3.0, le gestionnaire d'événement onDragOver n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onPress, "En ActionScript 3.0, le gestionnaire d'événement onPress n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onRelease, "En ActionScript 3.0, le gestionnaire d'événement onRelease n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'click', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "En ActionScript 3.0, le gestionnaire d'événement onReleaseOutside n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onRollOut, "En ActionScript 3.0, le gestionnaire d'événement onRollOut n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onRollOver, "En ActionScript 3.0, le gestionnaire d'événement onRollOver n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onActivity, "En ActionScript 3.0, le gestionnaire d'événement onActivity n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'activity', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onSelect, "En ActionScript 3.0, le gestionnaire d'événement onSelect n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'menuSelect', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onEnterFrame, "En ActionScript 3.0, le gestionnaire d'événement onEnterFrame n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'enterFrame', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onUnload, "En ActionScript 3.0, le gestionnaire d'événement onUnload n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'unload', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadComplete, "En ActionScript 3.0, le gestionnaire d'événement onLoadComplete n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'load', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadError, "En ActionScript 3.0, le gestionnaire d'événement onLoadError n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'error', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadInit, "En ActionScript 3.0, le gestionnaire d'événement onLoadInit n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'init', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadProgress, "En ActionScript 3.0, le gestionnaire d'événement onLoadProgress n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'progress', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onLoadStart, "En ActionScript 3.0, le gestionnaire d'événement onLoadStart n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'start', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onClose, "En ActionScript 3.0, le gestionnaire d'événement onClose n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'close', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onConnect, "En ActionScript 3.0, le gestionnaire d'événement onConnect n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'connect', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onXML, "onXML n'est pas automatiquement déclenché par Flash Player en ActionScript 3.0.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'xml', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Utilisez plutôt la propriété statique hasChildNodes." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "La classe XMLEvent est obsolète, et l'événement xml n'est plus distribué. Seul l'événement de données est distribué durant le chargement du fichier." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "La classe XMLDoc a été renommée XMLDocument." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Utilisez plutôt la propriété Accessibility.active." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Utilisez plutôt la constante ActivityEvent.ACTIVITY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Utilisez plutôt DisplayObjectContainer.parent.getChildIndex. Voir l'aide à propos de la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Utilisez plutôt DisplayObjectContainer.parent.setChildIndex. Voir l'aide à propos de la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Utilisez plutôt DisplayObjectContainer.getChildAt. Voir l'aide à propos de la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Utilisez plutôt DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild ajoute toujours le nouvel enfant pour indexer DisplayObjectContainer.numChildren." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Utilisez plutôt la propriété ByteArray.bytesAvailable." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Utilisez plutôt la propriété ByteArray.position." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Utilisez plutôt la propriété ByteArray.position." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Utilisez plutôt la méthode Camera.getCamera()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Utilisez plutôt la propriété Camera.currentFPS." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Utilisez plutôt la propriété Camera.keyFrameInterval." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Utilisez plutôt la propriété Camera.loopback." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Utilisez plutôt la propriété ColorTransform.color." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Utilisez plutôt la propriété ColorTransform.color." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Utilisez plutôt la propriété Container.textSnapshot." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Utilisez plutôt la méthode ContextMenu.clone()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Utilisez plutôt la propriété ContextMenu.forwardAndBack." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Utilisez plutôt la méthode ContextMenuItem.clone()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Utilisez plutôt la propriété CustomActions.actionsList." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Utilisez plutôt la constante DataEvent.DATA." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Utilisez plutôt la propriété DisplayObject.scaleX." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Utilisez plutôt la propriété DisplayObject.scaleX." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Utilisez plutôt la propriété DisplayObject.scaleY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Utilisez plutôt la propriété DisplayObject.scaleY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Utilisez plutôt la propriété DisplayObject.mouseX." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Utilisez plutôt la propriété DisplayObject.mouseX." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Utilisez plutôt la propriété DisplayObject.mouseY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Utilisez plutôt la propriété DisplayObject.mouseY." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Utilisez plutôt la propriété DisplayObject.name." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Utilisez plutôt la propriété DisplayObject.parent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Utilisez plutôt la propriété DisplayObject.mask." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Utilisez plutôt la propriété DisplayObject.visible." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Utilisez plutôt la propriété DisplayObject.x." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Utilisez plutôt la propriété DisplayObject.y." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Utilisez plutôt la propriété DisplayObject.rotation." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Utilisez plutôt la propriété DisplayObject.alpha." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Utilisez plutôt la propriété DisplayObject.width." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Utilisez plutôt la propriété DisplayObject.height." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Utilisez plutôt la propriété ExternalInterface.available." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Utilisez plutôt la constante ErrorEvent.ERROR." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Utilisez plutôt la propriété Event.isDefaultPrevented." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Utilisez plutôt la constante Event.ACTIVATE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Utilisez plutôt la constante Event.ADDED." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Utilisez plutôt la constante Event.CANCEL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Utilisez plutôt la constante Event.CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Utilisez plutôt la constante Event.CLOSE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Utilisez plutôt la constante Event.COMPLETE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Utilisez plutôt la constante Event.CONNECT." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Utilisez plutôt la constante Event.DEACTIVATE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Utilisez plutôt la constante Event.ENTER_FRAME." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Utilisez plutôt la constante Event.ID3." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Utilisez plutôt la constante Event.INIT." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Utilisez plutôt la constante Event.MOUSE_LEAVE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Utilisez plutôt la constante Event.OPEN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Utilisez plutôt la constante Event.REMOVED." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Utilisez plutôt la constante Event.RENDER." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Utilisez plutôt la constante Event.RESIZE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Utilisez plutôt la constante Event.SCROLL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Utilisez plutôt la constante Event.SELECT." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Utilisez plutôt la constante Event.SOUND_COMPLETE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Utilisez plutôt la constante Event.TAB_CHILDREN_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Utilisez plutôt la constante Event.TAB_ENABLED_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Utilisez plutôt la constante Event.TAB_INDEX_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Utilisez plutôt la constante Event.UNLOAD." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Utilisez plutôt la constante FocusEvent.FOCUS_IN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Utilisez plutôt la constante FocusEvent.FOCUS_OUT." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Utilisez plutôt la constante FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Utilisez plutôt la constante FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Utilisez plutôt la méthode Graphics.beginBitmapFill()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Utilisez plutôt la propriété BitmapFilter.quality." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Utilisez plutôt KeyboardEvent.charCode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Utilisez plutôt KeyboardEvent.keyCode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Pour plus d'informations, consultez la classe KeyboardEvent." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Pour plus d'informations, consultez KeyboardEvent.ctrlKey, KeyboardEvent.shiftKey et KeyboardEvent.altKey." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Utilisez plutôt la constante PAGE_DOWN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Utilisez plutôt la constante PAGE_UP." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Utilisez plutôt la constante DELETE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Utilisez plutôt la constante CAPS_LOCK." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Utilisez plutôt l'une des constantes NUMPAD_0 à NUMPAD_9." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Utilisez plutôt la propriété InteractiveObject.focusRect." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Utilisez plutôt la propriété InteractiveObject.contextMenu." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Utilisez plutôt la propriété KeyboardEvent.charCode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Utilisez plutôt la propriété KeyboardEvent.keyCode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Utilisez plutôt la propriété Loader.contentLoaderInfo." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Cette fonctionnalité n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Utilisez plutôt la propriété LoaderInfo.loaderURL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Utilisez plutôt la propriété LocalConnection.domain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Utilisez plutôt la propriété MenuEvent.contextMenuOwner." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Utilisez plutôt la méthode Microphone.getMicrophone()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Si le nom de la sous-classe de MovieClip est A, utilisez var mc= new A(); addChild(mc). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Utilisez var mc= new MovieClip(); addChild(mc). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Utilisez var tf= new TextField(); addChild(mc). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Utilisez Container.removeChild(childName). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Utilisez var l = new Loader(); addChild(l); l.load(new URLRequest(\"votre url\"));. Pour plus d'informations, consultez les classes Loader et DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Utilisez plutôt DisplayObjectContainer.removeChild(nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Utilisez plutôt DisplayObjectContainer.removeChild(nom_de_l'enfant). Pour plus d'informations, consultez la classe DisplayObjectContainer." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Utilisez plutôt DisplayObjectContainer.parent.getChildIndex. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Utilisez plutôt DisplayObjectContainer.parent.setChildIndex. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Utilisez plutôt DisplayObjectContainer.getChildAt. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Utilisez plutôt DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild ajoute toujours le nouvel enfant pour indexer DisplayObjectContainer.numChildren." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Pour plus d'informations, consultez la section DisplayObject.addChild." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Pour plus d'informations, consultez LoaderInfo.bytesLoaded et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Pour plus d'informations, consultez LoaderInfo.bytesTotal et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Pour une fonctionnalité équivalente, consultez flash.net.URLLoader. Le package flash.net contient aussi les fonctions de niveau package navigateToURL() et sendToURL()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Pour plus d'informations, consultez LoaderInfo.url et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Pour plus d'informations, consultez LoaderInfo.url et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Utilisez plutôt la propriété MovieClip.mask." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Pour plus d'informations, consultez LoaderInfo.swfVersion et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Utilisez plutôt la propriété MovieClip.currentFrame." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Utilisez plutôt la propriété MovieClip.framesLoaded." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Utilisez plutôt la propriété MovieClip.totalFrames." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Pour plus d'informations, consultez la section displayObjectInstance.root." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Pour plus d'informations, consultez la section displayObjectInstance.root." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Utilisez plutôt la propriété statique flash.media.SoundMixer.bufferTime." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Pour plus d'informations, consultez la classe Graphics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Utilisez plutôt la propriété NetStream.bufferTime." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Utilisez plutôt la propriété NetStream.currentFPS." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Utilisez plutôt la propriété NetStream.videoCodec." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Utilisez plutôt la propriété NetStream.audioCodec." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Utilisez plutôt la propriété ProductManager.isInstalled." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Utilisez plutôt la propriété ProductManager.installedVersion." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Utilisez plutôt la propriété ProductManager.isRunning." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Utilisez plutôt la méthode Point.add()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Utilisez plutôt la propriété Proxy.deleteDescendants." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Utilisez plutôt la méthode heapDump()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Utilisez plutôt la propriété ProgressEvent.bytesLoaded." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Utilisez plutôt la propriété ProgressEvent.bytesTotal." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Utilisez plutôt la propriété Rectangle.isEmpty." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Utilisez plutôt la propriété SoundTransform.pan." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Utilisez plutôt la propriété Sockect.bytesAvailable." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Utilisez plutôt la propriété SharedObject.size." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Utilisez plutôt la propriété SharedObject.fps." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Cet élément n'est plus pris en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Utilisez plutôt la méthode Sprite.constructChildren()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Utilisez plutôt la propriété Sprite.dropTarget." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Utilisez plutôt la propriété Stage.focus." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Utilisez plutôt la propriété Stage.focus." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Utilisez plutôt la propriété Stage.showDefaultContextMenu." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Utilisez plutôt la propriété StyleSheet.styleNames." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Utilisez une instance de URLLoader pour charger les données de StyleSheet, puis passez les données du composant Loader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Utilisez plutôt la propriété IME.enabled." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Utilisez plutôt la propriété IME.enabled." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Utilisez plutôt la propriété IME.instance." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Utilisez plutôt la propriété IME.conversionMode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Utilisez plutôt la propriété IME.conversionMode." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Utilisez plutôt la propriété System.vmVersion." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Utilisez plutôt la propriété SWFLoaderInfo.swfVersion." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Utilisez plutôt la propriété SWFLoaderInfo.actionScriptVersion." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Utilisez plutôt la propriété TextField.defaultTextFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Utilisez plutôt la propriété TextField.defaultTextFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Utilisez plutôt DisplayObjectContainer.parent.getChildIndex. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Utilisez plutôt DisplayObjectContainer.parent.setChildIndex. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Utilisez plutôt DisplayObjectContainer.getChildAt. Pour plus d'informations, consultez la classe DisplayObjectContainer, qui est étendue par MovieClip." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Utilisez plutôt DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild ajoute toujours le nouvel enfant pour indexer DisplayObjectContainer.numChildren." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Utilisez plutôt la méthode TextField.replaceSelectedText()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Utilisez plutôt la méthode TextField.getLineIndexOfChar()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Utilisez plutôt la propriété TextField.selectionBeginIndex." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Utilisez plutôt la propriété TextField.selectionEndIndex." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Utilisez plutôt la propriété TextField.caretIndex." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Utilisez plutôt la méthode Font.enumerateFonts()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Utilisez plutôt la propriété TextField.maxScrollV." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Utilisez plutôt la propriété TextField.scrollH." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Utilisez plutôt la propriété TextField.maxScrollH." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Utilisez plutôt la propriété TextField.defaultTextFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Créez plutôt un champ de texte provisoire et utilisez TextField.getLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Utilisez plutôt la propriété TextSnapshot.charCount." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Utilisez plutôt la méthode navigateToURL() du package flash.net." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Utilisez plutôt la méthode sendToURL() du package flash.net." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Utilisez plutôt la propriété URLLoader.dataFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Utilisez plutôt la propriété URLStream.bytesAvailable." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Cette propriété n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Utilisez plutôt la propriété URLRequest.applicationDomain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Pour ajouter des en-têtes de requêtes, définissez la propriété URLRequest.requestHeaders comme tableau d'objets URLRequestHeader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Utilisez une instance de URLLoader pour charger le fichier XML, puis passez les données de URLLoader au constructeur des XMLDocument. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Utilisez plutôt la méthode sendToURL() du package flash.net." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Définissez une propriété postData pour l'objet URLRequest et utilisez-la avec un objet URLLoader pour charger le fichier XML.  Passez les données des objets URLLoader aux constructeurs des XMLDocument. Pour plus d'informations, consultez les classes URLLoader, URLRequest et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Utilisez une instance de URLLoader pour charger le fichier XML, puis passez les données de URLLoader au constructeur des XMLDocument. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Pour ajouter des en-têtes de requêtes, définissez la propriété URLRequest.requestHeaders comme tableau d'objets URLRequestHeader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Pour plus d'informations, consultez URLLoader.bytesLoaded et la classe URLLoader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Pour plus d'informations, consultez URLLoader.bytesTotal et la classe URLLoader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Utilisez une instance de URLLoader pour charger le fichier XML, puis passez les données de URLLoader à la méthode StyleSheet.parseCSS. Pour plus d'informations, consultez les classes URLLoader et EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Utilisez plutôt la propriété URLRequest.contentType." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Vérifiez plutôt les éventuelles exceptions émises par le constructeur de XMLDocument ou par la méthode XMLDocument.parseXML. Pour plus d'informations, consultez la section XMLDocument." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Button, "La classe Button a été renommée SimpleButton." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Container, "La classe Container a été renommée DisplayObjectContainer.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Image, "La classe Image a été renommée BitmapData." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "La classe ImageFilter a été renommée BitmapFilter.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "La classe ImageSprite a été renommée Bitmap." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "La classe ImageLoaderInfo a été renommée BitmapLoaderInfo.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "La classe ImeEvent a été renommée IMEEvent.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Key, "La classe Key a été renommée Keyboard." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "La classe LineMetrics a été renommée TextLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Pour plus d'informations, consultez la classe URLVariables,les propriétés URLRequest.urlVariables et URLRequest.postData, ainsi que la propriété URLLoader.dataFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "La classe MenuEvent a été renommée ContextMenuEvent.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "La classe SystemCapabilities a été renommée Capabilities." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Utilisez plutôt la propriété TextField.getLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Button, "La classe Button a été renommée SimpleButton." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Container, "La classe Container a été renommée DisplayObjectContainer.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Image, "La classe Image a été renommée BitmapData." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "La classe ImageFilter a été renommée BitmapFilter.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "La classe ImageSprite a été renommée Bitmap." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "La classe ImageLoaderInfo a été renommée BitmapLoaderInfo.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "La classe ImeEvent a été renommée IMEEvent.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Key, "La classe Key a été renommée Keyboard." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "La classe LineMetrics a été renommée TextLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Pour plus d'informations, consultez la classe URLVariables,les propriétés URLRequest.urlVariables et URLRequest.postData, ainsi que la propriété URLLoader.dataFormat." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "La classe MenuEvent a été renommée ContextMenuEvent.." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "La classe SystemCapabilities a été renommée Capabilities." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Utilisez plutôt la propriété TextField.getLineMetrics." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Pour plus d'informations, consultez l'aide de la classe Proxy, qui offre des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Utilisez plutôt la méthode XMLUI.getProperty." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Utilisez plutôt la méthode XMLUI.setProperty." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Utilisez plutôt la propriété DisplayObject.accessibilityProperties." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Utilisez plutôt la propriété DisplayObject.scale9Grid." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Utilisez plutôt la méthode Graphics.drawOval." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Utilisez plutôt la propriété NetConnection.connected." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Utilisez plutôt la propriété Socket.connected." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Utilisez plutôt la propriété URLStream.connected." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Utilisez plutôt la propriété SyncEvent.changeList." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Utilisez plutôt la propriété TextField.scrollV." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Utilisez plutôt la propriété TextField.bottomScrollV." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Utilisez plutôt la constante BitmapDataChannel.RED." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Utilisez plutôt la constante BitmapDataChannel.GREEN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Utilisez plutôt la constante BitmapDataChannel.BLUE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Utilisez plutôt la constante BitmapDataChannel.ALPHA." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Utilisez plutôt l'opérateur is." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Utilisez plutôt la méthode flash.system.Security.showSettings." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Utilisez plutôt la propriété System.useCodePage." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Utilisez plutôt la classe flash.events.EventDispatcher." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Utilisez plutôt la propriété statique flash.media.SoundMixer.bufferTime." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Créez plutôt une nouvelle instance de la classe de symboles de bitmap de la bibliothèque, par ex. new myBitmapName()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Pour plus d'informations, consultez la section Loader.load()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "La classe MovieClipLoader a été remplacée par la classe flash.display.Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "La classe MovieClipLoader a été remplacée par la classe flash.display.Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Utilisez plutôt la constante flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Utilisez plutôt la constante flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Utilisez plutôt la constante flash.system.IMEConversionMode.CHINESE." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Utilisez plutôt la constante flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Utilisez plutôt la constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Utilisez plutôt la constante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Utilisez plutôt la constante flash.system.IMEConversionMode.KOREAN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Utilisez plutôt la constante flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onCancel, "En ActionScript 3.0, le gestionnaire d'événement onCancel n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener (cancel, onCancel)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Il n'y a pas de remplacement direct. La méthode willTrigger() permet de détecter si des objets d'écoute ont été enregistrés." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onIMEComposition, "En ActionScript 3.0, le gestionnaire d'événement onIMEComposition n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( imeComposition, handlerName)." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Pour plus d'informations, consultez LoaderInfo.url et la classe Loader." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Utilisez plutôt la méthode getFullYear()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Utilisez plutôt la méthode setFullYear()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Utilisez plutôt la méthode getUTCFullYear()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Utilisez plutôt la propriété rate." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Selection, "La classe Selection a été supprimée. Pour plus d'informations, consultez la méthode addEventListener de la classe dont vous voulez recevoir des informations sur la sélection." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Selection, "La classe Selection a été supprimée. Pour plus d'informations, consultez la méthode addEventListener de la classe dont vous voulez recevoir des informations sur la sélection." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Utilisez plutôt la propriété gain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "Les valeurs de couleurs peuvent être affectées directement à l'aide du constructeur ou des propriétés de la classe ColorTransform." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "Les valeurs de couleurs peuvent être affectées directement à l'aide du constructeur ou des propriétés de la classe ColorTransform." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Consultez l'aide pour les propriétés relatives au focus de la classe flash.display.InteractiveObject." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Consultez la méthode flash.display.Graphics.beginBitmapFill dans l'aide." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Consultez la méthode flash.display.DisplayObject.hitTestObject() dans l'aide." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Consultez la méthode addChild() dans l'aide." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Utilisez plutôt la méthode load()." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Pour contrôler l'amplitude d'un canal son, utilisez flash.media.SoundChannel.leftPeak et flash.media.SoundChannel.rightPeak." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Utilisez plutôt la propriété soundTransform." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Utilisez plutôt la propriété SoundTransform.pan." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Utilisez plutôt la propriété SoundTransform.pan." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Utilisez plutôt la propriété bytesLoaded." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Utilisez plutôt la propriété bytesTotal." );
        warningConstantsFR[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Utilisation inefficace de += dans un TextField." );
        warningConstantsFR[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "L'ajout de texte à la fin d'un champ texte TextField avec += est beaucoup plus lent que l'utilisation de la méthode TextField.appendText()." );
        warningConstantsFR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Il est possible que des parenthèses soient manquantes." );
        warningConstantsFR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "Valeur de fonction utilisée alors qu'une valeur de type %s est attendue.  Il semble que des parenthèses () sont absentes après cette référence à une fonction." );
        warningConstantsFR[index++] = new AscWarning(kWarning_InstanceOfChanges, "Utilisation de l'opérateur instanceof." );
        warningConstantsFR[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "L'opérateur instanceof est déprécié, utilisez plutôt l'opérateur is." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Le gestionnaire d'événements allowDomain() est désormais une méthode standard, plutôt qu'un rappel d'événement. Pour plus d'informations, consultez la nouvelle méthode LocalConnection.allowDomain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Le gestionnaire d'événements allowInsecureDomain() est désormais une méthode standard, plutôt qu'un rappel d'événement. Pour plus d'informations, consultez la nouvelle méthode LocalConnection.allowInsecureDomain." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_call, "la méthode globale call() n'est plus prise en charge." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_Color, "La classe Color a été supprimée. Utilisez la classe flash.geom.ColorTransform pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Color, "La classe Color a été supprimée. Utilisez la classe flash.geom.ColorTransform pour obtenir des fonctionnalités similaires." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "En ActionScript 3.0, les fichiers SWF utilisent toujours des règles de correspondances de domaines exactes." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp_capabilities, "La classe capabilities a été renommée Capabilities." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_capabilities, "La classe capabilities a été renommée Capabilities." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Pour plus d'informations, voir addEventListener ( nomEvenement, écouteur, utiliserCapture, priorité )." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Pour plus d'informations, voir removeEventListener ( nomEvenement, écouteur, utiliserCapture)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onComplete, "En ActionScript 3.0, le gestionnaire d'événement onComplete n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'complete', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onHTTPError, "En ActionScript 3.0, le gestionnaire d'événement onHTTPError n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'httpError', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onIOError, "En ActionScript 3.0, le gestionnaire d'événement onIOError n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'ioError', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onProgress, "En ActionScript 3.0, le gestionnaire d'événement onProgress n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'progress', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onSecurityError, "En ActionScript 3.0, le gestionnaire d'événement onSecurityError n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'securityError', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Event_onOpen, "En ActionScript 3.0, le gestionnaire d'événement onOpen n'est pas déclenché automatiquement par Flash Player lors de l'exécution.  Vous devez d'abord enregistrer ce gestionnaire d'événement à l'aide de addEventListener ( 'open', callback_handler)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Utilisation possible de la classe XML d'ActionScript 2.0." );
        warningConstantsFR[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Problème de migration : La classe XML d'ActionScript 2.0 a été renommée XMLDocument." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadDateCast, "L'opération de transtypage sur Date n'est pas valide." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) se comporte de la même façon que new Date().toString(). Pour convertir une valeur dans le type Date, utilisez l'expression 'x as Date' au lieu de Date(x)." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ImportHidesClass, "L'importation d'un package du même nom que la classe actuelle masquera cet identifiant de classe dans cette portée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "L'importation d'un package du même nom que la classe actuelle masquera cet identifiant de classe dans cette portée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Plusieurs arguments du même nom." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Plusieurs arguments nommés '%s'.  Les références à cet argument seront toujours résolues avec le dernier défini." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Utilisez plutôt la méthode Rectangle.containsRect." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_eval, "Cette fonctionnalité a été supprimée." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Cette fonctionnalité a été remplacée par la propriété flash.system.Capabilities.version." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Cette fonctionnalité a été remplacée par la propriété flash.display.MovieClip.framesLoaded." );
        warningConstantsFR[index++] = new AscWarning(kUnsupportedProp__global, "La propriété _global a été supprimée.  Pour une fonctionnalité équivalente, utilisez un membre statique d'une classe." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadBoolAssignment, "Valeur non booléenne utilisée alors qu'une valeur booléenne est attendue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "%s utilisée alors qu'une valeur booléenne est attendue.  L'expression va être transtypée comme booléenne." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadES3TypeProp, "Propriété inconnue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s n'est pas une propriété reconnue de la classe dynamique %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Méthode inconnue." );
        warningConstantsFR[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s n'est pas une méthode reconnue de la classe dynamique %s." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Définition de variable dupliquée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Définition de variable dupliquée." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Le nom de la définition est identique à celui d'un package importé.  Les références non qualifiées à ce nom seront toujours résolues sur le package et non sur la définition." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Le nom de la définition est identique à celui d'un package importé.  Les références non qualifiées à ce nom seront toujours résolues sur le package et non sur la définition." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Tentative de suppression d'une propriété fixe." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "Impossible de supprimer la propriété déclarée %s. Pour libérer la mémoire qui lui est réservée, définissez sa valeur comme null." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsFR[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsFR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   };

   static final AscWarning[] warningConstantsIT= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsIT() 
   {
      int index=0;
        warningConstantsIT[index++] = new AscWarning(kWarning_NoTypeDecl, "Dichiarazione tipo mancante." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' non contiene una dichiarazione di tipo." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadUndefinedComparision, "Confronto non logico con undefined.  Solo le variabili senza tipo (o del tipo *) possono essere undefined." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "Le variabili del tipo %s non possono essere undefined. Il valore undefined verrà assegnato forzatamente al tipo %s prima del confronto." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "La funzione usata nell'espressione new restituisce un valore.  Il risultato sarà costituito dal valore restituito dalla funzione, anziché da una nuova istanza della funzione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "Problema relativo alla migrazione: il risultato di new %s sarà il valore restituito di %s, anziché una nuova istanza della funzione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() senza argomenti restituisce false in ActionScript 3.0  mentre restituiva undefined in ActionScript 2.0." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Uso di Boolean() senza argomenti." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NumberFromStringChanges, "In ActionScript 3.0, lo spazio vuoto viene ignorato e '' restituisce 0. Number() restituisce NaN in ActionScript 2.0 quando il parametro è '' o contiene spazio vuoto." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "Problema relativo alla migrazione: quando la funzione Number('') viene chiamata con un argomento String vuoto, restituisce 0 in ActionScript 3.0 e NaN in ActionScript 2.0." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Il formato Array.toString() è cambiato." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "Problema relativo alla migrazione: il modo in cui Array.toString() gestisce gli elementi null e undefined è cambiato." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedPropertyError, "Proprietà ActionScript 2.0 non supportata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "Problema relativo alla migrazione: la proprietà %s non è più supportata.  %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedFunctionError, "Funzione ActionScript 2.0 non supportata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "Problema relativo alla migrazione: il metodo %s non è più supportato.  %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve non è più supportato." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "Problema relativo alla migrazione: __resolve non è più supportato.  Utilizzare la nuova classe Proxy per ottenere una funzionalità simile." );
        warningConstantsIT[index++] = new AscWarning(kWarning_LevelNotSupported, "_level non è più supportato. Per ulteriori informazioni, vedere il pacchetto flash.display." );
        warningConstantsIT[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "Problema relativo alla migrazione: _level non è più supportato. Per ulteriori informazioni, vedere il pacchetto flash.display." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ClassIsSealed, "La classe è chiusa.  Non è possibile aggiungervi dinamicamente dei membri." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "Problema relativo alla migrazione: %s non è una classe dinamica.  Non è possibile aggiungervi dinamicamente delle istanze." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ScopingChangeInThis, "Modifica dell'assegnazione dell'area di validità per la parola chiave this. I metodi di classe estratti da un'istanza di una classe risolveranno sempre this a tale istanza.  In ActionScript 2.0, this viene cercato dinamicamente in base alla posizione da cui viene richiamato il metodo." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "Problema relativo alla migrazione: il metodo %s ha un comportamento differente in ActionScript 3.0 perché è stata modificata l'assegnazione dell'area di validità per la parola chiave this. Per ulteriori informazioni, vedere la voce relativa all'avvertenza 1083." );
        warningConstantsIT[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "Dichiarazione namespace mancante (ad es. variabile non definita come public, private, ecc.)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "L'area di validità di %s verrà impostata sul namespace predefinito: %s internal.  Non sarà visibile al di fuori di questo pacchetto." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 esegue un'iterazione delle proprietà di un oggetto all'interno di un'istruzione \"for x in target\" in ordine casuale." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "Problema relativo alla migrazione: ActionScript 3.0 esegue un'iterazione delle proprietà di un oggetto all'interno di un'istruzione \"for x in target\" in ordine casuale." );
        warningConstantsIT[index++] = new AscWarning(kWarning_InternalError, "Errore interno nel compilatore." );
        warningConstantsIT[index++] = new AscWarning(kWarning_InternalError_specific, "Codice errore: %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler non è stato aggiunto come listener." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "Problema relativo alla migrazione: %s" );
        warningConstantsIT[index++] = new AscWarning(kWarning_NegativeUintLiteral, "Un valore negativo diventa un valore positivo elevato quando viene assegnato al tipo di dati uint." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "È stato utilizzato un valore negativo in una posizione in cui era previsto un valore uint (non negativo)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNullComparision, "Confronto non logico con null." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNullComparision_specific, "Confronto non logico con null.  Le variabili del tipo %s non possono essere null." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNaNComparision, "Confronto non logico con NaN. Qualunque operazione di confronto con NaN restituisce false perché NaN != NaN." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "Confronto non logico con NaN.  Questa istruzione restituisce sempre false." );
        warningConstantsIT[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "Assegnazione all'interno di un'istruzione condizionale." );
        warningConstantsIT[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "Assegnazione all'interno di un'istruzione condizionale.  Si voleva specificare == invece di =?" );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNullAssignment, "Assegnazione null impossibile." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "È stato utilizzato null ma era previsto un valore %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoConstructor, "Funzione di costruzione mancante." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoConstructor_specific, "Non è stata specificata una funzione di costruzione per la classe %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ConstNotInitialized, "Costante non inizializzata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "La costante non è stata inizializzata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadArrayCast, "Possibile operazione di inserimento in Array non valida." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) si comporta allo stesso modo del nuovo Array(x).  Per inserire un valore nel tipo Array, utilizzare l'espressione \"x as Array\" invece di Array(x)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "L'istruzione super() non è stata chiamata all'interno della funzione di costruzione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "L'istruzione super() verrà eseguita prima di accedere a questa funzione di costruzione.  Se si desidera controllare in modo esplicito l'esecuzione di super(), aggiungere una chiamata a tale istruzione all'interno della funzione di costruzione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_version, "Utilizzare Capabilities.version." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Focusrect, "Per ulteriori informazioni, vedere InteractiveObject.focusRect." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Highquality, "Per ulteriori informazioni, vedere Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "Per ulteriori informazioni, vedere Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "Per ulteriori informazioni, vedere Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Quality, "Per ulteriori informazioni, vedere Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "Utilizzare invece la proprietà statica flash.media.SoundMixer.bufferTime." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "Questa funzionalità non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "Per ulteriori informazioni, vedere LoaderInfo.url." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "Questa funzionalità non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NewLine, "Utilizzare '\n' come newline (nuova riga)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "Per ulteriori informazioni, vedere textField.maxScroll." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Level, "Il concetto di livelli non esiste in ActionScript 3.0, che invece fornisce l'accesso diretto all'elenco di visualizzazione. Per informazioni dettagliate, vedere il pacchetto flash.display." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Parent, "Utilizzare invece la proprietà parent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Root, "Questa proprietà è stata rimossa. L'equivalente più simile è Stage, che svolge la funzione di root (livello principale) dell'elenco di visualizzazione di ActionScript 3.0." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "Provare invece a dichiarare caller come argomento della funzione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Button_Target, "Questa funzionalità non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "Utilizzare invece la proprietà parent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "Questa funzionalità non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "Per ulteriori informazioni, vedere Sprite.hitArea." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Scroll, "Per ulteriori informazioni, vedere le proprietà scrollH e scrollV della classe flash.text.TextField." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TargetPath, "Utilizzare gli oggetti MovieClip direttamente come argomenti anziché come percorsi." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Video_Height, "Per ulteriori informazioni, vedere Video.videoHeight." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Video_Width, "Per ulteriori informazioni, vedere Video.videoWidth." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp__Proto__, "Per ulteriori informazioni, vedere l'elemento obsoleto __proto__." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Stage, "Per ulteriori informazioni, vedere DisplayObject.stage." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp__remoteClass, "Utilizzare invece il metodo registerClass() del pacchetto flash.net." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_random, "Utilizzare Math.random()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_chr, "Utilizzare String.fromCharCode()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_mbchr, "Utilizzare String.fromCharCode()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ord, "Utilizzare String.charCodeAt()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_mbord, "Utilizzare String.charCodeAt()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_substring, "Utilizzare invece il metodo String.substr." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "Utilizzare invece il metodo String.substr." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_length, "Utilizzare la proprietà length dell'argomento." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_mblength, "Utilizzare la proprietà length dell'argomento." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ASNative, "Per ulteriori informazioni, vedere le modifiche apportate a ASnative." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_addProperty, "Impostare le proprietà direttamente nell'istanza utilizzando come alternativa la notazione del punto (.)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_getProperty, "Accedere direttamente alla proprietà mediante la notazione del punto (.)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_setProperty, "Impostare le proprietà direttamente nell'istanza utilizzando come alternativa la notazione del punto (.)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_asfunction, "Per ulteriori informazioni, vedere TextEvent.LINK e addEventListener()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "Questo metodo è stato spostato nel pacchetto flash.utils." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "Sostituito dalla nuova funzione di costruzione della classe MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_fscommand, "Spostato nel pacchetto flash.system package. Vedere anche la classe flash.external.ExternalInterface per la comunicazione JavaScript/ActionScript." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_getURL, "Per una funzionalità equivalente, vedere flash.net.URLLoader.  Il pacchetto flash.net contiene anche le funzioni a livello di pacchetto navigateToURL() e sendToURL()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "Per ulteriori informazioni, vedere MovieClip.gotoAndPlay()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "Per ulteriori informazioni, vedere MovieClip.gotoAndStop()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_play, "Per ulteriori informazioni, vedere MovieClip.play()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_print, "Per ulteriori informazioni, vedere PrintJob.start()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "Per ulteriori informazioni, vedere PrintJob." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "Per ulteriori informazioni, vedere PrintJob." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_printNum, "Per ulteriori informazioni, vedere PrintJob." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Utilizzare Container.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_setInterval, "Spostato nel pacchetto flash.utils package.  Considerare l'uso della classe Timer come alternativa." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "Per ulteriori informazioni, vedere MovieClip.nextFrame()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_startDrag, "Per ulteriori informazioni, vedere MovieClip.startDrag()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_stop, "Per ulteriori informazioni, vedere MovieClip.stop()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "Per ulteriori informazioni, vedere Sound.stopAllSounds()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "Per ulteriori informazioni, vedere MovieClip.stopDrag()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "Utilizzare invece l'operatore punto (.) o l'istruzione with." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "Per ulteriori informazioni, vedere DisplayObject.stage e Stage.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "Utilizzare DisplayObjectContainer.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "Utilizzare DisplayObjectContainer.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "Questa funzione non è più di tipo globale, ma è ancora disponibile come metodo delle classi TimerEvent, MouseEvent e KeyboardEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "Per ulteriori informazioni, vedere Video.attachNetStream e Video.attachCamera." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "Utilizzare la classe URLLoader per eseguire il caricamento e passare il risultato a StyleSheet.parseCSS()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "In ActionScript 3.0, tutte le classi sono registrate per impostazione predefinita.  Se si usa AMF, vedere flash.utils.registerClassAlias() per ulteriori informazioni." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "Utilizzare le proprietà accessor (funzioni get/set) o la classe flash.utils.Proxy per ottenere una funzionalità simile." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "Utilizzare le proprietà accessor (funzioni get/set) o la classe flash.utils.Proxy per ottenere una funzionalità simile." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "Per ulteriori informazioni, vedere MovieClip.loadMovie()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "Per ulteriori informazioni, vedere MovieClip.loadMovieNum()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "Per ulteriori informazioni, vedere Loader.load()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "Per ulteriori informazioni, vedere Loader.load()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "Utilizzare la classe SWF per creare dei suoni dalla libreria." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onStatus, "In ActionScript 3.0, il gestore di eventi onStatus non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'status', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onID3, "In ActionScript 3.0, il gestore di eventi onID3 non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'id3', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoad, "In ActionScript 3.0, il gestore di eventi onLoad non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'load', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onSoundComplete, "In ActionScript 3.0, il gestore di eventi onSoundComplete non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'soundComplete', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onSetFocus, "In ActionScript 3.0, il gestore di eventi onSetFocus non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'focusIn', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onResize, "In ActionScript 3.0, il gestore di eventi onResize non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'resize', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onChanged, "In ActionScript 3.0, il gestore di eventi onChanged non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'change', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onKillFocus, "In ActionScript 3.0, il gestore di eventi onKillFocus non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'focusOut', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onScroller, "In ActionScript 3.0, il gestore di eventi onScroller non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'scroll', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onMouseDown, "In ActionScript 3.0, il gestore di eventi onMouseDown non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onMouseUp, "In ActionScript 3.0, il gestore di eventi onMouseUp non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onMouseMove, "In ActionScript 3.0, il gestore di eventi onMouseMove non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseMove', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onMouseWheel, "In ActionScript 3.0, il gestore di eventi onMouseWheel non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseWheel', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onKeyDown, "In ActionScript 3.0, il gestore di eventi onKeyDown non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'keyDown', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onKeyUp, "In ActionScript 3.0, il gestore di eventi onKeyUp non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'keyUp', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onData, "In ActionScript 3.0, il gestore di eventi onData non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'data', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "In ActionScript 3.0, il gestore di eventi onHTTPStatus non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'httpStatus', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onDragOut, "In ActionScript 3.0, il gestore di eventi onDragOut non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onDragOver, "In ActionScript 3.0, il gestore di eventi onDragOver non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onPress, "In ActionScript 3.0, il gestore di eventi onPress non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseDown', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onRelease, "In ActionScript 3.0, il gestore di eventi onRelease non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'click', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "In ActionScript 3.0, il gestore di eventi onReleaseOutside non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseUp', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onRollOut, "In ActionScript 3.0, il gestore di eventi onRollOut non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseOut', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onRollOver, "In ActionScript 3.0, il gestore di eventi onRollOver non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'mouseOver', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onActivity, "In ActionScript 3.0, il gestore di eventi onActivity non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'activity', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onSelect, "In ActionScript 3.0, il gestore di eventi onSelect non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'menuSelect', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onEnterFrame, "In ActionScript 3.0, il gestore di eventi onEnterFrame non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'enterFrame', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onUnload, "In ActionScript 3.0, il gestore di eventi onUnload non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'unload', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadComplete, "In ActionScript 3.0, il gestore di eventi onLoadComplete non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'load', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadError, "In ActionScript 3.0, il gestore di eventi onLoadError non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'error', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadInit, "In ActionScript 3.0, il gestore di eventi onLoadInit non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'init', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadProgress, "In ActionScript 3.0, il gestore di eventi onLoadProgress non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'progress', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onLoadStart, "In ActionScript 3.0, il gestore di eventi onLoadStart non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'start', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onClose, "In ActionScript 3.0, il gestore di eventi onClose non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'close', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onConnect, "In ActionScript 3.0, il gestore di eventi onConnect non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'connect', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onXML, "In ActionScript 3.0, onXML non viene attivato automaticamente da Flash Player.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ('xml', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "Utilizzare invece la proprietà hasChildNodes." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "La classe XMLEvent è obsoleta e l'evento xml non viene più inviato. Solo l'evento data viene inviato durante il caricamento del file." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "La classe XMLDoc è stata rinominata in XMLDocument." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Utilizzare invece la proprietà Accessibility.active." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "Utilizzare invece la costante ActivityEvent.ACTIVITY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "Utilizzare DisplayObjectContainer.parent.getChildIndex. Consultare le informazioni relative alla classe DisplayObjectContainer, che viene estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "Utilizzare DisplayObjectContainer.parent.setChildIndex. Consultare le informazioni relative alla classe DisplayObjectContainer, che viene estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "Utilizzare DisplayObjectContainer.getChildAt. Consultare le informazioni relative alla classe DisplayObjectContainer, che viene estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "Utilizzare invece DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild aggiunge sempre il nuovo elemento secondario all'indice DisplayObjectContainer.numChildren." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "Utilizzare invece la proprietà ByteArray.bytesAvailable." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "Utilizzare invece la proprietà ByteArray.position." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "Utilizzare invece la proprietà ByteArray.position." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Utilizzare invece il metodo Camera.getCamera()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Utilizzare invece la proprietà Camera.currentFPS." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Utilizzare invece la proprietà Camera.keyFrameInterval." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Utilizzare invece la proprietà Camera.loopback." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "Utilizzare invece la proprietà ColorTransform.color." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "Utilizzare invece la proprietà ColorTransform.color." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Utilizzare invece la proprietà Container.textSnapshot." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "Utilizzare invece il metodo ContextMenu.clone()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "Utilizzare invece la proprietà ContextMenu.forwardAndBack." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "Utilizzare invece il metodo ContextMenuItem.clone()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "Utilizzare invece la proprietà CustomActions.actionsList." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "Utilizzare invece la costante DataEvent.DATA." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "Utilizzare invece la proprietà DisplayObject.scaleX." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "Utilizzare invece la proprietà DisplayObject.scaleX." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "Utilizzare invece la proprietà DisplayObject.scaleY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "Utilizzare invece la proprietà DisplayObject.scaleY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "Utilizzare invece la proprietà DisplayObject.mouseX." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "Utilizzare invece la proprietà DisplayObject.mouseX." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "Utilizzare invece la proprietà DisplayObject.mouseY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "Utilizzare invece la proprietà DisplayObject.mouseY." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "Questa funzione non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "Questa funzione non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "Utilizzare invece la proprietà DisplayObject.name." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "Utilizzare invece la proprietà DisplayObject.parent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "Utilizzare invece la proprietà DisplayObject.mask." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "Utilizzare invece la proprietà DisplayObject.visible." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "Utilizzare invece la proprietà DisplayObject.x." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "Utilizzare invece la proprietà DisplayObject.y." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "Utilizzare invece la proprietà DisplayObject.rotation." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "Utilizzare invece la proprietà DisplayObject.alpha." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "Utilizzare invece la proprietà DisplayObject.width." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "Utilizzare invece la proprietà DisplayObject.height." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "Utilizzare invece la proprietà ExternalInterface.available." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "Utilizzare invece la costante ErrorEvent.ERROR." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Utilizzare invece la proprietà Event.isDefaultPrevented." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Utilizzare invece la costante Event.ACTIVATE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Utilizzare invece la costante Event.ADDED." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Utilizzare invece la costante Event.CANCEL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Utilizzare invece la costante Event.CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Utilizzare invece la costante Event.CLOSE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Utilizzare invece la costante Event.COMPLETE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Utilizzare invece la costante Event.CONNECT." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Utilizzare invece la costante Event.DEACTIVATE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Utilizzare invece la costante Event.ENTER_FRAME." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Utilizzare invece la costante Event.ID3." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Utilizzare invece la costante Event.INIT." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Utilizzare invece la costante Event.MOUSE_LEAVE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Utilizzare invece la costante Event.OPEN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Utilizzare invece la costante Event.REMOVED." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Utilizzare invece la costante Event.RENDER." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Utilizzare invece la costante Event.RESIZE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Utilizzare invece la costante Event.SCROLL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Utilizzare invece la costante Event.SELECT." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Utilizzare invece la costante Event.SOUND_COMPLETE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Utilizzare invece la costante Event.TAB_CHILDREN_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Utilizzare invece la costante Event.TAB_ENABLED_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Utilizzare invece la costante Event.TAB_INDEX_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Utilizzare invece la costante Event.UNLOAD." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "Utilizzare invece la costante FocusEvent.FOCUS_IN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "Utilizzare invece la costante FocusEvent.FOCUS_OUT." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "Utilizzare invece la costante FocusEvent.KEY_FOCUS_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "Utilizzare invece la costante FocusEvent.MOUSE_FOCUS_CHANGE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Utilizzare invece il metodo Graphics.beginBitmapFill()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "Utilizzare invece la proprietà BitmapFilter.quality." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "Utilizzare invece KeyboardEvent.charCode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "Utilizzare invece KeyboardEvent.keyCode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "Per ulteriori informazioni, vedere la classe KeyboardEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "Per ulteriori informazioni, vedere KeyboardEvent.ctrlKey, KeyboardEvent.altKey e KeyboardEvent.shiftKey." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "Utilizzare invece la costante PAGE_DOWN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "Utilizzare invece la costante PAGE_UP." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "Utilizzare invece la costante DELETE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "Utilizzare invece la costante CAPS_LOCK." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "Utilizzare invece una delle costanti NUMPAD_0 -> NUMPAD_9." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "Utilizzare invece la proprietà InteractiveObject.focusRect." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "Utilizzare invece la proprietà InteractiveObject.contextMenu." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "Utilizzare invece la proprietà KeyboardEvent.charCode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "Utilizzare invece la proprietà KeyboardEvent.keyCode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Utilizzare invece la proprietà Loader.contentLoaderInfo." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "Questa funzione non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "Questa funzione non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "Utilizzare invece la proprietà LoaderInfo.loaderURL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "Utilizzare invece la proprietà LocalConnection.domain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "Utilizzare invece la proprietà MenuEvent.contextMenuOwner." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Utilizzare invece il metodo Microphone.getMicrophone()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "Se il nome della sottoclasse MovieClip è A, utilizzare var mc= new A(); addChild(mc). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "Utilizzare var mc= new MovieClip(); addChild(mc). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "Utilizzare var tf= new TextField(); addChild(mc). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Utilizzare Container.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "Utilizzare var l = new Loader(); addChild(l); l.load(new URLRequest(\"url richiesto\"));. Per ulteriori informazioni, vedere le classi Loader e DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "Utilizzare invece DisplayObjectContainer.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "Utilizzare invece DisplayObjectContainer.removeChild(childName). Per ulteriori informazioni, vedere la classe DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "Utilizzare invece DisplayObjectContainer.parent.getChildIndex. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "Utilizzare invece DisplayObjectContainer.parent.setChildIndex. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "Utilizzare invece DisplayObjectContainer.getChildAt. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "Utilizzare invece DisplayObjectContainer.numChildren. DisplayObjectContainer.addChild aggiunge sempre il nuovo elemento secondario all'indice DisplayObjectContainer.numChildren." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "Per ulteriori informazioni, vedere DisplayObject.addChild." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "Per ulteriori informazioni, vedere le classi LoaderInfo.bytesLoaded e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "Per ulteriori informazioni, vedere le classi LoaderInfo.bytesTotal e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "Per una funzionalità equivalente, vedere flash.net.URLLoader.  Il pacchetto flash.net contiene anche le funzioni a livello di pacchetto navigateToURL() e sendToURL()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "Per ulteriori informazioni, vedere le classi LoaderInfo.url e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "Per ulteriori informazioni, vedere le classi LoaderInfo.url e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "Utilizzare invece la proprietà MovieClip.mask." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "Per ulteriori informazioni, vedere le classi LoaderInfo.swfVersion e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "Utilizzare invece la proprietà MovieClip.currentFrame." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "Utilizzare invece la proprietà MovieClip.framesLoaded." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "Utilizzare invece la proprietà MovieClip.totalFrames." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "Per ulteriori informazioni, vedere displayObjectInstance.root." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "Per ulteriori informazioni, vedere displayObjectInstance.root." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "Utilizzare invece la proprietà statica flash.media.SoundMixer.bufferTime." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "Per ulteriori informazioni, vedere la classe Graphics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "Utilizzare invece la proprietà NetStream.bufferTime." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "Utilizzare invece la proprietà NetStream.currentFPS." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "Utilizzare invece la proprietà NetStream.videoCodec." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "Utilizzare invece la proprietà NetStream.audioCodec." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "Utilizzare invece la proprietà ProductManager.isInstalled." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "Utilizzare invece la proprietà ProductManager.installedVersion." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "Utilizzare invece la proprietà ProductManager.isRunning." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Utilizzare invece il metodo Point.add()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Utilizzare invece la proprietà Proxy.deleteDescendants." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "Utilizzare invece il metodo heapDump()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "Utilizzare invece la proprietà ProgressEvent.bytesLoaded." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "Utilizzare invece la proprietà ProgressEvent.bytesTotal." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Utilizzare invece la proprietà Rectangle.isEmpty." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "Utilizzare invece la proprietà SoundTransform.pan." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Utilizzare invece la proprietà Sockect.bytesAvailable." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "Utilizzare invece la proprietà SharedObject.size." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "Utilizzare invece la proprietà SharedObject.fps." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "Questo metodo non è più supportato." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Utilizzare invece il metodo Sprite.constructChildren()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Utilizzare invece la proprietà Sprite.dropTarget." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Utilizzare invece la proprietà Stage.focus." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Utilizzare invece la proprietà Stage.focus." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Utilizzare invece la proprietà Stage.showDefaultContextMenu." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "Utilizzare invece la proprietà StyleSheet.styleNames." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "Utilizzare un'istanza di URLLoader per caricare i dati StyleSheet, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "Utilizzare invece la proprietà IME.enabled." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "Utilizzare invece la proprietà IME.enabled." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "Utilizzare invece la proprietà IME.instance." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "Utilizzare invece la proprietà IME.conversionMode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "Utilizzare invece la proprietà IME.conversionMode." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "Utilizzare invece la proprietà System.vmVersion." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "Utilizzare invece la proprietà SWFLoaderInfo.swfVersion." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "Utilizzare invece la proprietà SWFLoaderInfo.actionScriptVersion." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "Utilizzare invece la proprietà TextField.defaultTextFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "Utilizzare invece la proprietà TextField.defaultTextFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "Utilizzare invece DisplayObjectContainer.parent.getChildIndex. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "Utilizzare invece DisplayObjectContainer.parent.setChildIndex. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "Utilizzare invece DisplayObjectContainer.getChildAt. Per ulteriori informazioni, vedere la classe DisplayObjectContainer, che è estesa da MovieClip." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "Utilizzare invece DisplayObjectContainer.numChildren.  DisplayObjectContainer.addChild aggiunge sempre il nuovo elemento secondario all'indice DisplayObjectContainer.numChildren." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "Utilizzare invece il metodo TextField.replaceSelectedText()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "Utilizzare invece il metodo TextField.getLineIndexOfChar()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "Utilizzare invece la proprietà TextField.selectionBeginIndex." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "Utilizzare invece la proprietà TextField.selectionEndIndex." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "Utilizzare invece la proprietà TextField.caretIndex." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Utilizzare invece il metodo Font.enumerateFonts()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "Utilizzare invece la proprietà TextField.maxScrollV." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "Utilizzare invece la proprietà TextField.scrollH." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "Utilizzare invece la proprietà TextField.maxScrollH." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "Utilizzare invece la proprietà TextField.defaultTextFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "Creare un TextField temporaneo e utilizzare invece TextField.getLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "Utilizzare invece la proprietà TextSnapshot.charCount." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "Utilizzare invece il metodo navigateToURL() del pacchetto flash.net." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "Utilizzare invece il metodo sendToURL() del pacchetto flash.net." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "Utilizzare invece la proprietà URLLoader.dataFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "Utilizzare invece la proprietà URLStream.bytesAvailable." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "Questa proprietà non è più supportata." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "Utilizzare invece la proprietà URLRequest.applicationDomain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "Per aggiungere intestazioni di richiesta, impostare la proprietà URLRequest.requestHeaders su un array di oggetti URLRequestHeader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "Utilizzare un'istanza di URLLoader per caricare il file XML, quindi quindi passare i dati URLLoader alla funzione di costruzione XMLDocument. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "Utilizzare invece il metodo sendToURL() del pacchetto flash.net." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "Impostare la proprietà postData di un oggetto URLRequest e utilizzarlo con un oggetto URLLoader per caricare il file XML.  Passare i dati URLLoader alla funzione di costruzione XMLDocument. Per ulteriori informazioni, vedere le classi URLLoader, URLRequest e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "Utilizzare un'istanza di URLLoader per caricare il file XML, quindi quindi passare i dati URLLoader alla funzione di costruzione XMLDocument. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "Per aggiungere intestazioni di richietsa, impostare la proprietà URLRequest.requestHeaders su un array di oggetti URLRequestHeader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "Per ulteriori informazioni, vedere le classi URLLoader.bytesLoaded e URLLoader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "Per ulteriori informazioni, vedere le classi URLLoader.bytesTotal e URLLoader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "Utilizzare un'istanza di URLLoader per caricare il file XML, quindi passare i dati loader al metodo StyleSheet.parseCSS. Per ulteriori informazioni, vedere le classi URLLoader e EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "Utilizzare invece la proprietà URLRequest.contentType." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "Verificare invece le eventuali eccezioni generate dalla funzione di costruzione XMLDocument o dal metodo XMLDocument.parseXML. Per ulteriori informazioni, vedere XMLDocument." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Button, "La classe Button è stata rinominata in SimpleButton." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Container, "La classe Container è stata rinominata in DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Image, "La classe Image è stata rinominata in BitmapData." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "La classe ImageFilter è stata rinominata in BitmapFilter." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "La classe ImageSprite è stata rinominata in Bitmap." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "La classe ImageLoaderInfo è stata rinominata in BitmapLoaderInfo." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "La classe ImeEvent è stata rinominata in IMEEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Key, "La classe Key è stata rinominata in Keyboard." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "La classe LineMetrics è stata rinominata in TextLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LoadVars, "Per ulteriori informazioni, vedere la classe URLVariables, le proprietà URLRequest.urlVariables e URLRequest.postData e la proprietà URLLoader.dataFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "La classe MenuEvent è stata rinominata in ContextMenuEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "La classe SystemCapabilities è stata rinominata in Capabilities." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextExtents, "Utilizzare invece la proprietà TextField.getLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Button, "La classe Button è stata rinominata in SimpleButton." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Container, "La classe Container è stata rinominata in DisplayObjectContainer." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Image, "La classe Image è stata rinominata in BitmapData." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "La classe ImageFilter è stata rinominata in BitmapFilter." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "La classe ImageSprite è stata rinominata in Bitmap." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "La classe ImageLoaderInfo è stata rinominata in BitmapLoaderInfo." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "La classe ImeEvent è stata rinominata in IMEEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Key, "La classe Key è stata rinominata in Keyboard." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "La classe LineMetrics è stata rinominata in TextLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "Per ulteriori informazioni, vedere la classe URLVariables, le proprietà URLRequest.urlVariables e URLRequest.postData e la proprietà URLLoader.dataFormat." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "La classe MenuEvent è stata rinominata in ContextMenuEvent." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "La classe SystemCapabilities è stata rinominata in Capabilities." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "Utilizzare invece la proprietà TextField.getLineMetrics." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "Per ulteriori informazioni, vedere la classe Proxy, che offre una funzionalità simile." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "Utilizzare invece il metodo XMLUI.getProperty." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "Utilizzare invece il metodo XMLUI.setProperty." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "Utilizzare invece la proprietà DisplayObject.accessibilityProperties." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "Utilizzare invece la proprietà DisplayObject.scale9Grid." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Utilizzare invece il metodo Graphics.drawOval." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "Utilizzare invece la proprietà NetConnection.connected." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Utilizzare invece la proprietà Socket.connected." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "Utilizzare invece la proprietà URLStream.connected." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "Utilizzare invece la proprietà SyncEvent.changeList." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "Utilizzare invece la proprietà TextField.scrollV." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "Utilizzare invece la proprietà TextField.bottomScrollV." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "Utilizzare invece la costante BitmapDataChannel.RED." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "Utilizzare invece la costante BitmapDataChannel.GREEN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "Utilizzare invece la costante BitmapDataChannel.BLUE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "Utilizzare invece la costante BitmapDataChannel.ALPHA." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_instanceof, "Utilizzare invece l'operatore is." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "Utilizzare invece il metodo flash.system.Security.showSettings." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "Utilizzare invece la proprietà System.useCodePage." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "Utilizzare invece la classe flash.events.EventDispatcher." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "Utilizzare invece la proprietà statica flash.media.SoundMixer.bufferTime." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "Creare invece una nuova istanza della classe del simbolo bitmap della libreria, ad esempio new myBitmapName()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "Per ulteriori informazioni, vedere Loader.load()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "La classe MovieClipLoader è stata sostituita dalla classe flash.display.Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "La classe MovieClipLoader è stata sostituita dalla classe flash.display.Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "Utilizzare invece la costante flash.system.IMEConversionMode.ALPHANUMERIC_FULL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "Utilizzare invece la costante flash.system.IMEConversionMode.ALPHANUMERIC_HALF." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "Utilizzare invece la costante flash.system.IMEConversionMode.CHINESE." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "Utilizzare invece la costante flash.system.IMEConversionMode.JAPANESE_HIRAGANA." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "Utilizzare invece la costante flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "Utilizzare invece la costante flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "Utilizzare invece la costante flash.system.IMEConversionMode.KOREAN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "Utilizzare invece la costante flash.system.IMEConversionMode.UNKNOWN." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onCancel, "In ActionScript 3.0, il gestore di eventi onCancel non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( cancel, onCancel)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "Non è disponibile un'alternativa diretta. È possibile utilizzare il metodo willTrigger() per specificare se sono stati registrati dei listener." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onIMEComposition, "In ActionScript 3.0, il gestore di eventi onIMEComposition non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( imeComposition, handlerName)." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "Per ulteriori informazioni, vedere le classi LoaderInfo.url e Loader." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "Utilizzare invece il metodo getFullYear()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "Utilizzare invece il metodo setFullYear()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "Utilizzare invece il metodo getUTCFullYear()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "Utilizzare invece la proprietà rate." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Selection, "La classe Selection è stata rimossa. Per ulteriori informazioni, vedere il metodo addEventListener della classe dalla quale si desidera ottenere informazioni sulla selezione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Selection, "La classe Selection è stata rimossa. Per ulteriori informazioni, vedere il metodo addEventListener della classe dalla quale si desidera ottenere informazioni sulla selezione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "Utilizzare invece la proprietà gain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "I valori di colore possono essere assegnati direttamente mediante la funzione di costruzione o le proprietà della classe ColorTransform." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "I valori di colore possono essere assegnati direttamente mediante la funzione di costruzione o le proprietà della classe ColorTransform." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "Vedere le informazioni sulle proprietà della classe flash.display.InteractiveObject relative all'attivazione." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "Vedere gli argomenti della Guida relativi al metodo flash.display.Graphics.beginBitmapFill." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "Vedere gli argomenti della Guida relativi al metodo flash.display.DisplayObject.hitTestObject()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "Vedere gli argomenti della Guida relativi al metodo addChild()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "Utilizzare invece il metodo load()." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "Utilizzare flash.media.SoundChannel.leftPeak e flash.media.SoundChannel.rightPeak per monitorare e controllare l'ampiezza di un canale audio." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "Utilizzare invece la proprietà soundTransform." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "Utilizzare invece la proprietà SoundTransform.pan." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "Utilizzare invece la proprietà SoundTransform.pan." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "Utilizzare invece la proprietà bytesLoaded." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "Utilizzare invece la proprietà bytesTotal." );
        warningConstantsIT[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "Uso inefficiente di += su un'istanza TextField.." );
        warningConstantsIT[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "L'aggiunta di testo a un'istanza TextField mediante += è spesso un'operazione più lenta rispetto all'uso del metodo TextField.appendText()." );
        warningConstantsIT[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "Possibili parentesi mancanti." );
        warningConstantsIT[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "È stato utilizzato un valore Function ma era previsto un valore del tipo %s.  È possibile che manchino le parentesi () dopo il riferimento alla funzione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_InstanceOfChanges, "Uso dell'operatore instanceof." );
        warningConstantsIT[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "L'operatore instanceof è sconsigliato; utilizzare invece l'operatore is." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "Il gestore di eventi allowDomain() è ora un metodo standard anziché un callback di evento. Per ulteriori informazioni, vedere il nuovo metodo LocalConnection.allowDomain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "Il gestore di eventi allowInsecureDomain() è ora un metodo standard anziché un callback di evento. Per ulteriori informazioni, vedere il nuovo metodo LocalConnection.allowInsecureDomain." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_call, "Il metodo globale call() non è più supportato." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_Color, "La classe Color è stata rimossa. Utilizzare la classe flash.geom.ColorTransform per ottenere una funzionalità equivalente." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Color, "La classe Color è stata rimossa. Utilizzare la classe flash.geom.ColorTransform per ottenere una funzionalità equivalente." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "I file SWF di ActionScript 3.0 usano sempre le regole di corrispondenza del dominio esatto." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp_capabilities, "La classe capabilities è stata rinominata in Capabilities." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_capabilities, "La classe capabilities è stata rinominata in Capabilities." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "Per ulteriori informazioni, vedere addEventListener ( eventName, listener, useCapture, priority )." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "Per ulteriori informazioni, vedere removeEventListener ( eventName, listener, useCapture)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onComplete, "In ActionScript 3.0, il gestore di eventi onComplete non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'complete', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onHTTPError, "In ActionScript 3.0, il gestore di eventi onHTTPError non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'httpError', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onIOError, "In ActionScript 3.0, il gestore di eventi onIOError non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'ioError', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onProgress, "In ActionScript 3.0, il gestore di eventi onProgress non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'progress', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onSecurityError, "In ActionScript 3.0, il gestore di eventi onSecurityError non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'securityError', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Event_onOpen, "In ActionScript 3.0, il gestore di eventi onOpen non viene attivato automaticamente da Flash Player in fase di runtime.  Prima è necessario registrare il gestore per l'evento mediante addEventListener ( 'open', callback_handler)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "Possibile utilizzo della classe XML di ActionScript 2.0." );
        warningConstantsIT[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "Problema relativo alla migrazione: la classe XML di ActionScript 2.0 è stata rinominata in XMLDocument." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadDateCast, "Operazione di inserimento in Date non valida." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) si comporta allo stesso modo di Date().toString(). Per inserire un valore nel tipo Date, utilizzare l'espressione \"x as Date\" invece di Date(x)." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ImportHidesClass, "L'importazione di un pacchetto con lo stesso nome della classe corrente nasconde il relativo identificatore in questa area di validità." );
        warningConstantsIT[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "L'importazione di un pacchetto con lo stesso nome della classe corrente nasconde il relativo identificatore in questa area di validità." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "Più di un argomento con lo stesso nome." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "Sono stati specificati più argomenti con il nome '%s'.  I riferimenti a tale argomento verranno sempre risolti all'ultima occorrenza." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Utilizzare invece il metodo Rectangle.containsRect." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_eval, "Questa funzionalità è stata rimossa." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_getVersion, "Questa funzionalità è stata sostituita dalla proprietà flash.system.Capabilities.version." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "Questa funzionalità è stata sostituita dalla proprietà flash.display.MovieClip.framesLoaded." );
        warningConstantsIT[index++] = new AscWarning(kUnsupportedProp__global, "La proprietà _global è stata rimossa.  Per ottenere una funzionalità equivalente, utilizzare un membro statico di una classe." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadBoolAssignment, "È stato utilizzato un valore non booleano ma era previsto un valore booleano." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "È stato utilizzato %s ma era previsto un valore booleano.  L'espressione verrà assegnata forzatamente al tipo Boolean." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadES3TypeProp, "Proprietà sconosciuta." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s non è una proprietà riconosciuta della classe dinamica %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadES3TypeMethod, "Metodo sconosciuto." );
        warningConstantsIT[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s non è un metodo riconosciuto della classe dinamica %s." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DuplicateVariableDef, "Definizione di variabile duplicata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "Definizione di variabile duplicata." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "Il nome della definizione corrisponde al nome di un pacchetto importato.  I riferimenti non qualificati a quel nome verranno risolti al pacchetto e non alla definizione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "Il nome della definizione corrisponde al nome di un pacchetto importato.  I riferimenti non qualificati a quel nome verranno risolti al pacchetto e non alla definizione." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Possibile tentativo di eliminare una proprietà fissa." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "La proprietà dichiarata %s non può essere eliminata. Per liberare la memoria ad essa associata, impostarne il valore su null." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsIT[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsIT[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   };

   static final AscWarning[] warningConstantsJP= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsJP() 
   {
      int index=0;
        warningConstantsJP[index++] = new AscWarning(kWarning_NoTypeDecl, "型宣言がありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' に型宣言がありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadUndefinedComparision, "undefined の比較が非論理的です。型が指定されていない変数 (または * 型の変数) のみ undefined にすることができます。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "%s 型の変数は undefined にすることができません。値 undefined は %s に型強制された後で比較されます。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "new 式で使用されている関数は値を返します。結果は、関数の新しいインスタンスではなく、その関数の戻り値になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "移行の問題 : new %s の結果は、関数 %s の新しいインスタンスではなく、その関数の戻り値になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "Boolean() を引数なしで呼び出すと、ActionScript 3.0 では false が返されます。ActionScript 2.0 では Boolean() に undefined が返されていました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "Boolean() を引数なしで使用します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NumberFromStringChanges, "ActionScript 3.0 では、空白文字は無視され、'' は 0 を返します。ActionScript 2.0 では、パラメータが '' であるか、空白文字を含む場合に Number() は NaN を返します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "移行の問題 : Number('') 関数を空のストリング引数で呼び出した場合、ActionScript 3.0 では 0 を返し、ActionScript 2.0 では NaN を返します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() フォーマットは変更されました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "移行の問題 : Array.toString() による null エレメントと undefined エレメントの処理方法が変わりました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedPropertyError, "サポートされていない ActionScript 2.0 のプロパティです。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "移行の問題 : プロパティ %s はサポートされないようになりました。%s。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedFunctionError, "サポートされていない ActionScript 2.0 の関数です。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "移行の問題 : メソッド %s はサポートされないようになりました。%s。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ChangesInResolve, "__resolve はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "移行の問題 : __resolve はサポートされなくなりました。同様の機能を得るには新しい Proxy クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_LevelNotSupported, "_level はサポートされなくなりました。詳細については、flash.display パッケージを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "移行の問題 : _level はサポートされなくなりました。詳細については、flash.display パッケージを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ClassIsSealed, "クラスは sealed です。このクラスにメンバーを動的に追加することはできません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "移行の問題 : %s はダイナミッククラスではありません。インスタンスにメンバーを動的に追加することはできません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ScopingChangeInThis, "this キーワードのスコープの変更。クラスのインスタンスから抽出したクラスメソッドでは、this で常にそのインスタンスを参照します。ActionScript 2.0 では、メソッドを呼び出した場所に基づいて this を動的に参照します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "移行の問題 : メソッド %s は this キーワードのスコープの変更により ActionScript 3.0 では異なる動作をします。追加情報については、警告 1083 に関するトピックを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "名前空間の宣言がありません (変数が public や private などに定義されていません)。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s がデフォルトの名前空間にスコープされます :内部 %s。このパッケージの外部には表示されません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 では、オブジェクトのプロパティを \"for x in target\" ステートメント内でランダムな順番で繰り返し処理します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "移行の問題 : ActionScript 3.0 では、オブジェクトのプロパティを \"for x in target\" ステートメント内でランダムな順番で繰り返し処理します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_InternalError, "コンパイラの内部エラー。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_InternalError_specific, "エラーコード : %s。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler がリスナーとして追加されていません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "移行の問題 : %s" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NegativeUintLiteral, "負の値を uint データ型に割り当てると、大きい正の値になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "uint 値 (正の値) が必要なところに負の値が使用されました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNullComparision, "null の比較が無効です。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNullComparision_specific, "null の比較が無効です。%s 型の変数は null にすることができません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNaNComparision, "NaN の比較が無効です。NaN を含む比較処理は、NaN != NaN となるため false になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "NaN の比較が無効です。このステートメントは、常に false と評価します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "条件内の代入です。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "条件内の代入です。= ではなく == をですか?" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNullAssignment, "null に代入できません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "null に代入できません。%s 型の変数は null にすることができません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoConstructor, "コンストラクタが見つかりません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoConstructor_specific, "コンストラクタ関数がクラス %s に指定されていません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ConstNotInitialized, "定数が初期化されていません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "定数は初期化されませんでした。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadArrayCast, "無効な Array キャスト演算である可能性があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) は new Array(x) と同じように動作します。Array 型に値をキャストして、Array(x) の代わりに式 x を Array として使用します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "super() ステートメントがコンストラクタ内で呼び出されませんでした。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "super() ステートメントは、このコンストラクタを入力する前に実行されます。実行時に明示的に制御する場合は、コンストラクタ内で super() への呼び出しを追加します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_version, "代わりに、Capabilities.version を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Focusrect, "詳細については、InteractiveObject.focusRect を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Highquality, "詳細については、Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "詳細については、Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "詳細については、Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Quality, "詳細については、Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "代わりに、静的プロパティ flash.media.SoundMixer.bufferTime を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "詳細については、LoaderInfo.url を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NewLine, "改行文字には '\n' を使用します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "詳細については、textField.maxScroll を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Level, "ActionScript 3.0 ではレベルの概念が存在せず、代わりに表示リストへの直接アクセスが提供されています。詳細については、flash.display パッケージを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Parent, "このプロパティの代わりに、parent プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Root, "このプロパティは廃止されました。もっとも近いのは ActionScript 3.0 表示リストのルートとなる Stage です。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "代わりに、caller をこの関数の引数として宣言してみてください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Button_Target, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "このプロパティの代わりに、parent プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "詳細については Sprite.hitArea を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Scroll, "詳細については、flash.text.TextField クラスの scrollH および scrollV プロパティを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TargetPath, "MovieClip オブジェクトは、パスではなく引数として直接に使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Video_Height, "詳細については、Video.videoHeight を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Video_Width, "詳細については、Video.videoWidth を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp__Proto__, "詳細については、古い __proto__ を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Stage, "詳細については、DisplayObject.stage を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp__remoteClass, "代わりに、flash.net パッケージの registerClass() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_random, "代わりに、Math.random() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_chr, "代わりに、String.fromCharCode() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_mbchr, "代わりに、String.fromCharCode() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ord, "代わりに、String.charCodeAt() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_mbord, "代わりに、String.charCodeAt() を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_substring, "代わりに String.substr メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "代わりに String.substr メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_length, "代わりに、この引数の length プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_mblength, "代わりに、この引数の length プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ASNative, "詳細については、ASnative の変更個所を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_addProperty, "この方法ではなく、ドット (.) 表記法を使用してインスタンスにプロパティを直接設定してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_getProperty, "この方法ではなく、ドット (.) 表記法を使用してプロパティに直接アクセスしてください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_setProperty, "この方法ではなく、ドット (.) 表記法を使用してインスタンスにプロパティを直接設定してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_asfunction, "詳細については、TextEvent.LINK および addEventListener() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "このメソッドは flash.utils パッケージに移動しました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "新しい MovieClip クラスコンストラクタ関数に置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_fscommand, "flash.system パッケージに移動しました。また、Javascript とActionScript の通信については、flash.external.ExternalInterface クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_getURL, "同等の機能については、flash.net.URLLoader を参照してください。flash.net パッケージにも、パッケージレベルの関数 navigateToURL() および sendToURL() が含まれています。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "詳細については、MovieClip.gotoAndPlay() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "詳細については、MovieClip.gotoAndStop() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_play, "詳細については、MovieClip.play() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_print, "詳細については、PrintJob.start() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "詳細については、PrintJob を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "詳細については、PrintJob を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_printNum, "詳細については、PrintJob を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Container.removeChild (childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_setInterval, "flash.utils パッケージに移動しました。代わりに Timer クラスの使用を考慮してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "詳細については、MovieClip.nextFrame() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_startDrag, "詳細については、MovieClip.startDrag() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_stop, "詳細については、MovieClip.stop() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "詳細については、Sound.stopAllSounds() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "詳細については、MovieClip.stopDrag() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "代わりに、ドット (.) 演算子または with ステートメントを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "詳細については、DisplayObject.stage および Stage.quality を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "代わりに、DisplayObjectContainer.removeChild(childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "代わりに、DisplayObjectContainer.removeChild(childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "この関数はグローバル関数ではなくなりましたが、引き続き TimerEvent クラス、MouseEvent クラス、および KeyboardEvent クラスのメソッドとして使用できます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "詳細については、Video.attachNetStream、Video.attachCamera を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "読み込みを実行する URLLoader クラスを使用して、StyleSheet.parseCSS() に結果を渡します" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "Actionscript 3.0 では、すべてのクラスがデフォルトで登録されています。AMF を使用している場合の詳細については、flash.utils.registerClassAlias() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "同じ機能としてアクセサプロパティ (get/set 関数) または flash.utils.Proxy クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "同じ機能としてアクセサプロパティ (get/set 関数) または flash.utils.Proxy クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "詳細については、MovieClip.loadMovie() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "詳細については、MovieClip.loadMovieNum() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "詳細については、Loader.load() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "詳細については、Loader.load() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "サウンドをライブラリから作成するには、SWF クラスを使用してください" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onStatus, "ActionScript 3.0 では、onStatus イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('status', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onID3, "ActionScript 3.0 では、onID3 イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('id3', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoad, "ActionScript 3.0 では、onLoad イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('load', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onSoundComplete, "ActionScript 3.0 では、onSoundComplete イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('soundComplete', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onSetFocus, "ActionScript 3.0 では、onSetFocus イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('focusIn', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onResize, "ActionScript 3.0 では、onResize イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('resize', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onChanged, "ActionScript 3.0 では、onChanged イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('change', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onKillFocus, "ActionScript 3.0 では、onKillFocus イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('focusOut', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onScroller, "ActionScript 3.0 では、onScroller イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('scroll', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onMouseDown, "ActionScript 3.0 では、onMouseDown イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseDown', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onMouseUp, "ActionScript 3.0 では、onMouseUp イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseUp', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onMouseMove, "ActionScript 3.0 では、onMouseMove イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseMove', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onMouseWheel, "ActionScript 3.0 では、onMouseWheel イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseWheel', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onKeyDown, "ActionScript 3.0 では、onKeyDown イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('keyDown', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onKeyUp, "ActionScript 3.0 では、onKeyUp イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('keyUp', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onData, "ActionScript 3.0 では、onData イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('data', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "ActionScript 3.0 では、onHTTPStatus イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('httpStatus', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onDragOut, "ActionScript 3.0 では、onDragOut イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseOut', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onDragOver, "ActionScript 3.0 では、onDragOver イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseOver', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onPress, "ActionScript 3.0 では、onPress イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseDown', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onRelease, "ActionScript 3.0 では、onRelease イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('click', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "ActionScript 3.0 では、onReleaseOutside イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseUp', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onRollOut, "ActionScript 3.0 では、onRollOut イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseOut', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onRollOver, "ActionScript 3.0 では、onRollOver イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('mouseOver', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onActivity, "ActionScript 3.0 では、onActivity イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('activity', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onSelect, "ActionScript 3.0 では、onSelect イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('menuSelect', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onEnterFrame, "ActionScript 3.0 では、onEnterFrame は Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('enterFrame', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onUnload, "ActionScript 3.0 では、onUnload イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('unload', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadComplete, "ActionScript 3.0 では、onLoadComplete は Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('load', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadError, "ActionScript 3.0 では、onLoadError イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('error', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadInit, "ActionScript 3.0 では、onLoadInit イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('init', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadProgress, "ActionScript 3.0 では、onLoadProgress イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('progress', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onLoadStart, "ActionScript 3.0 では、onLoadStart は Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('start', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onClose, "ActionScript 3.0 では、onClose イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('close', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onConnect, "ActionScript 3.0 では、onConnect イベントハンドラは Flash Player によって自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('connect', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onXML, "ActionScript 3.0 では、onXML は Flash Player によって自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('xml', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "代わりに、プロパティ hasChildNodes を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "XMLEvent クラスは古くなり、xml イベントは送り出されなくなりました。data イベントだけがファイルの読み込み時に送り出されます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc クラスの名前は XMLDocument になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "代わりに、Accessibility.active プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "代わりに、ActivityEvent.ACTIVITY 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "代わりに、DisplayObjectContainer.parent.getChildIndex を使用してください。MovieClip により拡張される DisplayObjectContainer クラスのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "代わりに、DisplayObjectContainer.parent.setChildIndex を使用してください。MovieClip により拡張される DisplayObjectContainer クラスのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "代わりに、DisplayObjectContainer.getChildAt を使用してください。MovieClip により拡張される DisplayObjectContainer クラスのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "代わりに、DisplayObjectContainer.numChildren を使用してください。DisplayObjectContainer.addChild は常に新しい子をインデックス DisplayObjectContainer.numChildren に追加します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "代わりに、ByteArray.bytesAvailable プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "代わりに、ByteArray.position プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "代わりに、ByteArray.position プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "代わりに、Camera.getCamera() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "代わりに、Camera.currentFPS プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "代わりに、Camera.keyFrameInterval プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "代わりに、Camera.loopback プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "代わりに、ColorTransform.color プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "代わりに、ColorTransform.color プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "代わりに、Container.textSnapshot プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "代わりに、ContextMenu.clone() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "代わりに、ContextMenu.forwardAndBack プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "代わりに、ContextMenuItem.clone() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "代わりに、CustomActions.actionsList プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "代わりに、DataEvent.DATA 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "代わりに、DisplayObject.scaleX プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "代わりに、DisplayObject.scaleX プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "代わりに、DisplayObject.scaleY プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "代わりに、DisplayObject.scaleY プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "代わりに、DisplayObject.mouseX プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "代わりに、DisplayObject.mouseX プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "代わりに、DisplayObject.mouseY プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "代わりに、DisplayObject.mouseY プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "代わりに、DisplayObject.name プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "代わりに、DisplayObject.parent プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "代わりに、DisplayObject.mask プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "代わりに、DisplayObject.visible プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "代わりに、DisplayObject.x プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "代わりに、DisplayObject.y プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "代わりに、DisplayObject.rotation プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "代わりに、DisplayObject.alpha プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "代わりに、DisplayObject.width プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "代わりに、DisplayObject.height プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "代わりに、ExternalInterface.available プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "代わりに、ErrorEvent.ERROR 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "代わりに、Event.isDefaultPrevented プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "代わりに、Event.ACTIVATE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "代わりに、Event.ADDED 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "代わりに、Event.CANCEL 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "代わりに、Event.CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "代わりに、Event.CLOSE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "代わりに、Event.COMPLETE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "代わりに、Event.CONNECT 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "代わりに、Event.DEACTIVATE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "代わりに、Event.ENTER_FRAME 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "代わりに、Event.ID3 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "代わりに、Event.INIT 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "代わりに、Event.MOUSE_LEAVE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "代わりに、Event.OPEN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "代わりに、Event.REMOVED 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "代わりに、Event.RENDER 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "代わりに、Event.RESIZE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "代わりに、Event.SCROLL 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "代わりに、Event.SELECT 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "代わりに、Event.SOUND_COMPLETE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "代わりに、Event.TAB_CHILDREN_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "代わりに、Event.TAB_ENABLED_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "代わりに、Event.TAB_INDEX_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "代わりに、Event.UNLOAD 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "代わりに、FocusEvent.FOCUS_IN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "代わりに、FocusEvent.FOCUS_OUT 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "代わりに、FocusEvent.KEY_FOCUS_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "代わりに、FocusEvent.MOUSE_FOCUS_CHANGE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "代わりに、Graphics.beginBitmapFill() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "代わりに、BitmapFilter.quality プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "代わりに、KeyboardEvent.charCode を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "代わりに、KeyboardEvent.keyCode を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "詳細については、KeyboardEvent クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "詳細については、KeyboardEvent.ctrlKey、KeyboardEvent.altKey、and KeyboardEvent.shiftKey を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "代わりに、PAGE_DOWN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "代わりに、PAGE_UP 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "代わりに、DELETE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "代わりに、CAPS_LOCK 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "代わりに、NUMPAD_0 -> NUMPAD_9 のいずれかの定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "代わりに、InteractiveObject.focusRect プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "代わりに、InteractiveObject.contextMenu プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "代わりに、KeyboardEvent.charCode プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "代わりに、KeyboardEvent.keyCode プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "代わりに、Loader.contentLoaderInfo プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "この機能はサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "代わりに、LoaderInfo.loaderURL プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "代わりに、LocalConnection.domain プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "代わりに、MenuEvent.contextMenuOwner プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "代わりに、Microphone.getMicrophone() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "MovieClip サブクラス名が A の場合、var mc= new A(); addChild(mc) を使用します。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "var mc= new MovieClip(); addChild(mc) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "var tf= new TextField(); addChild(mc) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Container.removeChild (childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\")); を使用してください。詳細については、Loader および DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "代わりに、DisplayObjectContainer.removeChild(childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "代わりに、DisplayObjectContainer.removeChild(childName) を使用してください。詳細については、DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "代わりに、DisplayObjectContainer.parent.getChildIndex を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "代わりに、DisplayObjectContainer.parent.setChildIndex を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "代わりに、DisplayObjectContainer.getChildAt を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "代わりに、DisplayObjectContainer.numChildren を使用してください。DisplayObjectContainer.addChild は常に新しい子をインデックス DisplayObjectContainer.numChildren に追加します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "詳細については、DisplayObject.addChild を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "詳細については、LoaderInfo.bytesLoaded および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "詳細については、LoaderInfo.bytesTotal および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "同等の機能については、flash.net.URLLoader を参照してください。flash.net パッケージにも、パッケージレベルの関数 navigateToURL() および sendToURL() が含まれています。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "詳細については、LoaderInfo.url および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "詳細については、LoaderInfo.url および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "代わりに、MovieClip.mask プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "詳細については、LoaderInfo.swfVersion および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "代わりに、MovieClip.currentFrame プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "代わりに、MovieClip.framesLoaded プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "代わりに、MovieClip.totalFrames プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "詳細については、displayObjectInstance.root を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "詳細については、displayObjectInstance.root を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "代わりに、静的プロパティ flash.media.SoundMixer.bufferTime を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "詳細については、Graphics クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "代わりに、NetStream.bufferTime プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "代わりに、NetStream.currentFPS プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "代わりに、NetStream.videoCodec プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "代わりに、NetStream.audioCodec プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "代わりに、ProductManager.isInstalled プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "代わりに、ProductManager.installedVersion プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "代わりに、ProductManager.isRunning プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "代わりに、Point.add() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "代わりに、Proxy.deleteDescendants プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "代わりに、heapDump() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "代わりに、ProgressEvent.bytesLoaded プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "代わりに、ProgressEvent.bytesTotal プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "代わりに、Rectangle.isEmpty プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "代わりに、SoundTransform.pan プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "代わりに、Sockect.bytesAvailable プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "代わりに、SharedObject.size プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "代わりに、SharedObject.fps プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "これはサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "代わりに、Sprite.constructChildren() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "代わりに、Sprite.dropTarget プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "代わりに、Stage.focus プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "代わりに、Stage.focus プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "代わりに、Stage.showDefaultContextMenu プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "代わりに、StyleSheet.styleNames プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "URLLoader のインスタンスを使用して StyleSheet データを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "代わりに、IME.enabled プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "代わりに、IME.enabled プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "代わりに、IME.instance プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "代わりに、IME.conversionMode プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "代わりに、IME.conversionMode プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "代わりに、System.vmVersion プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "代わりに、SWFLoaderInfo.swfVersion プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "代わりに、SWFLoaderInfo.actionScriptVersion プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "代わりに、TextField.defaultTextFormat プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "代わりに、TextField.defaultTextFormat プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "代わりに、DisplayObjectContainer.parent.getChildIndex を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "代わりに、DisplayObjectContainer.parent.setChildIndex を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "代わりに、DisplayObjectContainer.getChildAt を使用してください。詳細については、MovieClip により拡張される DisplayObjectContainer クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "代わりに、DisplayObjectContainer.numChildren を使用してください。DisplayObjectContainer.addChild は常に新しい子をインデックス DisplayObjectContainer.numChildren に追加します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "代わりに、TextField.replaceSelectedText() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "代わりに、TextField.getLineIndexOfChar() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "代わりに、TextField.selectionBeginIndex プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "代わりに、TextField.selectionEndIndex プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "代わりに、TextField.caretIndex プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "代わりに、Font.enumerateFonts() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "代わりに、TextField.maxScrollV プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "代わりに、TextField.scrollH プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "代わりに、TextField.maxScrollH プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "代わりに、TextField.defaultTextFormat プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "代わりに、一時的な TextField を作成し、TextField.getLineMetrics を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "代わりに、TextSnapshot.charCount プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "代わりに、flash.net パッケージで navigateToURL() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "代わりに、flash.net パッケージで sendToURL() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "代わりに、URLLoader.dataFormat プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "代わりに、URLStream.bytesAvailable プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "これはサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "代わりに、URLRequest.applicationDomain プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "リクエストヘッダを追加するには、URLRequest.requestHeaders プロパティを URLRequestHeader オブジェクトの配列に設定します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "URLLoader のインスタンスを使用して XML ファイルを読み込み、URLLoaders データを XMLDocuments コンストラクタに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "代わりに、flash.net パッケージで sendToURL() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "URLRequest オブジェクトを postData プロパティに設定し、URLLoader オブジェクトを使用して、XML ファイルを読み込みます。URLLoaders データを XMLDocuments コンストラクタに渡します。詳細については、URLLoader、URLRequest および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "URLLoader のインスタンスを使用して XML ファイルを読み込み、URLLoaders データを XMLDocuments コンストラクタに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "リクエストヘッダを追加するには、URLRequest.requestHeaders プロパティを URLRequestHeader オブジェクトの配列に設定します。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "詳細については、URLLoader.bytesLoaded および URLLoader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "詳細については、URLLoader.bytesTotal および URLLoader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "URLLoader のインスタンスを使用して XML ファイルを読み込み、読み込んだデータを StyleSheet.parseCSS メソッドに渡します。詳細については、URLLoader および EventDispatcher クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "代わりに、URLRequest.contentType プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "代わりに、XMLDocument コンストラクタまたは XMLDocument.parseXML メソッドがスローした可能性のある例外をチェックしてみてください。詳細については、XMLDocument を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Button, "Button クラスの名前は SimpleButton になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Container, "Container クラスの名前は DisplayObjectContainer になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Image, "Image クラスの名前は BitmapData になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter クラスの名前は BitmapFilter になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite クラスの名前は Bitmap になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo クラスの名前は BitmapLoaderInfo になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent クラスの名前は IMEEvent になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Key, "Key クラスの名前は Keyboard になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics クラスの名前は TextLineMetrics になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LoadVars, "詳細については、URLVariables クラス、URLRequest.urlVariables および URLRequest.postData プロパティ、URLLoader.dataFormat プロパティを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent クラスの名前は ContextMenuEvent になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities クラスの名前は Capabilities になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextExtents, "代わりに、TextField.getLineMetrics プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Button, "Button クラスの名前は SimpleButton になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Container, "Container クラスの名前は DisplayObjectContainer になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Image, "Image クラスの名前は BitmapData になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter クラスの名前は BitmapFilter になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite クラスの名前は Bitmap になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo クラスの名前は BitmapLoaderInfo になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent クラスの名前は IMEEvent になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Key, "Key クラスの名前は Keyboard になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics クラスの名前は TextLineMetrics になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "詳細については、URLVariables クラス、URLRequest.urlVariables および URLRequest.postData プロパティ、URLLoader.dataFormat プロパティを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent クラスの名前は ContextMenuEvent になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities クラスの名前は Capabilities になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "代わりに、TextField.getLineMetrics プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "詳細については、同様の機能を提供する Proxy クラスのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "代わりに、XMLUI.getProperty メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "代わりに、XMLUI.setProperty メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "代わりに、DisplayObject.accessibilityProperties プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "代わりに、DisplayObject.scale9Grid プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "代わりに、Graphics.drawOval メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "代わりに、NetConnection.connected プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "代わりに、Socket.connected プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "代わりに、URLStream.connected プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "代わりに、SyncEvent.changeList プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "代わりに、TextField.scrollV プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "代わりに、TextField.bottomScrollV プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "代わりに、BitmapDataChannel.RED 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "代わりに、BitmapDataChannel.GREEN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "代わりに、BitmapDataChannel.BLUE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "代わりに、BitmapDataChannel.ALPHA 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_instanceof, "代わりに、is 演算子を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "代わりに、flash.system.Security.showSettings メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "代わりに、System.useCodePage プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "代わりに、flash.events.EventDispatcher クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "代わりに、静的プロパティ flash.media.SoundMixer.bufferTime を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "代わりに、ビットマップライブラリのシンボルクラスの新しいインスタンス (new myBitmapName()など) を作成してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "詳細については、Loader.load() を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader クラスは flash.display.Loader クラスに置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader クラスは flash.display.Loader クラスに置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "代わりに、flash.system.IMEConversionMode.ALPHANUMERIC_FULL 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "代わりに、flash.system.IMEConversionMode.ALPHANUMERIC_HALF 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "代わりに、flash.system.IMEConversionMode.CHINESE 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "代わりに、flash.system.IMEConversionMode.JAPANESE_HIRAGANA 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "代わりに、flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "代わりに、flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "代わりに、flash.system.IMEConversionMode.KOREAN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "代わりに、flash.system.IMEConversionMode.UNKNOWN 定数を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onCancel, "ActionScript 3.0 では、onCancel イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener (cancel, onCancel) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "相当の機能を持つものはありません。willTrigger() メソッドは、登録リスナーが存在するかどうかを判別するために使用できます。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onIMEComposition, "ActionScript 3.0 では、onIMEComposition イベントハンドラは Flash Player によって実行時に自動的にトリガされません。そのため、addEventListener (imeComposition, handlerName) を使い、あらかじめこのハンドラをイベントに登録しておく必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "詳細については、LoaderInfo.url および Loader クラスを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "代わりに、getFullYear() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "代わりに、setFullYear() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "代わりに、getUTCFullYear() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "代わりに、rate プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection クラスは削除されました。詳細については、選択情報を希望するクラスの addEventListener メソッドを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection クラスは削除されました。詳細については、選択情報を希望するクラスの addEventListener メソッドを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "代わりに、gain プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "ColorTransform クラスのコンストラクタまたはプロパティを使用して、カラー値を直接割り当てることができます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "ColorTransform クラスのコンストラクタまたはプロパティを使用して、カラー値を直接割り当てることができます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "flash.display.InteractiveObject クラスの focus 関連のプロパティのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "flash.display.Graphics.beginBitmapFill メソッドのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "flash.display.DisplayObject.hitTestObject() メソッドのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "addChild() メソッドのヘルプを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "代わりに、load() メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "flash.media.SoundChannel.leftPeak および flash.media.SoundChannel.rightPeak を使用して、サウンドチャンネルの振幅を監視およびコントロールします。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "代わりに、soundTransform プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "代わりに、SoundTransform.pan プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "代わりに、SoundTransform.pan プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "代わりに、bytesLoaded プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "代わりに、bytesTotal プロパティを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "TextField で += を使用するのは効果的ではありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "TextField に += を使用してテキストを追加すると、TextField.appendText() メソッドを使用するよりも何倍も遅くなります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "括弧がない可能性があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "%s 型が必要なところに関数値が使用されています。この関数参照の後に括弧 () がない可能性があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_InstanceOfChanges, "instanceof 演算子を使用します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "instanceof 演算子は使用されなくなりました。代わりに is 演算子を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "イベントコールバックではなく、allowDomain() イベントハンドラが標準のメソッドになりました。詳細については、新しい LocalConnection.allowDomain メソッドを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "イベントコールバックではなく、allowInsecureDomain() イベントハンドラが標準のメソッドになりました。詳細については、新しい LocalConnection.allowInsecureDomain メソッドを参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_call, "グローバル call() メソッドはサポートされなくなりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_Color, "Color クラスは削除されました。同等の機能の flash.geom.ColorTransform クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Color, "Color クラスは削除されました。同等の機能の flash.geom.ColorTransform クラスを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF ファイルは常に同一ドメインの規則に従う必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp_capabilities, "capabilities クラスの名前は Capabilities になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_capabilities, "capabilities クラスの名前は Capabilities になりました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "詳細については、addEventListener (eventName、listener、useCapture、priority) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "詳細については、removeEventListener (eventName、listener、useCapture) を参照してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onComplete, "ActionScript 3.0 では、onComplete イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('complete', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onHTTPError, "ActionScript 3.0 では、onHTTPError イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('httpError', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onIOError, "ActionScript 3.0 では、onIOError イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('ioError', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onProgress, "ActionScript 3.0 では、onProgress イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('progress', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onSecurityError, "ActionScript 3.0 では、onSecurityError イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('securityError', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Event_onOpen, "ActionScript 3.0 では、onOpen イベントハンドラは Flash Player によって実行時に自動的にトリガされません。最初に、このイベントハンドラを addEventListener ('open', callback_handler) を使用して登録する必要があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "ActionScript 2.0 XML クラスを使用している可能性があります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "移行の問題 : ActionScript 2.0 XML クラスの名前は XMLDocument になりました。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadDateCast, "無効な Date キャスト演算です。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) は new Date().toString() と同じように動作します。Date 型に値をキャストして、Date(x) の代わりに \"x as Date\" を使用します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ImportHidesClass, "現在のクラスと同じ名前でパッケージをインポートすると、このスコープ内のクラス識別子が非表示になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "現在のクラスと同じ名前でパッケージをインポートすると、このスコープ内のクラス識別子が非表示になります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "同じ名前の引数が複数あります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "'%s' という名前の引数を複数指定しました。この引数への参照では、最後の引数が常に参照されます。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "代わりに、Rectangle.containsRect メソッドを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_eval, "この機能は廃止されました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_getVersion, "この機能は、flash.system.Capabilities.version プロパティに置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "この機能は、flash.display.MovieClip.framesLoaded プロパティに置き換えられました。" );
        warningConstantsJP[index++] = new AscWarning(kUnsupportedProp__global, "_global プロパティは廃止されました。同等の機能の静的クラスメンバーを使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadBoolAssignment, "ブール値が必要ですが、非ブール値が使用されています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "ブール値が必要ですが、%s が使用されています。ブール式に型強制されます。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadES3TypeProp, "不明なプロパティです。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s は dynamic クラス %s の認識されたプロパティではありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadES3TypeMethod, "不明なメソッドです。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s は dynamic クラス %s の認識されたメソッドではありません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DuplicateVariableDef, "変数定義が重複しています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "変数定義が重複しています。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "定義名が読み込んだパッケージ名と同じです。この名前への非限定の参照は、パッケージに対するものとなり、定義に対するものではなくなります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "定義名が読み込んだパッケージ名と同じです。この名前への非限定の参照は、パッケージに対するものとなり、定義に対するものではなくなります。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "宣言されているプロパティ %s を削除することはできません。このプロパティに関連付けられているメモリを解放するには、プロパティの値を null に設定します。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsJP[index++] = new AscWarning(kWarning_Deprecated_specific, "プロパティ '%s' は推奨されません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "プロパティ '%s' は推奨されません。%s を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "プロパティ '%s' の使用は、%s 以降推奨されていません。%s を使用してください。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "プロパティ '%s' の使用は、%s 以降推奨されていません。" );
        warningConstantsJP[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "Possible attempt to delete a fixed property." );
   };

   static final AscWarning[] warningConstantsKR= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsKR() 
   {
      int index=0;
        warningConstantsKR[index++] = new AscWarning(kWarning_NoTypeDecl, "유형 선언이 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s'에 유형 선언이 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadUndefinedComparision, "undefined 비교가 비논리적입니다. 유형이 지정되지 않은 변수나 * 유형의 변수만 undefined일 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "%s 유형의 변수는 undefined일 수 없습니다. 비교 전에 undefined 값의 유형은 %s(으)로 강제 변환됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "새 표현식에 사용된 함수에서 값을 반환합니다. 해당 함수의 새 인스턴스가 아닌 함수 반환 값이 결과가 됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "마이그레이션 문제: 새 %s의 결과가 해당 함수의 새 인스턴스가 아닌 %s의 반환 값입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "ActionScript 3.0에서 인수가 없는 Boolean()은 false를 반환합니다. ActionScript 2.0에서는 Boolean()이 undefined를 반환했습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "인수가 없는 Boolean()이 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NumberFromStringChanges, "ActionScript 3.0에서 공백 문자는 무시되고 \"는 0을 반환합니다. 매개 변수가 ''이거나 공백 문자를 포함할 경우 ActionScript 2.0에서 Number()는 NaN을 반환합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "마이그레이션 문제: 빈 문자열 인수로 Number('') 함수를 호출하면 ActionScript 3.0에서는 0이 반환되고 ActionScript 2.0에서는 NaN이 반환됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() 형식이 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "마이그레이션 문제: Array.toString()의 null 및 undefined 요소 처리가 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedPropertyError, "지원되지 않는 ActionScript 2.0 속성입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "마이그레이션 문제: 이제 %s 속성은 지원되지 않습니다. %s." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedFunctionError, "지원되지 않는 ActionScript 2.0 함수입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "마이그레이션 문제: 이제 %s 메서드는 지원되지 않습니다. %s." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ChangesInResolve, "이제 __resolve는 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "마이그레이션 문제: 이제 __resolve는 지원되지 않습니다. 비슷한 기능을 구현하려면 새 Proxy 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_LevelNotSupported, "이제 _level은 지원되지 않습니다. 자세한 내용은 flash.display 패키지를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "마이그레이션 문제: 이제 _level은 지원되지 않습니다. 자세한 내용은 flash.display 패키지를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ClassIsSealed, "클래스가 봉인되었습니다. 이 클래스에는 멤버가 동적으로 추가될 수 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "마이그레이션 문제: %s은(는) 동적 클래스가 아닙니다. 인스턴스에 멤버가 동적으로 추가될 수 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ScopingChangeInThis, "this 키워드에 대한 범위 지정이 변경되었습니다. 클래스의 인스턴스에서 추출된 클래스 메서드는 항상 해당 인스턴스로 돌아가서 이 범위를 확인합니다. ActionScript 2.0에서 이 범위는 메서드가 호출되는 위치를 기준으로 동적으로 조회됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "마이그레이션 문제: this 키워드에 대한 범위 지정이 변경되어 ActionScript 3.0에서 %s 메서드가 다르게 동작합니다. 자세한 내용은 경고 항목 1083을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "네임스페이스 선언이 없습니다. 예를 들어 변수가 public, private 등으로 정의되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s의 범위가 기본 네임스페이스인 %s internal로 지정됩니다. 이에 따라 이 패키지 외부에서는 보이지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0에서는 \"for x in target\" 문 내에서 객체의 속성이 임의의 순서로 반복 실행됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "마이그레이션 문제: ActionScript 3.0에서는 \"for x in target\" 문 내에서 객체의 속성이 임의의 순서로 반복 실행됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_InternalError, "컴파일러 내부 오류입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_InternalError_specific, "오류 코드: %s." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler가 리스너로 추가되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "마이그레이션 문제: %s" );
        warningConstantsKR[index++] = new AscWarning(kWarning_NegativeUintLiteral, "uint 데이터 유형에 음수 값을 할당하면 큰 양수 값이 됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "음이 아닌 uint 값이 필요한 곳에 음수 값이 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNullComparision, "null 비교가 비논리적입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNullComparision_specific, "null 비교가 비논리적입니다. %s 유형의 변수는 null일 수 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNaNComparision, "NaN 비교가 비논리적입니다. NaN != NaN이기 때문에 NaN이 포함된 모든 비교 연산은 false로 평가됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "NaN 비교가 비논리적입니다. 이 문은 항상 false로 평가됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "조건 내에 대입 연산자가 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "조건 내에 대입 연산자가 있습니다. = 대신 ==를 사용하려고 했습니까?" );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNullAssignment, "null은 대입할 수 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "%s 값이 필요한 곳에 null이 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoConstructor, "생성자가 없습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoConstructor_specific, "%s 클래스에 대한 생성자 함수가 지정되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ConstNotInitialized, "상수가 초기화되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "상수가 초기화되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadArrayCast, "Array 형 변환 연산이 잘못된 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x)가 새 Array(x)와 동일하게 동작합니다. 값을 Array 유형으로 형 변환하려면 Array(x) 대신 x as Array 표현식을 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "super() 문이 생성자 내에서 호출되지 않았습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "이 생성자가 시작되기 전에 super() 문이 실행됩니다. super() 문의 실행 시기를 명시적으로 제어하려면 생성자 내에 super()에 대한 호출을 추가하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_version, "Capabilities.version을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Focusrect, "자세한 내용은 InteractiveObject.focusRect를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Highquality, "자세한 내용은 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "자세한 내용은 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "자세한 내용은 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Quality, "자세한 내용은 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "정적 속성 flash.media.SoundMixer.bufferTime을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "자세한 내용은 LoaderInfo.url을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NewLine, "개행을 표시하려면 '\n'을 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "자세한 내용은 textField.maxScroll을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Level, "ActionScript 3.0에는 레벨의 개념이 없으며, 대신 표시 목록에 대한 직접 액세스를 제공합니다. 자세한 내용은 flash.display 패키지를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Parent, "parent 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Root, "이 속성은 제거되었습니다. 가장 비슷한 속성은 ActionScript 3.0 표시 목록의 루트 역할을 하는 Stage입니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "호출자를 대신 함수의 인수로 선언해 보십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Button_Target, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "parent 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "자세한 내용은 Sprite.hitArea를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Scroll, "자세한 내용은 flash.text.TextField 클래스의 scrollH 및 scrollV 속성을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TargetPath, "경로 대신 MovieClip 객체를 인수로 직접 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Video_Height, "자세한 내용은 Video.videoHeight를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Video_Width, "자세한 내용은 Video.videoWidth를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp__Proto__, "자세한 내용은 이제 사용되지 않는 __proto__를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Stage, "자세한 내용은 DisplayObject.stage를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp__remoteClass, "flash.net 패키지에 있는 registerClass() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_random, "Math.random()을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_chr, "String.fromCharCode()를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_mbchr, "String.fromCharCode()를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ord, "String.charCodeAt()을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_mbord, "String.charCodeAt()을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_substring, "String.substr 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "String.substr 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_length, "인수의 length 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_mblength, "인수의 length 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ASNative, "자세한 내용은 ASnative의 변경 사항을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_addProperty, "도트(.) 표기법을 대신 사용하여 인스턴스에 직접 속성을 설정하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_getProperty, "도트(.) 표기법을 대신 사용하여 속성에 직접 액세스하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_setProperty, "도트(.) 표기법을 대신 사용하여 인스턴스에 직접 속성을 설정하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_asfunction, "자세한 내용은 TextEvent.LINK 및 addEventListener()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "이 메서드는 flash.utils 패키지로 옮겨졌습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "새 MovieClip 클래스 생성자 함수로 대체되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_fscommand, "flash.system 패키지로 옮겨졌습니다. Javascript/ActionScript 통신을 위한 flash.external.ExternalInterface 클래스도 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_getURL, "동일한 기능은 flash.net.URLLoader를 참조하십시오.  flash.net 패키지에도 패키지 레벨 함수인 navigateToURL()과 sendToURL()이 포함되어 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "자세한 내용은 MovieClip.gotoAndPlay()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "자세한 내용은 MovieClip.gotoAndStop()을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_play, "자세한 내용은 MovieClip.play()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_print, "자세한 내용은 PrintJob.start()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "자세한 내용은 PrintJob을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "자세한 내용은 PrintJob을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_printNum, "자세한 내용은 PrintJob을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "Container.removeChild(childName)을 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_setInterval, "flash.utils 패키지로 옮겨졌습니다. Timer 클래스를 대신 사용해 보십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "자세한 내용은 MovieClip.nextFrame()을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_startDrag, "자세한 내용은 MovieClip.startDrag()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_stop, "자세한 내용은 MovieClip.stop()을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "자세한 내용은 Sound.stopAllSounds()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "자세한 내용은 MovieClip.stopDrag()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "도트(.) 연산자나 with 문을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "자세한 내용은 DisplayObject.stage와 Stage.quality를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "DisplayObjectContainer.removeChild(childName)을 대신 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "DisplayObjectContainer.removeChild(childName)을 대신 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "이제 이 함수는 전역 함수가 아니지만 TimerEvent, MouseEvent 및 KeyboardEvent 클래스의 메서드로 계속 사용할 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "자세한 내용은 Video.attachNetStream과 Video.attachCamera를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "로드를 수행하고 StyleSheet.parseCSS()로 결과를 전달하려면 URLLoader 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "ActionScript 3.0에서는 기본적으로 모든 클래스가 등록됩니다. AMF를 사용할 경우 자세한 내용은 flash.utils.registerClassAlias()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "비슷한 기능을 구현하려면 접근자 속성(get/set 함수)이나 flash.utils.Proxy 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "비슷한 기능을 구현하려면 접근자 속성(get/set 함수)이나 flash.utils.Proxy 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "자세한 내용은 MovieClip.loadMovie()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "자세한 내용은 MovieClip.loadMovieNum()을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "자세한 내용은 Loader.load()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "자세한 내용은 Loader.load()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "자세한 내용은 addEventListener ( eventName, listener, useCapture, priority )를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "자세한 내용은 addEventListener ( eventName, listener, useCapture, priority )를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "자세한 내용은 addEventListener ( eventName, listener, useCapture, priority )를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "자세한 내용은 addEventListener ( eventName, listener, useCapture, priority )를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "라이브러리에서 사운드를 생성하려면 SWF 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onStatus, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onStatus 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'status', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onID3, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onID3 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'id3', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoad, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoad 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'load', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onSoundComplete, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onSoundComplete 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'soundComplete', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onSetFocus, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onSetFocus 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'focusIn', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onResize, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onResize 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'resize', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onChanged, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onChanged 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'change', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onKillFocus, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onKillFocus 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'focusOut', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onScroller, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onScroller 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'scroll', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onMouseDown, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onMouseDown 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseDown', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onMouseUp, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onMouseUp 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseUp', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onMouseMove, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onMouseMove 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseMove', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onMouseWheel, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onMouseWheel 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseWheel', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onKeyDown, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onKeyDown 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'keyDown', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onKeyUp, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onKeyUp 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'keyUp', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onData, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onData 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'data', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onHTTPStatus 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'httpStatus', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onDragOut, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onDragOut 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseOut', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onDragOver, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onDragOver 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseOver', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onPress, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onPress 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseDown', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onRelease, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onRelease 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'click', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onReleaseOutside 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseUp', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onRollOut, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onRollOut 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseOut', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onRollOver, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onRollOver 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'mouseOver', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onActivity, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onActivity 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'activity', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onSelect, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onSelect 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'menuSelect', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onEnterFrame, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onEnterFrame을 트리거하지 않습니다. 먼저 addEventListener ( 'enterFrame', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onUnload, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onUnload 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'unload', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadComplete, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadComplete를 트리거하지 않습니다. 먼저 addEventListener ( 'load', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadError, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadError 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'error', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadInit, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadInit 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'init', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadProgress, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadProgress 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'progress', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onLoadStart, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onLoadStart를 트리거하지 않습니다. 먼저 addEventListener ( 'start', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onClose, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onClose 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'close', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onConnect, "ActionScript 3.0에서는 Flash Player가 자동으로 onConnect 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'connect', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onXML, "ActionScript 3.0에서는 Flash Player가 자동으로 onXML을 트리거하지 않습니다. 먼저 addEventListener ( 'xml', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "hasChildNodes 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "이제 XMLEvent 클래스가 사용되지 않으며 xml 이벤트가 전달되지 않습니다. 파일 로드 중 data 이벤트만 전달됩니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc 클래스의 이름이 XMLDocument로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "Accessibility.active 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "ActivityEvent.ACTIVITY 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "DisplayObjectContainer.parent.getChildIndex를 대신 사용하십시오. MovieClip에 의해 확장되는 DisplayObjectContainer 클래스에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "DisplayObjectContainer.parent.setChildIndex를 대신 사용하십시오. MovieClip에 의해 확장되는 DisplayObjectContainer 클래스에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "DisplayObjectContainer.getChildAt을 대신 사용하십시오. MovieClip에 의해 확장되는 DisplayObjectContainer 클래스에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "DisplayObjectContainer.numChildren을 대신 사용하십시오. DisplayObjectContainer.addChild는 항상 DisplayObjectContainer.numChildren 인덱스에 새 자식을 추가합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "ByteArray.bytesAvailable 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "ByteArray.position 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "ByteArray.position 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "Camera.getCamera() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "Camera.currentFPS 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "Camera.keyFrameInterval 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "Camera.loopback 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "ColorTransform.color 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "ColorTransform.color 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "Container.textSnapshot 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "ContextMenu.clone() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "ContextMenu.forwardAndBack 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "ContextMenuItem.clone() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "CustomActions.actionsList 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "DataEvent.DATA 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "DisplayObject.scaleX 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "DisplayObject.scaleX 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "DisplayObject.scaleY 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "DisplayObject.scaleY 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "DisplayObject.mouseX 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "DisplayObject.mouseX 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "DisplayObject.mouseY 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "DisplayObject.mouseY 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "DisplayObject.name 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "DisplayObject.parent 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "DisplayObject.mask 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "DisplayObject.visible 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "DisplayObject.x 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "DisplayObject.y 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "DisplayObject.rotation 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "DisplayObject.alpha 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "DisplayObject.width 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "DisplayObject.height 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "ExternalInterface.available 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "ErrorEvent.ERROR 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "Event.isDefaultPrevented 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "Event.ACTIVATE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "Event.ADDED 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "Event.CANCEL 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "Event.CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "Event.CLOSE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "Event.COMPLETE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "Event.CONNECT 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "Event.DEACTIVATE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "Event.ENTER_FRAME 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "Event.ID3 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "Event.INIT 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "Event.MOUSE_LEAVE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "Event.OPEN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "Event.REMOVED 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "Event.RENDER 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "Event.RESIZE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "Event.SCROLL 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "Event.SELECT 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "Event.SOUND_COMPLETE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "Event.TAB_CHILDREN_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "Event.TAB_ENABLED_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "Event.TAB_INDEX_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "Event.UNLOAD 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "FocusEvent.FOCUS_IN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "FocusEvent.FOCUS_OUT 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "FocusEvent.KEY_FOCUS_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "FocusEvent.MOUSE_FOCUS_CHANGE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "Graphics.beginBitmapFill() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "BitmapFilter.quality 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "KeyboardEvent.charCode를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "KeyboardEvent.keyCode를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "자세한 내용은 KeyboardEvent 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "자세한 내용은 KeyboardEvent.ctrlKey, KeyboardEvent.altKey 및 KeyboardEvent.shiftKey를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "PAGE_DOWN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "PAGE_UP 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "DELETE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "CAPS_LOCK 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "NUMPAD_0 -> NUMPAD_9 상수 중 하나를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "InteractiveObject.focusRect 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "InteractiveObject.contextMenu 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "KeyboardEvent.charCode 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "KeyboardEvent.keyCode 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "Loader.contentLoaderInfo 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "이제 이 기능은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "LoaderInfo.loaderURL 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "LocalConnection.domain 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "MenuEvent.contextMenuOwner 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "Microphone.getMicrophone() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "MovieClip 하위 클래스 이름이 A일 경우 var mc= new A(); addChild(mc)를 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "var mc= new MovieClip(); addChild(mc)를 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "var tf= new TextField(); addChild(mc)를 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "Container.removeChild(childName)을 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));을 사용하십시오. 자세한 내용은 Loader 및 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "DisplayObjectContainer.removeChild(childName)을 대신 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "DisplayObjectContainer.removeChild(childName)을 대신 사용하십시오. 자세한 내용은 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "DisplayObjectContainer.parent.getChildIndex를 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "DisplayObjectContainer.parent.setChildIndex를 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "DisplayObjectContainer.getChildAt을 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "DisplayObjectContainer.numChildren을 대신 사용하십시오. DisplayObjectContainer.addChild는 항상 DisplayObjectContainer.numChildren 인덱스에 새 자식을 추가합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "자세한 내용은 DisplayObject.addChild를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "자세한 내용은 LoaderInfo.bytesLoaded 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "자세한 내용은 LoaderInfo.bytesTotal 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "동일한 기능은 flash.net.URLLoader를 참조하십시오.  flash.net 패키지에도 패키지 레벨 함수인 navigateToURL()과 sendToURL()이 포함되어 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "자세한 내용은 LoaderInfo.url 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "자세한 내용은 LoaderInfo.url 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "MovieClip.mask 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "자세한 내용은 LoaderInfo.swfVersion 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "MovieClip.currentFrame 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "MovieClip.framesLoaded 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "MovieClip.totalFrames 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "자세한 내용은 displayObjectInstance.root를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "자세한 내용은 displayObjectInstance.root를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "정적 속성 flash.media.SoundMixer.bufferTime을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "자세한 내용은 Graphics 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "NetStream.bufferTime 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "NetStream.currentFPS 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "NetStream.videoCodec 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "NetStream.audioCodec 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "ProductManager.isInstalled 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "ProductManager.installedVersion 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "ProductManager.isRunning 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "Point.add() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "Proxy.deleteDescendants 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "heapDump() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "ProgressEvent.bytesLoaded 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "ProgressEvent.bytesTotal 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "Rectangle.isEmpty 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "SoundTransform.pan 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "Sockect.bytesAvailable 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "SharedObject.size 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "SharedObject.fps 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "이제 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "Sprite.constructChildren() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "Sprite.dropTarget 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "Stage.focus 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "Stage.focus 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "Stage.showDefaultContextMenu 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "StyleSheet.styleNames 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "URLLoader의 인스턴스를 사용하여 StyleSheet 데이터를 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "IME.enabled 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "IME.enabled 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "IME.instance 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "IME.conversionMode 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "IME.conversionMode 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "System.vmVersion 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "SWFLoaderInfo.swfVersion 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "SWFLoaderInfo.actionScriptVersion 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "TextField.defaultTextFormat 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "TextField.defaultTextFormat 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "DisplayObjectContainer.parent.getChildIndex를 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "DisplayObjectContainer.parent.setChildIndex를 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "DisplayObjectContainer.getChildAt을 대신 사용하십시오. 자세한 내용은 MovieClip에 의해 확장되는 DisplayObjectContainer 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "DisplayObjectContainer.numChildren을 대신 사용하십시오.  DisplayObjectContainer.addChild는 항상 DisplayObjectContainer.numChildren 인덱스에 새 자식을 추가합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "TextField.replaceSelectedText() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "TextField.getLineIndexOfChar() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "TextField.selectionBeginIndex 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "TextField.selectionEndIndex 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "TextField.caretIndex 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "Font.enumerateFonts() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "TextField.maxScrollV 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "TextField.scrollH 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "TextField.maxScrollH 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "TextField.defaultTextFormat 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "임시 TextField를 만들고 TextField.getLineMetrics를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "TextSnapshot.charCount 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "flash.net 패키지에 있는 navigateToURL() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "flash.net 패키지에 있는 sendToURL() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "URLLoader.dataFormat 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "URLStream.bytesAvailable 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "이제 이 속성은 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "URLRequest.applicationDomain 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "요청 헤더를 추가하려면 URLRequest.requestHeaders 속성을 URLRequestHeader 객체의 배열로 설정하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "URLLoader의 인스턴스를 사용하여 XML 파일을 로드한 후 URLLoaders 데이터를 XMLDocuments 생성자에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "flash.net 패키지에 있는 sendToURL() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "URLRequest 객체의 postData 속성을 설정하고 URLLoader 객체와 함께 이 속성을 사용하여 XML 파일을 로드하십시오.  그리고 URLLoaders 데이터를 XMLDocuments 생성자에 전달하십시오. 자세한 내용은 URLLoader, URLRequest 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "URLLoader의 인스턴스를 사용하여 XML 파일을 로드한 후 URLLoaders 데이터를 XMLDocuments 생성자에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "요청 헤더를 추가하려면 URLRequest.requestHeaders 속성을 URLRequestHeader 객체의 배열로 설정하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "자세한 내용은 URLLoader.bytesLoaded 및 URLLoader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "자세한 내용은 URLLoader.bytesTotal 및 URLLoader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "URLLoader의 인스턴스를 사용하여 XML 파일을 로드한 후 로더 데이터를 StyleSheet.parseCSS 메서드에 전달하십시오. 자세한 내용은 URLLoader 및 EventDispatcher 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "URLRequest.contentType 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "대신 XMLDocument.parseXML 메서드 또는 XMLDocument 생성자에서 throw될 수 있는 예외를 확인하십시오. 자세한 내용은 XMLDocument를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Button, "Button 클래스의 이름이 SimpleButton으로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Container, "Container 클래스의 이름이 DisplayObjectContainer로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Image, "Image 클래스의 이름이 BitmapData로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter 클래스의 이름이 BitmapFilter로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite 클래스의 이름이 Bitmap으로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo 클래스의 이름이 BitmapLoaderInfo로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent 클래스의 이름이 IMEEvent로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Key, "Key 클래스의 이름이 Keyboard로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics 클래스의 이름이 TextLineMetrics로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LoadVars, "자세한 내용은 URLVariables 클래스, URLRequest.urlVariables와 URLRequest.postData 속성 및 URLLoader.dataFormat 속성을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent 클래스의 이름이 ContextMenuEvent로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities 클래스의 이름이 Capabilities로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextExtents, "TextField.getLineMetrics 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Button, "Button 클래스의 이름이 SimpleButton으로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Container, "Container 클래스의 이름이 DisplayObjectContainer로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Image, "Image 클래스의 이름이 BitmapData로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter 클래스의 이름이 BitmapFilter로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite 클래스의 이름이 Bitmap으로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo 클래스의 이름이 BitmapLoaderInfo로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent 클래스의 이름이 IMEEvent로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Key, "Key 클래스의 이름이 Keyboard로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics 클래스의 이름이 TextLineMetrics로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "자세한 내용은 URLVariables 클래스, URLRequest.urlVariables와 URLRequest.postData 속성 및 URLLoader.dataFormat 속성을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent 클래스의 이름이 ContextMenuEvent로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities 클래스의 이름이 Capabilities로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "TextField.getLineMetrics 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "자세한 내용은 비슷한 기능을 제공하는 Proxy 클래스에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "XMLUI.getProperty 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "XMLUI.setProperty 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "DisplayObject.accessibilityProperties 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "DisplayObject.scale9Grid 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "Graphics.drawOval 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "NetConnection.connected 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "Socket.connected 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "URLStream.connected 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "SyncEvent.changeList 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "TextField.scrollV 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "TextField.bottomScrollV 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "BitmapDataChannel.RED 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "BitmapDataChannel.GREEN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "BitmapDataChannel.BLUE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "BitmapDataChannel.ALPHA 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_instanceof, "is 연산자를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "flash.system.Security.showSettings 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "System.useCodePage 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "flash.events.EventDispatcher 클래스를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "정적 속성 flash.media.SoundMixer.bufferTime을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "new myBitmapName()과 같이 비트맵 라이브러리 심볼 클래스의 새 인스턴스를 대신 만드십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "자세한 내용은 Loader.load()를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader 클래스는 flash.display.Loader 클래스로 바뀌었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader 클래스는 flash.display.Loader 클래스로 바뀌었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "자세한 내용은 addEventListener(eventName, listener, useCapture, priority)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "flash.system.IMEConversionMode.ALPHANUMERIC_FULL 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "flash.system.IMEConversionMode.ALPHANUMERIC_HALF 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "flash.system.IMEConversionMode.CHINESE 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "flash.system.IMEConversionMode.JAPANESE_HIRAGANA 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "flash.system.IMEConversionMode.KOREAN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "flash.system.IMEConversionMode.UNKNOWN 상수를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "자세한 내용은 addEventListener(eventName, listener, useCapture, priority)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onCancel, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onCancel 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( cancel, onCancel)을 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "직접적으로 대신 사용되는 요소는 없습니다. willTrigger() 메서드를 사용하여 등록된 리스너가 있는지 여부를 식별할 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onIMEComposition, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onIMEComposition 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( imeComposition, handlerName)을 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "자세한 내용은 LoaderInfo.url 및 Loader 클래스를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "getFullYear() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "setFullYear() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "getUTCFullYear() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "rate 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection 클래스가 제거되었습니다. 자세한 내용은 해당 Selection 정보가 필요한 클래스의 addEventListener 메서드를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection 클래스가 제거되었습니다. 자세한 내용은 해당 Selection 정보가 필요한 클래스의 addEventListener 메서드를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "gain 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "ColorTransform 클래스 생성자 또는 속성을 사용하여 색상 값을 직접 할당할 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "ColorTransform 클래스 생성자 또는 속성을 사용하여 색상 값을 직접 할당할 수 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "flash.display.InteractiveObject 클래스의 포커스 관련 속성에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "flash.display.Graphics.beginBitmapFill 메서드에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "flash.display.DisplayObject.hitTestObject() 메서드에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "addChild() 메서드에 대한 도움말을 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "load() 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "사운드 채널의 진폭을 모니터링하고 제어하려면 flash.media.SoundChannel.leftPeak 및 flash.media.SoundChannel.rightPeak를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "soundTransform 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "SoundTransform.pan 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "SoundTransform.pan 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "bytesLoaded 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "bytesTotal 속성을 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "TextField에 +=를 사용하는 것은 비효율적입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "+=를 사용하여 TextField에 텍스트를 추가하는 것은 TextField.appendText() 메서드를 사용하는 것보다 몇 배나 느립니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "괄호가 누락된 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "%s 유형이 필요한 곳에 함수 값이 사용되었습니다. 이 함수 참조 다음에 괄호 ()가 누락된 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_InstanceOfChanges, "instanceof 연산자가 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "이제 instanceof 연산자는 사용되지 않습니다. is 연산자를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "이제 allowDomain() 이벤트 핸들러는 이벤트 콜백이 아닌 표준 메서드입니다. 자세한 내용은 새 LocalConnection.allowDomain 메서드를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "이제 allowInsecureDomain() 이벤트 핸들러는 이벤트 콜백이 아닌 표준 메서드입니다. 자세한 내용은 새 LocalConnection.allowInsecureDomain 메서드를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_call, "이제 전역 call() 메서드는 지원되지 않습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_Color, "Color 클래스가 제거되었습니다. 동일한 기능을 구현하려면 flash.geom.ColorTransform 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Color, "Color 클래스가 제거되었습니다. 동일한 기능을 구현하려면 flash.geom.ColorTransform 클래스를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF 파일에서는 항상 정확한 도메인 일치 규칙을 사용합니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp_capabilities, "capabilities 클래스의 이름이 Capabilities로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_capabilities, "capabilities 클래스의 이름이 Capabilities로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "자세한 내용은 addEventListener(eventName, listener, useCapture, priority)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "자세한 내용은 removeEventListener ( eventName, listener, useCapture)를 참조하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onComplete, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onComplete 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'complete', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onHTTPError, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onHTTPError 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'httpError', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onIOError, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onIOError 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'ioError', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onProgress, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onProgress 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'progress', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onSecurityError, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onSecurityError 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'securityError', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Event_onOpen, "ActionScript 3.0에서는 런타임에 Flash Player가 자동으로 onOpen 이벤트 핸들러를 트리거하지 않습니다. 먼저 addEventListener ( 'open', callback_handler)를 사용하여 이벤트에 대해 이 핸들러를 등록해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "ActionScript 2.0 XML 클래스가 사용된 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "마이그레이션 문제: ActionScript 2.0 XML 클래스의 이름이 XMLDocument로 변경되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadDateCast, "Date 형 변환 연산이 잘못되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x)는 새 Date().toString()과 동일하게 동작합니다. 값을 Date 유형으로 형 변환하려면 Date(x) 대신 \"x as Date\"를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ImportHidesClass, "현재 클래스와 같은 이름을 사용하여 패키지를 가져오면 이 범위에서 클래스 식별자가 숨겨집니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "현재 클래스와 같은 이름을 사용하여 패키지를 가져오면 이 범위에서 클래스 식별자가 숨겨집니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "이름이 같은 인수가 여러 개 있습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "이름이 '%s'인 인수가 여러 개 지정되었습니다. 해당 인수에 대한 참조는 항상 마지막 인수로 결정됩니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "Rectangle.containsRect 메서드를 대신 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_eval, "이 기능은 제거되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_getVersion, "이 기능은 flash.system.Capabilities.version 속성으로 대체되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "이 기능은 flash.display.MovieClip.framesLoaded 속성으로 대체되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kUnsupportedProp__global, "이 _global 속성은 제거되었습니다. 동일한 기능을 구현하려면 클래스의 정적 멤버를 사용하십시오." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadBoolAssignment, "Boolean 값이 필요한 곳에 Boolean이 아닌 값이 사용되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "Boolean 값이 필요한 곳에 %s이(가) 사용되었습니다. 표현식은 Boolean으로 강제 형 변환됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadES3TypeProp, "알 수 없는 속성입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s은(는) 동적 클래스 %s의 인식되는 속성이 아닙니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadES3TypeMethod, "알 수 없는 메서드입니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s은(는) 동적 클래스 %s의 인식되는 메서드가 아닙니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DuplicateVariableDef, "변수 정의가 중복되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "변수 정의가 중복되었습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "정의 이름이 가져온 패키지 이름과 같습니다. 해당 이름에 대한 정규화되지 않은 참조는 정의가 아닌 패키지로 결정됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "정의 이름이 가져온 패키지 이름과 같습니다. 해당 이름에 대한 정규화되지 않은 참조는 정의가 아닌 패키지로 결정됩니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "고정된 속성을 삭제하려 한 것 같습니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "선언된 속성 %s은(는) 삭제할 수 없습니다. 관련된 메모리를 비우려면 값을 null로 설정해야 합니다." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsKR[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsKR[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   };

   static final AscWarning[] warningConstantsCN= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsCN() 
   {
      int index=0;
        warningConstantsCN[index++] = new AscWarning(kWarning_NoTypeDecl, "缺少类型声明。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s“%s”没有类型声明。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadUndefinedComparision, "与 undefined 的比较不合逻辑。只有无类型变量(或 * 类型变量)可以是 undefined。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "%s 类型变量不能是 undefined。在比较之前，值 undefined 会被强制转换为类型 %s。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "new 表达式中所用的函数有返回值。结果将是函数的返回值，而不是该函数的一个新实例。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "迁移问题: new %s 的结果将是 %s 的返回值，而不是该函数的一个新实例。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "在 ActionScript 3.0 中，不含参数的 Boolean() 返回 false。在 ActionScript 2.0 中，Boolean() 返回 undefined。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "使用不含参数的 Boolean()。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NumberFromStringChanges, "在 ActionScript 3.0 中，空白将被忽略，并且当参数为 '' 时返回 0。在 ActionScript 2.0 中，当参数为 '' 或包含空白时，Number() 将返回 NaN。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "迁移问题: 使用空字符串参数调用 Number('') 函数时，在 ActionScript 3.0 中返回 0，在 ActionScript 2.0 中返回 NaN。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() 格式已更改。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "迁移问题: Array.toString() 对 null 和 undefined 元素的处理方式已更改。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedPropertyError, "不支持的 ActionScript 2.0 属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "迁移问题: 不再支持 %s 属性。%s。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedFunctionError, "不支持的 ActionScript 2.0 函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "迁移问题: 不再支持 %s 方法。%s。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ChangesInResolve, "不再支持 __resolve。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "迁移问题: 不再支持 __resolve。对类似的功能使用新的 Proxy 类。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_LevelNotSupported, "不再支持 _level。有关详细信息，请参阅 flash.display 包。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "迁移问题: 不再支持 _level。有关详细信息，请参阅 flash.display 包。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ClassIsSealed, "类为密封类。不能为其动态的添加成员。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "迁移问题: %s 不是动态类。不能为实例动态的添加成员。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ScopingChangeInThis, "更改了 this 关键字的作用范围。从某个类的实例中提取的类方法始终会将 this 解析还原为该实例。在 ActionScript 2.0 中，会根据调用该方法的位置动态查找 this。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "迁移问题: 方法 %s 在 ActionScript 3.0 中的作用将因 this 关键字作用范围的变化而有所不同。有关详细信息，请参阅警告条目 1083。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "缺少 namespace 声明(例如，变量未定义为 public、private 等)。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s 的作用范围将是默认的 namespace: %s 内部。它在此包的外部不可见。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 按随机顺序迭代“for x in target”语句中的对象属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "迁移问题: ActionScript 3.0 按随机顺序迭代“for x in target”语句中的对象属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_InternalError, "编译器中出现内部错误。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_InternalError_specific, "错误代码: %s。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "没有将 EventHandler 作为一个监听器添加进来。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "迁移问题: %s" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NegativeUintLiteral, "负值在被赋予 uint 数据类型以后将变成大的正值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "在应为 uint (非负)值的地方使用了负值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNullComparision, "与 null 的比较不合逻辑。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNullComparision_specific, "与 null 的比较不合逻辑。%s 类型的变量不能为 null。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNaNComparision, "与 NaN 的比较不合逻辑。由于 NaN != NaN，因此任何涉及 NaN 的比较运算的结果都将为 false。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "与 NaN 的比较不合逻辑。此语句的结果总是 false。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "作为条件的赋值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "作为条件的赋值。您指的是 == 而不是 = ?" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNullAssignment, "不可能进行 null 赋值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "在应为 %s 值的地方使用了 null。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoConstructor, "缺少构造函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoConstructor_specific, "没有为类 %s 指定构造函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ConstNotInitialized, "常数未经初始化。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "常数未经初始化。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadArrayCast, "Array 转换操作可能无效。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) 的作用像新的 Array(x) 一样。要将某个值转换为 Array 类型，请将表达式 x 作为 Array 而不是 Array(x) 使用。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "没有在构造函数内调用 super() 语句。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "在进入此构造函数之前将执行 super() 语句。如果希望显式控制执行 super() 语句的时间，请在构造函数中添加对该语句的调用。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_version, "请改用 Capabilities.version。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Focusrect, "有关详细信息，请参阅 InteractiveObject.focusRect。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Highquality, "有关详细信息，请参阅 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "有关详细信息，请参阅 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "有关详细信息，请参阅 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Quality, "有关详细信息，请参阅 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "请改用静态属性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "有关详细信息，请参阅 LoaderInfo.url。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NewLine, "请用 '\n' 作为换行符。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "有关详细信息，请参阅 textField.maxScroll。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Level, "ActionScript 3.0 中不存在级别的概念，但提供对显示列表的直接访问。有关详细信息，请参阅 flash.display 包。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Parent, "请改用 parent 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Root, "此属性已被删除。最接近的等效项是 Stage，它可以作为 ActionScript 3.0 显示列表的根。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "请尝试改为将 caller 声明为函数的参数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Button_Target, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "请改用 parent 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "有关详细信息，请参阅 Sprite.hitArea。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Scroll, "有关详细信息，请参阅 flash.text.TextField 类的 scrollH 和 scrollV 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TargetPath, "请直接将 MovieClip 对象作为参数而不是路径使用。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Video_Height, "有关详细信息，请参阅 Video.videoHeight。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Video_Width, "有关详细信息，请参阅 Video.videoWidth。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp__Proto__, "有关详细信息，请参阅已废弃的 __proto__。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Stage, "有关详细信息，请参阅 DisplayObject.stage。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp__remoteClass, "请改用 flash.net 包中的 registerClass() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_random, "请改用 Math.random()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_chr, "请改用 String.fromCharCode()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_mbchr, "请改用 String.fromCharCode()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ord, "请改用 String.charCodeAt()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_mbord, "请改用 String.charCodeAt()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_substring, "请改用 String.substr 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "请改用 String.substr 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_length, "请改用参数的 length 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_mblength, "请改用参数的 length 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ASNative, "有关详细信息，请参阅对 ASnative 的更改。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_addProperty, "请改为使用点 (.) 记号直接在实例上设置属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_getProperty, "请改为使用点 (.) 记号直接访问属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_setProperty, "请改为使用点 (.) 记号直接在实例上设置属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_asfunction, "有关详细信息，请参阅 TextEvent.LINK 和 addEventListener()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "此方法已移至 flash.utils 包。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "已被新的 MovieClip 类构造函数所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_fscommand, "已移至 flash.system 包。此外，请参阅 Javascript/ActionScript 通信的 flash.external.ExternalInterface 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_getURL, "有关等效的功能，请参阅 flash.net.URLLoader。flash.net 包中还包含了包级函数 navigateToURL() 和 sendToURL()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "有关详细信息，请参阅 MovieClip.gotoAndPlay()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "有关详细信息，请参阅 MovieClip.gotoAndStop()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_play, "有关详细信息，请参阅 MovieClip.play()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_print, "有关详细信息，请参阅 PrintJob.start()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "有关详细信息，请参阅 PrintJob。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "有关详细信息，请参阅 PrintJob。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_printNum, "有关详细信息，请参阅 PrintJob。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "请使用 Container.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_setInterval, "已移至 flash.utils 包。请考虑改用 Timer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "有关详细信息，请参阅 MovieClip.nextFrame()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_startDrag, "有关详细信息，请参阅 MovieClip.startDrag()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_stop, "有关详细信息，请参阅 MovieClip.stop()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "有关详细信息，请参阅 Sound.stopAllSounds()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "有关详细信息，请参阅 MovieClip.stopDrag()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "请改用点 (.) 运算符或 with 语句。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "有关详细信息，请参阅 DisplayObject.stage 和 Stage.quality。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "请改用 DisplayObjectContainer.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "请改用 DisplayObjectContainer.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "此函数不再是全局函数，但仍可作为 TimerEvent、MouseEvent 和 KeyboardEvent 类的方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "有关详细信息，请参阅 Video.attachNetStream 和 Video.attachCamera。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "请使用 URLLoader 类来执行加载并将结果传递给 StyleSheet.parseCSS()" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "在 ActionScript 3.0 中，默认情况下对所有类进行注册。如果您使用的是 AMF，请参阅 flash.utils.registerClassAlias() 以了解详细信息。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "请使用存取器属性(get/set 函数)或 flash.utils.Proxy 类来实现类似功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "请使用存取器属性(get/set 函数)或 flash.utils.Proxy 类来实现类似功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "有关详细信息，请参阅 MovieClip.loadMovie()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "有关详细信息，请参阅 MovieClip.loadMovieNum()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "有关详细信息，请参阅 Loader.load()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "有关详细信息，请参阅 Loader.load()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "使用 SWF 类从库中创建声音" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onStatus, "在 ActionScript 3.0 中，onStatus 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('status', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onID3, "在 ActionScript 3.0 中，onID3 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('id3', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoad, "在 ActionScript 3.0 中，onLoad 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('load', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onSoundComplete, "在 ActionScript 3.0 中，onSoundComplete 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('soundComplete', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onSetFocus, "在 ActionScript 3.0 中，onSetFocus 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('focusIn', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onResize, "在 ActionScript 3.0 中，onResize 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('resize', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onChanged, "在 ActionScript 3.0 中，onChanged 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('change', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onKillFocus, "在 ActionScript 3.0 中，onKillFocus 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('focusOut', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onScroller, "在 ActionScript 3.0 中，onScroller 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('scroll', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onMouseDown, "在 ActionScript 3.0 中，onMouseDown 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseDown', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onMouseUp, "在 ActionScript 3.0 中，onMouseUp 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseUp', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onMouseMove, "在 ActionScript 3.0 中，onMouseMove 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseMove', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onMouseWheel, "在 ActionScript 3.0 中，onMouseWheel 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseWheel', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onKeyDown, "在 ActionScript 3.0 中，onKeyDown 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('keyDown', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onKeyUp, "在 ActionScript 3.0 中，onKeyUp 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('keyUp', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onData, "在 ActionScript 3.0 中，onData 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('data', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "在 ActionScript 3.0 中，onHTTPStatus 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('httpStatus', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onDragOut, "在 ActionScript 3.0 中，onDragOut 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseOut', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onDragOver, "在 ActionScript 3.0 中，onDragOver 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseOver', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onPress, "在 ActionScript 3.0 中，onPress 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseDown', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onRelease, "在 ActionScript 3.0 中，onRelease 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('click', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "在 ActionScript 3.0 中，onReleaseOutside 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseUp', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onRollOut, "在 ActionScript 3.0 中，onRollOut 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseOut', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onRollOver, "在 ActionScript 3.0 中，onRollOver 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('mouseOver', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onActivity, "在 ActionScript 3.0 中，onActivity 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('activity', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onSelect, "在 ActionScript 3.0 中，onSelect 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('menuSelect', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onEnterFrame, "在 ActionScript 3.0 中，onEnterFrame 不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('enterFrame', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onUnload, "在 ActionScript 3.0 中，onUnload 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('unload', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadComplete, "在 ActionScript 3.0 中，onLoadComplete 不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('load', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadError, "在 ActionScript 3.0 中，onLoadError 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('error', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadInit, "在 ActionScript 3.0 中，onLoadInit 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('init', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadProgress, "在 ActionScript 3.0 中，onLoadProgress 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('progress', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onLoadStart, "在 ActionScript 3.0 中，onLoadStart 不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('start', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onClose, "在 ActionScript 3.0 中，onClose 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('close', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onConnect, "在 ActionScript 3.0 中，onConnect 事件处理函数不是由 Flash Player 自动触发。必须首先使用 addEventListener ('connect', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onXML, "在 ActionScript 3.0 中，onXML 不是由 Flash Player 自动触发的。必须首先使用 addEventListener ('xml', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "请改用属性 hasChildNodes。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "XMLEvent 类已废弃，xml 事件不再被调度。文件加载期间仅调度 data 事件。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc 类已更名为 XMLDocument。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "请改用 Accessibility.active 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "请改用 ActivityEvent.ACTIVITY 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "请改用 DisplayObjectContainer.parent.getChildIndex。请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "请改用 DisplayObjectContainer.parent.setChildIndex。请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "请改用 DisplayObjectContainer.getChildAt。请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "请改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 总是会添加新的子项来索引 DisplayObjectContainer.numChildren。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "请改用 ByteArray.bytesAvailable 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "请改用 ByteArray.position 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "请改用 ByteArray.position 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "请改用 Camera.getCamera() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "请改用 Camera.currentFPS 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "请改用 Camera.keyFrameInterval 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "请改用 Camera.loopback 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "请改用 ColorTransform.color 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "请改用 ColorTransform.color 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "请改用 Container.textSnapshot 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "请改用 ContextMenu.clone() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "请改用 ContextMenu.forwardAndBack 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "请改用 ContextMenuItem.clone() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "请改用 CustomActions.actionsList 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "请改用 DataEvent.DATA 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "请改用 DisplayObject.scaleX 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "请改用 DisplayObject.scaleX 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "请改用 DisplayObject.scaleY 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "请改用 DisplayObject.scaleY 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "请改用 DisplayObject.mouseX 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "请改用 DisplayObject.mouseX 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "请改用 DisplayObject.mouseY 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "请改用 DisplayObject.mouseY 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "请改用 DisplayObject.name 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "请改用 DisplayObject.parent 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "请改用 DisplayObject.mask 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "请改用 DisplayObject.visible 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "请改用 DisplayObject.x 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "请改用 DisplayObject.y 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "请改用 DisplayObject.rotation 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "请改用 DisplayObject.alpha 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "请改用 DisplayObject.width 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "请改用 DisplayObject.height 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "请改用 ExternalInterface.available 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "请改用 ErrorEvent.ERROR 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "请改用 Event.isDefaultPrevented 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "请改用 Event.ACTIVATE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "请改用 Event.ADDED 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "请改用 Event.CANCEL 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "请改用 Event.CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "请改用 Event.CLOSE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "请改用 Event.COMPLETE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "请改用 Event.CONNECT 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "请改用 Event.DEACTIVATE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "请改用 Event.ENTER_FRAME 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "请改用 Event.ID3 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "请改用 Event.INIT 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "请改用 Event.MOUSE_LEAVE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "请改用 Event.OPEN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "请改用 Event.REMOVED 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "请改用 Event.RENDER 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "请改用 Event.RESIZE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "请改用 Event.SCROLL 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "请改用 Event.SELECT 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "请改用 Event.SOUND_COMPLETE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "请改用 Event.TAB_CHILDREN_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "请改用 Event.TAB_ENABLED_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "请改用 Event.TAB_INDEX_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "请改用 Event.UNLOAD 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "请改用 FocusEvent.FOCUS_IN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "请改用 FocusEvent.FOCUS_OUT 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "请改用 FocusEvent.KEY_FOCUS_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "请改用 FocusEvent.MOUSE_FOCUS_CHANGE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "请改用 Graphics.beginBitmapFill() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "请改用 BitmapFilter.quality 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "请改用 KeyboardEvent.charCode。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "请改用 KeyboardEvent.keyCode。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "有关详细信息，请参阅 KeyboardEvent 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "有关详细信息，请参阅 KeyboardEvent.ctrlKey、KeyboardEvent.altKey 和 KeyboardEvent.shiftKey。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "请改用 PAGE_DOWN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "请改用 PAGE_UP 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "请改用 DELETE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "请改用 CAPS_LOCK 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "请改用 NUMPAD_0 -> NUMPAD_9 常数中的一个。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "请改用 InteractiveObject.focusRect 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "请改用 InteractiveObject.contextMenu 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "请改用 KeyboardEvent.charCode 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "请改用 KeyboardEvent.keyCode 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "请改用 Loader.contentLoaderInfo 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "不再支持此功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "请改用 LoaderInfo.loaderURL 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "请改用 LocalConnection.domain 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "请改用 MenuEvent.contextMenuOwner 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "请改用 Microphone.getMicrophone() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "如果 MovieClip 子类名为 A，请使用 var mc= new A(); addChild(mc)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "请使用 var mc= new MovieClip(); addChild(mc)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "请使用 var tf= new TextField(); addChild(mc)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "请使用 Container.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "请使用 var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));。有关详细信息，请参阅 Loader 和 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "请改用 DisplayObjectContainer.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "请改用 DisplayObjectContainer.removeChild(childName)。有关详细信息，请参阅 DisplayObjectContainer 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "请改用 DisplayObjectContainer.parent.getChildIndex。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "请改用 DisplayObjectContainer.parent.setChildIndex。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "请改用 DisplayObjectContainer.getChildAt。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "请改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 总是会添加新的子项来索引 DisplayObjectContainer.numChildren。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "有关详细信息，请参阅 DisplayObject.addChild。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "有关详细信息，请参阅 LoaderInfo.bytesLoaded 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "有关详细信息，请参阅 LoaderInfo.bytesTotal 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "有关等效的功能，请参阅 flash.net.URLLoader。flash.net 包中还包含了包级函数 navigateToURL() 和 sendToURL()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "有关详细信息，请参阅 LoaderInfo.url 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "有关详细信息，请参阅 LoaderInfo.url 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "请改用 MovieClip.mask 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "有关详细信息，请参阅 LoaderInfo.swfVersion 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "请改用 MovieClip.currentFrame 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "请改用 MovieClip.framesLoaded 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "请改用 MovieClip.totalFrames 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "有关详细信息，请参阅 displayObjectInstance.root。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "有关详细信息，请参阅 displayObjectInstance.root。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "请改用静态属性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "有关详细信息，请参阅 Graphics 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "请改用 NetStream.bufferTime 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "请改用 NetStream.currentFPS 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "请改用 NetStream.videoCodec 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "请改用 NetStream.audioCodec 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "请改用 ProductManager.isInstalled 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "请改用 ProductManager.installedVersion 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "请改用 ProductManager.isRunning 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "请改用 Point.add() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "请改用 Proxy.deleteDescendants 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "请改用 heapDump() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "请改用 ProgressEvent.bytesLoaded 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "请改用 ProgressEvent.bytesTotal 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "请改用 Rectangle.isEmpty 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "请改用 SoundTransform.pan 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "请改用 Sockect.bytesAvailable 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "请改用 SharedObject.size 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "请改用 SharedObject.fps 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "不再支持此属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "请改用 Sprite.constructChildren() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "请改用 Sprite.dropTarget 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "请改用 Stage.focus 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "请改用 Stage.focus 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "请改用 Stage.showDefaultContextMenu 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "请改用 StyleSheet.styleNames 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "请使用 URLLoader 的实例加载 StyleSheet 数据，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "请改用 IME.enabled 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "请改用 IME.enabled 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "请改用 IME.instance 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "请改用 IME.conversionMode 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "请改用 IME.conversionMode 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "请改用 System.vmVersion 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "请改用 SWFLoaderInfo.swfVersion 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "请改用 SWFLoaderInfo.actionScriptVersion 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "请改用 TextField.defaultTextFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "请改用 TextField.defaultTextFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "请改用 DisplayObjectContainer.parent.getChildIndex。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "请改用 DisplayObjectContainer.parent.setChildIndex。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "请改用 DisplayObjectContainer.getChildAt。有关详细信息，请参阅 DisplayObjectContainer 类(由 MovieClip 扩展)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "请改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 总是会添加新的子项来索引 DisplayObjectContainer.numChildren。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "请改用 TextField.replaceSelectedText() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "请改用 TextField.getLineIndexOfChar() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "请改用 TextField.selectionBeginIndex 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "请改用 TextField.selectionEndIndex 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "请改用 TextField.caretIndex 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "请改用 Font.enumerateFonts() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "请改用 TextField.maxScrollV 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "请改用 TextField.scrollH 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "请改用 TextField.maxScrollH 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "请改用 TextField.defaultTextFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "请创建临时的 TextField 并改用 TextField.getLineMetrics。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "请改用 TextSnapshot.charCount 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "请改用 flash.net 包中的 navigateToURL() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "请改用 flash.net 包中的 sendToURL() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "请改用 URLLoader.dataFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "请改用 URLStream.bytesAvailable 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "不再支持此属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "请改用 URLRequest.applicationDomain 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "要添加请求标头，请将 URLRequest.requestHeaders 属性设置为 URLRequestHeader 对象的数组。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "请使用 URLLoader 的实例加载 XML 文件，然后将 URLLoaders 数据传递给 XMLDocuments 构造函数。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "请改用 flash.net 包中的 sendToURL() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "请设置 URLRequest 对象的 postData 属性，然后将该属性与 URLLoader 对象配合使用以加载 XML 文件。将 URLLoaders 数据传递给 XMLDocuments 构造函数。有关详细信息，请参阅 URLLoader、URLRequest 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "请使用 URLLoader 的实例加载 XML 文件，然后将 URLLoaders 数据传递给 XMLDocuments 构造函数。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "要添加请求标头，请将 URLRequest.requestHeaders 属性设置为 URLRequestHeader 对象的数组。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "有关详细信息，请参阅 URLLoader.bytesLoaded 和 URLLoader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "有关详细信息，请参阅 URLLoader.bytesTotal 和 URLLoader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "请使用 URLLoader 的实例加载 XML 文件，然后将加载程序数据传递给 StyleSheet.parseCSS 方法。有关详细信息，请参阅 URLLoader 和 EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "请改用 URLRequest.contentType 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "请检查 XMLDocument 构造函数或 XMLDocument.parseXML 方法可能引发的异常。有关详细信息，请参阅 XMLDocument。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Button, "Button 类已更名为 SimpleButton。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Container, "Container 类已更名为 DisplayObjectContainer。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Image, "Image 类已更名为 BitmapData。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter 类已更名为 BitmapFilter。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite 类已更名为 Bitmap。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo 类已更名为 BitmapLoaderInfo。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent 类已更名为 IMEEvent。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Key, "Key 类已更名为 Keyboard。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics 类已更名为 TextLineMetrics。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LoadVars, "有关详细信息，请参阅 URLVariables 类、URLRequest.urlVariables 属性、URLRequest.postData 属性和 URLLoader.dataFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent 类已更名为 ContextMenuEvent。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities 类已更名为 Capabilities。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextExtents, "请改用 TextField.getLineMetrics 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Button, "Button 类已更名为 SimpleButton。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Container, "Container 类已更名为 DisplayObjectContainer。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Image, "Image 类已更名为 BitmapData。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter 类已更名为 BitmapFilter。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite 类已更名为 Bitmap。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo 类已更名为 BitmapLoaderInfo。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent 类已更名为 IMEEvent。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Key, "Key 类已更名为 Keyboard。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics 类已更名为 TextLineMetrics。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "有关详细信息，请参阅 URLVariables 类、URLRequest.urlVariables 属性、URLRequest.postData 属性和 URLLoader.dataFormat 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent 类已更名为 ContextMenuEvent。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities 类已更名为 Capabilities。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "请改用 TextField.getLineMetrics 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "有关详细信息，请参阅提供类似功能的 Proxy 类的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "请改用 XMLUI.getProperty 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "请改用 XMLUI.setProperty 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "请改用 DisplayObject.accessibilityProperties 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "请改用 DisplayObject.scale9Grid 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "请改用 Graphics.drawOval 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "请改用 NetConnection.connected 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "请改用 Socket.connected 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "请改用 URLStream.connected 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "请改用 SyncEvent.changeList 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "请改用 TextField.scrollV 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "请改用 TextField.bottomScrollV 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "请改用 BitmapDataChannel.RED 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "请改用 BitmapDataChannel.GREEN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "请改用 BitmapDataChannel.BLUE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "请改用 BitmapDataChannel.ALPHA 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_instanceof, "请改用 is 运算符。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "请改用 flash.system.Security.showSettings 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "请改用 System.useCodePage 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "请改用 flash.events.EventDispatcher 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "请改用静态属性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "请改为创建一个位图库元件类的新实例，即新的 myBitmapName()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "有关详细信息，请参阅 Loader.load()。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader 类已被 flash.display.Loader 类所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader 类已被 flash.display.Loader 类所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "请改用 flash.system.IMEConversionMode.ALPHANUMERIC_FULL 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "请改用 flash.system.IMEConversionMode.ALPHANUMERIC_HALF 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "请改用 flash.system.IMEConversionMode.CHINESE 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "请改用 flash.system.IMEConversionMode.JAPANESE_HIRAGANA 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "请改用 flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "请改用 flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "请改用 flash.system.IMEConversionMode.KOREAN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "请改用 flash.system.IMEConversionMode.UNKNOWN 常数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onCancel, "在 ActionScript 3.0 中，onCancel 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener (cancel, onCancel) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "不存在直接替换。willTrigger() 方法可用于辨别是否已注册任何监听器。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onIMEComposition, "在 ActionScript 3.0 中，onIMEComposition 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener (imeComposition, handlerName) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "有关详细信息，请参阅 LoaderInfo.url 和 Loader 类。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "请改用 getFullYear() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "请改用 setFullYear() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "请改用 getUTCFullYear() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "请改用 rate 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection 类已被删除。有关详细信息，请参阅需要其中的 selection 信息的类的 addEventListener 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection 类已被删除。有关详细信息，请参阅需要其中的 selection 信息的类的 addEventListener 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "请改用 gain 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "使用 ColorTransform 类构造函数或属性可以直接赋颜色值。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "使用 ColorTransform 类构造函数或属性可以直接赋颜色值。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "请参阅 flash.display.InteractiveObject 类的与焦点相关的属性的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "请参阅 flash.display.Graphics.beginBitmapFill 方法的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "请参阅 flash.display.DisplayObject.hitTestObject() 方法的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "请参阅 addChild() 方法的帮助。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "请改用 load() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "请使用 flash.media.SoundChannel.leftPeak 和 flash.media.SoundChannel.rightPeak 监控声道的幅度。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "请改用 soundTransform 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "请改用 SoundTransform.pan 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "请改用 SoundTransform.pan 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "请改用 bytesLoaded 属性。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "请改用 bytesTotal 属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "在 TextField 中使用 += 的效率很低。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "与使用 TextField.appendText() 方法相比，使用 += 将文本追加到 TextField 要慢许多倍。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "可能缺少括号。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "在需要 %s 类型的地方使用了函数值。在此函数引用之后可能缺少括号 ()。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_InstanceOfChanges, "使用 instanceof 运算符。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "已不再使用 instanceof 运算符，请改用 is 运算符。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "allowDomain() 事件处理函数目前是标准方法而不是事件回调。有关详细信息，请参阅新的 LocalConnection.allowDomain 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "allowInsecureDomain() 事件处理函数目前是标准方法而不是事件回调。有关详细信息，请参阅新的 LocalConnection.allowInsecureDomain 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_call, "不再支持全局 call() 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_Color, "Color 类已被删除。请使用 flash.geom.ColorTransform 类来实现等效的功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Color, "Color 类已被删除。请使用 flash.geom.ColorTransform 类来实现等效的功能。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF 文件始终使用精确域匹配规则。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp_capabilities, "capabilities 类已更名为 Capabilities。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_capabilities, "capabilities 类已更名为 Capabilities。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "有关详细信息，请参阅 addEventListener (eventName, listener, useCapture, priority)。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "有关详细信息，请参阅 removeEventListener (eventName, listener, useCapture)。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onComplete, "在 ActionScript 3.0 中，onComplete 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('complete', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onHTTPError, "在 ActionScript 3.0 中，onHTTPError 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('httpError', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onIOError, "在 ActionScript 3.0 中，onIOError 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('ioError', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onProgress, "在 ActionScript 3.0 中，onProgress 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('progress', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onSecurityError, "在 ActionScript 3.0 中，onSecurityError 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('securityError', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Event_onOpen, "在 ActionScript 3.0 中，onOpen 事件处理函数不是由 Flash Player 在运行时自动触发的。必须首先使用 addEventListener ('open', callback_handler) 为该事件注册此处理函数。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "可能使用 ActionScript 2.0 XML 类。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "迁移问题:ActionScript 2.0 XML 类已更名为 XMLDocument。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadDateCast, "Date 转换操作无效。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) 的工作方式与新的 Date().toString() 相同。要将某个值转换为 Date 类型，请使用 \"x as Date\" 而不是 Date(x)。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ImportHidesClass, "使用与当前类相同的名称导入包会在此范围内隐藏该类标识符。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "使用与当前类相同的名称导入包会在此范围内隐藏该类标识符。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "多个参数的名称相同。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "已指定多个名为 '%s' 的参数。对该参数的引用将始终解析到最后一个参数。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "请改用 Rectangle.containsRect 方法。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_eval, "此功能已被删除。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_getVersion, "此功能已被 flash.system.Capabilities.version 属性所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "此功能已被 flash.display.MovieClip.framesLoaded 属性所取代。" );
        warningConstantsCN[index++] = new AscWarning(kUnsupportedProp__global, "_global 属性已被删除。要实现等效的功能，请使用类的静态成员。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadBoolAssignment, "在需要 Boolean 值的地方使用了非 Boolean 值。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "在需要 Boolean 值的地方使用了 %s。表达式会被强制转换为 Boolean 类型。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadES3TypeProp, "未知的属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s 不是动态类 %s 的可识别属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadES3TypeMethod, "未知的方法。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s 不是动态类 %s 的可识别方法。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DuplicateVariableDef, "变量定义重复。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "变量定义重复。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "定义名称与导入的包名称相同。对该名称的非限定引用将解析到包而不是定义。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "定义名称与导入的包名称相同。对该名称的非限定引用将解析到包而不是定义。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "可能尝试删除某固定属性。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "无法删除声明的属性 %s。要释放关联的内存，请将其值设置为 null。" );
        warningConstantsCN[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsCN[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsCN[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   };

   static final AscWarning[] warningConstantsTW= new AscWarning[kNumWarningConstants]; 

   private static void initWarningConstantsTW() 
   {
      int index=0;
        warningConstantsTW[index++] = new AscWarning(kWarning_NoTypeDecl, "缺少類型宣告。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoTypeDecl_specific, "%s '%s' 沒有類型宣告。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadUndefinedComparision, "與 undefined 的比較不合邏輯。僅不具類型的變數 (或是類型 * 的變數) 可以是未定義的。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadUndefinedComparision_specific, "%s 類型的變數不能是未定義的。未定義的值在比較之前，會強制轉型成 %s。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ConstructorReturnsValue, "用於新運算式中的函數傳回一個值。結果會是函數傳回的內容，而不是該函數的新實體。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ConstructorReturnsValue_specific, "移轉問題：新的 %s 結果會是 %s 的傳回值，而不是該函數的新實體。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs, "在 ActionScript 3.0 中，沒有引數的 Boolean() 會傳回 false。在 ActionScript 2.0 中，Boolean() 會傳回 undefined。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BooleanConstructorWithNoArgs_specific, "使用沒有引數的 Boolean()。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NumberFromStringChanges, "在 ActionScript 3.0 中，空白會被忽略，而 '' 會傳回 0。在 ActionScript 2.0 中，Number() 會在參數為 '' 或包含空白時傳回 NaN。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NumberFromStringChanges_specific, "移轉問題：如果是用空字串引數呼叫 Number('') 函數，此函數會在 ActionScript 3.0 中傳回 0，而在 ActionScript 2.0 中傳回 NaN。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ArrayToStringChanges, "Array.toString() 格式已經變更。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ArrayToStringChanges_specific, "移轉問題：null 和 undefined 元素使用的 Array.toString() 處理方式已經變更。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedPropertyError, "不支援的 ActionScript 2.0 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedPropertyError_specific, "移轉問題：不再支援 %s 屬性。%s。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedFunctionError, "不支援的 ActionScript 2.0 函數。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedFunctionError_specific, "移轉問題：不再支援 %s 方法。%s。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ChangesInResolve, "不再支援 __resolve。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ChangesInResolve_specific, "移轉問題：不再支援 __resolve。請使用新的 Proxy 類別進行相似的功能。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_LevelNotSupported, "不再支援 _level。如需詳細資訊，請查看 flash.display 套件。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_LevelNotSupported_specific, "移轉問題：不再支援 _level。如需詳細資訊，請查看 flash.display 套件。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ClassIsSealed, "類別已密封。不能以動態方式加入成員。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ClassIsSealed_specific, "移轉問題：%s 不是動態的類別。不能以動態方式在實體中加入成員。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ScopingChangeInThis, "this 關鍵字範圍變更。從類別實體擷取出來的類別方法永遠會將 this 解析回該實體。ActionScript 2.0 會根據被呼叫方法的來源位置，以動態方式查詢 this。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ScopingChangeInThis_specific, "移轉問題：因為 this 關鍵字的範圍變更，所以 ActionScript 3.0 中的 %s 方法會出現不同的行為模式。如需詳細資訊，請查看警告 1083 的項目。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_MissingNamespaceDecl, "缺少 namespace 宣告 (例如，變數未定義為公用、私用等)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_MissingNamespaceDecl_specific, "%s 的範圍將設定成預設的 namespace：%s 內部。它將不會顯示在此套件之外。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ForVarInChanges, "ActionScript 3.0 會以隨機順序重複 \"for x in target\" 陳述式內的物件屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ForVarInChanges_specific, "移轉問題：ActionScript 3.0 會以隨機順序重複 \"for x in target\" 陳述式內的物件屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_InternalError, "編譯器內部錯誤。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_InternalError_specific, "錯誤碼：%s。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedEventHandlerError, "EventHandler 並未以偵聽程式加入。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DepricatedEventHandlerError_specific, "移轉問題：%s" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NegativeUintLiteral, "負值會在指定成 uint 資料類型時變成很大的正值。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NegativeUintLiteral_specific, "需要使用 uint 值 (非負值) 的位置使用了負值。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNullComparision, "與 null 的比較不合邏輯。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNullComparision_specific, "與 null 的比較不合邏輯。%s 類型的變數不能是 null。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNaNComparision, "與 NaN 的比較不合邏輯。因為 NaN != NaN，所以任何有關 NaN 的比較操作都會評估成 false。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNaNComparision_specific, "與 NaN 的比較不合邏輯。這個陳述式永遠會評估成 false。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_AssignmentWithinConditional, "條件式的指定。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_AssignmentWithinConditional_specific, "條件式的指定。您指的是否為 == (而不是 =)？" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNullAssignment, "不可能的 null 指定。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadNullAssignment_specific, "需要 %s 值的位置使用了 null。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoConstructor, "遺失建構函式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoConstructor_specific, "未指定 %s 類別的建構函式函數。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ConstNotInitialized, "常數尚未初始化。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ConstNotInitialized_specific, "常數尚未初始化。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadArrayCast, "Array 轉換操作可能無效。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadArrayCast_specific, "Array(x) 的行為模式相同於新的 Array(x)。若要將值轉換成 Array 類型，請將運算式 x 當作 Array 使用，而不要當作 Array(x)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor, "super() 陳述式不是在建構函式中呼叫。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_NoExplicitSuperCallInConstructor_specific, "super() 陳述式會在進入這個建構函式之前執行。如果您要以明確方式控制何時執行此陳述式，請在建構函式中加入 super() 的呼叫。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_version, "請改用 Capabilities.version。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Focusrect, "如需詳細資訊，請查看 InteractiveObject.focusRect。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Highquality, "如需詳細資訊，請查看 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObj_HighQuality, "如需詳細資訊，請查看 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObj_Quality, "如需詳細資訊，請查看 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Quality, "如需詳細資訊，請查看 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_Soundbuftime, "請改用 static 屬性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_Target, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_Url, "如需詳細資訊，請查看 LoaderInfo.url。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_Variable, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NewLine, "請使用 '\n' 換行。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MaxScroll, "如需詳細資訊，請查看 textField.maxScroll。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Level, "ActionScript 3.0 中沒有層級的概念，而是改成提供顯示清單的直接存取權限。如需詳細資訊，請查看 flash.display 套件。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Parent, "請改用 parent 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Root, "這個屬性已經移除。最接近的相等項目是 Stage，此項目會作為 ActionScript 3.0 顯示清單的根位置。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Arguments_Caller, "請嘗試將 caller 宣告為函數的引數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Button_Target, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_Parent, "請改用 parent 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_target, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_hitArea, "如需詳細資訊，請查看 Sprite.hitArea。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Scroll, "如需詳細資訊，請查看 flash.text.TextField 類別的 scrollH 和 scrollV 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TargetPath, "請直接將 MovieClip 物件當作引數 (而非路徑) 使用。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Video_Height, "如需詳細資訊，請查看 Video.videoHeight。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Video_Width, "如需詳細資訊，請查看 Video.videoWidth。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp__Proto__, "如需詳細資訊，請查看已過時的 __proto__。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Stage, "如需詳細資訊，請查看 DisplayObject.stage。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp__remoteClass, "請改用 flash.net 套件中的 registerClass() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_random, "請改用 Math.random()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_chr, "請改用 String.fromCharCode()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_mbchr, "請改用 String.fromCharCode()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ord, "請改用 String.charCodeAt()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_mbord, "請改用 String.charCodeAt()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_substring, "請改用 String.substr 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_mbsubstring, "請改用 String.substr 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_length, "請改用引數的 length 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_mblength, "請改用引數的 length 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ASNative, "如需詳細資訊，請查看 ASnative 的變更部分。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_addProperty, "請改用句號 (.) 註釋，直接在實體上設定屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_getProperty, "請改用句號 (.) 註釋，直接存取屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_setProperty, "請改用句號 (.) 註釋，直接在實體上設定屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_asfunction, "如需詳細資訊，請查看 TextEvent.LINK 和 addEventListener()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_clearInterval, "這個方法已經移到 flash.utils 套件。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_duplicateMovieClip, "已由新的 MovieClip 類別建構函式函數所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_fscommand, "已經移到 flash.system 套件。另外，如需使用 Javascript/ActionScript 通訊，請查看 flash.external.ExternalInterface 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_getURL, "如需相等的功能，請查看 flash.net.URLLoader。flash.net 套件也包含 navigateToURL() 和 sendToURL() 等套件層級的函數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_gotoAndPlay, "如需詳細資訊，請查看 MovieClip.gotoAndPlay()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_gotoAndStop, "如需詳細資訊，請查看 MovieClip.gotoAndStop()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_play, "如需詳細資訊，請查看 MovieClip.play()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_print, "如需詳細資訊，請查看 PrintJob.start()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_printAsBitmap, "如需詳細資訊，請查看 PrintJob。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_printAsBitmapNum, "如需詳細資訊，請查看 PrintJob。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_printNum, "如需詳細資訊，請查看 PrintJob。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_removeMovieClip, "請使用 Container.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_setInterval, "已經移到 flash.utils 套件。請考慮改用 Timer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_nextFrame, "如需詳細資訊，請查看 MovieClip.nextFrame()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_startDrag, "如需詳細資訊，請查看 MovieClip.startDrag()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_stop, "如需詳細資訊，請查看 MovieClip.stop()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_stopAllSounds, "如需詳細資訊，請查看 Sound.stopAllSounds()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_stopDrag, "如需詳細資訊，請查看 MovieClip.stopDrag()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_tellTarget, "請改用句號 (.) 運算子或 with 陳述式。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_toggleHighQuality, "如需詳細資訊，請查看 DisplayObject.stage 和 Stage.quality。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_unloadMovie, "請改用 DisplayObjectContainer.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_unloadMovieNum, "請改用 DisplayObjectContainer.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_updateAfterEvent, "這個函數不再是全域函數，但是仍然可作為 TimerEvent、MouseEvent 和 KeyboardEvent 等類別的方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Video_attachVideo, "如需詳細資訊，請查看 Video.attachNetStream 和 Video.attachCamera。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_StyleSheet_load, "請使用 URLLoader 類別來執行載入，並將結果傳遞到 StyleSheet.parseCSS()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Object_registerClass, "根據預設，在 ActionScript 3.0 中的所有類別都已註冊。如果您正在使用 AMF，請查看 flash.utils.registerClassAlias() 取得更多詳細資訊。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Object_unwatch, "請使用存取子屬性 (get/set 函數) 或 flash.utils.Proxy 類別進行相似的功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Object_watch, "請使用存取子屬性 (get/set 函數) 或 flash.utils.Proxy 類別進行相似的功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_loadMovie, "如需詳細資訊，請查看 MovieClip.loadMovie()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_loadMovieNum, "如需詳細資訊，請查看 MovieClip.loadMovieNum()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_loadVariables, "如需詳細資訊，請查看 Loader.load()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_loadVariablesNum, "如需詳細資訊，請查看 Loader.load()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Stage_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Stage_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Mouse_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Mouse_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_attachSound, "請使用 SWF 類別，從元件庫建立音效。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onStatus, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onStatus 事件處理常式。您必須使用 addEventListener ( 'status', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onID3, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onID3 事件處理常式。您必須使用 addEventListener ( 'id3', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoad, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoad 事件處理常式。您必須使用 addEventListener ( 'load', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onSoundComplete, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onSoundComplete 事件處理常式。您必須使用 addEventListener ( 'soundComplete', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onSetFocus, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onSetFocus 事件處理常式。您必須使用 addEventListener ( 'focusIn', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onResize, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onResize 事件處理常式。您必須使用 addEventListener ( 'resize', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onChanged, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onChanged 事件處理常式。您必須使用 addEventListener ( 'change', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onKillFocus, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onKillFocus 事件處理常式。您必須使用 addEventListener ( 'focusOut', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onScroller, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onScroller 事件處理常式。您必須使用 addEventListener ( 'scroll', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onMouseDown, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onMouseDown 事件處理常式。您必須使用 addEventListener ( 'mouseDown', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onMouseUp, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onMouseUp 事件處理常式。您必須使用 addEventListener ( 'mouseUp', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onMouseMove, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onMouseMove 事件處理常式。您必須使用 addEventListener ( 'mouseMove', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onMouseWheel, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onMouseWheel 事件處理常式。您必須使用 addEventListener ( 'mouseWheel', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onKeyDown, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onKeyDown 事件處理常式。您必須使用 addEventListener ( 'keyDown', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onKeyUp, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onKeyUp 事件處理常式。您必須使用 addEventListener ( 'keyUp', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onData, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onData 事件處理常式。您必須使用 addEventListener ( 'data', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onHTTPStatus, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onHTTPStatus 事件處理常式。您必須使用 addEventListener ( 'httpStatus', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onDragOut, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onDragOut 事件處理常式。您必須使用 addEventListener ( 'mouseOut', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onDragOver, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onDragOver 事件處理常式。您必須使用 addEventListener ( 'mouseOver', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onPress, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onPress 事件處理常式。您必須使用 addEventListener ( 'mouseDown', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onRelease, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onRelease 事件處理常式。您必須使用 addEventListener ( 'click', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onReleaseOutside, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onReleaseOutside 事件處理常式。您必須使用 addEventListener ( 'mouseUp', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onRollOut, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onRollOut 事件處理常式。您必須使用 addEventListener ( 'mouseOut', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onRollOver, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onRollOver 事件處理常式。您必須使用 addEventListener ( 'mouseOver', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onActivity, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onActivity 事件處理常式。您必須使用 addEventListener ( 'activity', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onSelect, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onSelect 事件處理常式。您必須使用 addEventListener ( 'menuSelect', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onEnterFrame, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onEnterFrame。您必須使用 addEventListener ( 'enterFrame', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onUnload, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onUnload 事件處理常式。您必須使用 addEventListener ( 'unload', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadComplete, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadComplete。您必須使用 addEventListener ( 'load', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadError, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadError 事件處理常式。您必須使用 addEventListener ( 'error', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadInit, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadInit 事件處理常式。您必須使用 addEventListener ( 'init', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadProgress, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadProgress 事件處理常式。您必須使用 addEventListener ( 'progress', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onLoadStart, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onLoadStart。您必須使用 addEventListener ( 'start', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onClose, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onClose 事件處理常式。您必須使用 addEventListener ( 'close', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onConnect, "在 ActionScript 3.0 中，Flash Player 不會自動觸發 onConnect 事件處理常式。您必須使用 addEventListener ( 'connect', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onXML, "在 ActionScript 3.0 中，Flash Player 不會自動觸發 onXML。您必須使用 addEventListener ( 'xml', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_hasChildNodes, "請改用 hasChildNodes 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLEvent, "此 XMLEvent 類別已經淘汰，所以此 xml 事件將不再發送。在檔案載入期間只會發送 data 事件。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDoc, "XMLDoc 類別已經更名為 XMLDocument。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Accessibility_isActive, "請改用 Accessibility.active 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, "請改用 ActivityEvent.ACTIVITY 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getDepth, "請改用 DisplayObjectContainer.parent.getChildIndex。請參閱由 MovieClip 擴充之 DisplayObjectContainer 類別的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_swapDepths, "請改用 DisplayObjectContainer.parent.setChildIndex。請參閱由 MovieClip 擴充之 DisplayObjectContainer 類別的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, "請改用 DisplayObjectContainer.getChildAt。請參閱由 MovieClip 擴充之 DisplayObjectContainer 類別的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SimpleButton_getNextHighestDepth, "請改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 永遠會加入新子系來索引 DisplayObjectContainer.numChildren。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ByteArray_available, "請改用 ByteArray.bytesAvailable 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ByteArray_getFilePointer, "請改用 ByteArray.position 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ByteArray_seek, "請改用 ByteArray.position 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Camera_get, "請改用 Camera.getCamera() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Camera_currentFps, "請改用 Camera.currentFPS 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Camera_setKeyFrameInterval, "請改用 Camera.keyFrameInterval 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Camera_setLoopback, "請改用 Camera.loopback 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getRGB, "請改用 ColorTransform.color 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setRGB, "請改用 ColorTransform.color 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, "請改用 Container.textSnapshot 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ContextMenu_copy, "請改用 ContextMenu.clone() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ContextMenu_forward_back, "請改用 ContextMenu.forwardAndBack 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ContextMenuItem_copy, "請改用 ContextMenuItem.clone() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_CustomActions_listActions, "請改用 CustomActions.actionsList 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DataEvent_DATA_TYPE, "請改用 DataEvent.DATA 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xscale, "請改用 DisplayObject.scaleX 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xscale, "請改用 DisplayObject.scaleX 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_yscale, "請改用 DisplayObject.scaleY 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__yscale, "請改用 DisplayObject.scaleY 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_xmouse, "請改用 DisplayObject.mouseX 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__xmouse, "請改用 DisplayObject.mouseX 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_ymouse, "請改用 DisplayObject.mouseY 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__ymouse, "請改用 DisplayObject.mouseY 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_setRootClass, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_mapSymbolToClass, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__name, "請改用 DisplayObject.name 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__parent, "請改用 DisplayObject.parent 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__mask, "請改用 DisplayObject.mask 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__visible, "請改用 DisplayObject.visible 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__x, "請改用 DisplayObject.x 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__y, "請改用 DisplayObject.y 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__rotation, "請改用 DisplayObject.rotation 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__alpha, "請改用 DisplayObject.alpha 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__width, "請改用 DisplayObject.width 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject__height, "請改用 DisplayObject.height 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ExternalInterface_available, "請改用 ExternalInterface.available 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ErrorEvent_ERROR_TYPE, "請改用 ErrorEvent.ERROR 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Event_isDefaultPrevented, "請改用 Event.isDefaultPrevented 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_ACTIVATE_TYPE, "請改用 Event.ACTIVATE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_ADDED_TYPE, "請改用 Event.ADDED 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_CANCEL_TYPE, "請改用 Event.CANCEL 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_CHANGE_TYPE, "請改用 Event.CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_CLOSE_TYPE, "請改用 Event.CLOSE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_COMPLETE_TYPE, "請改用 Event.COMPLETE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_CONNECT_TYPE, "請改用 Event.CONNECT 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_DEACTIVATE_TYPE, "請改用 Event.DEACTIVATE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_ENTER_FRAME_TYPE, "請改用 Event.ENTER_FRAME 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_ID3_TYPE, "請改用 Event.ID3 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_INIT_TYPE, "請改用 Event.INIT 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, "請改用 Event.MOUSE_LEAVE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_OPEN_TYPE, "請改用 Event.OPEN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_REMOVED_TYPE, "請改用 Event.REMOVED 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_RENDER_TYPE, "請改用 Event.RENDER 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_RESIZE_TYPE, "請改用 Event.RESIZE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_SCROLL_TYPE, "請改用 Event.SCROLL 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_SELECT_TYPE, "請改用 Event.SELECT 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, "請改用 Event.SOUND_COMPLETE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, "請改用 Event.TAB_CHILDREN_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, "請改用 Event.TAB_ENABLED_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, "請改用 Event.TAB_INDEX_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Event_UNLOAD_TYPE, "請改用 Event.UNLOAD 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, "請改用 FocusEvent.FOCUS_IN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, "請改用 FocusEvent.FOCUS_OUT 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, "請改用 FocusEvent.KEY_FOCUS_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, "請改用 FocusEvent.MOUSE_FOCUS_CHANGE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Graphics_beginImageFill, "請改用 Graphics.beginBitmapFill() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, "請改用 BitmapFilter.quality 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getAscii, "請改用 KeyboardEvent.charCode。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_getCode, "請改用 KeyboardEvent.keyCode。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isDown, "如需詳細資訊，請查看 KeyboardEvent 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Keyboard_isToggled, "如需詳細資訊，請查看 KeyboardEvent.ctrlKey、KeyboardEvent.altKey 和 KeyboardEvent.shiftKey。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGDN, "請改用 PAGE_DOWN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_PGUP, "請改用 PAGE_UP 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_DELETEKEY, "請改用 DELETE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_CAPSLOCK, "請改用 CAPS_LOCK 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard_NUMPAD, "請改用 NUMPAD_0 -> NUMPAD_9 等常數其中之一。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_InteractiveObject__focusrect, "請改用 InteractiveObject.focusRect 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_InteractiveObject_menu, "請改用 InteractiveObject.contextMenu 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_ascii, "請改用 KeyboardEvent.charCode 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_KeyboardEvent_code, "請改用 KeyboardEvent.keyCode 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Loader_loaderInfo, "請改用 Loader.contentLoaderInfo 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Loader_preload, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Loader_loadCached, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LoaderInfo_loaderUrl, "請改用 LoaderInfo.loaderURL 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_LocalConnection_domain, "請改用 LocalConnection.domain 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ContextMenuEvent_menuOwner, "請改用 MenuEvent.contextMenuOwner 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Microphone_get, "請改用 Microphone.getMicrophone() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachMovie, "如果 MovieClip 子類別名稱為 A，請使用 var mc= new A(); addChild(mc)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createEmptyMovieClip, "請使用 var mc= new MovieClip(); addChild(mc)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_createTextField, "請使用 var tf= new TextField(); addChild(mc)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_removeMovieClip, "請使用 Container.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadMovie, "請使用 var l = new Loader(); addChild(l); l.load(new URLRequest(\"your url\"));。如需詳細資訊，請查看 Loader 和 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovie, "請改用 DisplayObjectContainer.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_unloadMovieNum, "請改用 DisplayObjectContainer.removeChild(childName)。如需詳細資訊，請查看 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getDepth, "請改用 DisplayObjectContainer.parent.getChildIndex。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_swapDepths, "請改用 DisplayObjectContainer.parent.setChildIndex。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getInstanceAtDepth, "請改用 DisplayObjectContainer.getChildAt。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getNextHighestDepth, "請改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 永遠會加入新子系來索引 DisplayObjectContainer.numChildren。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachAudio, "如需詳細資訊，請查看 DisplayObject.addChild。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesLoaded, "如需詳細資訊，請查看 LoaderInfo.bytesLoaded 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getBytesTotal, "如需詳細資訊，請查看 LoaderInfo.bytesTotal 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getURL, "如需相等的功能，請查看 flash.net.URLLoader。flash.net 套件也包含 navigateToURL() 和 sendToURL() 等套件層級的函數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_url, "如需詳細資訊，請查看 LoaderInfo.url 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__url, "如需詳細資訊，請查看 LoaderInfo.url 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_setMask, "請改用 MovieClip.mask 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_getSWFVersion, "如需詳細資訊，請查看  LoaderInfo.swfVersion 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__currentframe, "請改用 MovieClip.currentFrame 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__framesloaded, "請改用 MovieClip.framesLoaded 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__totalframes, "請改用 MovieClip.totalFrames 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_lockroot, "如需詳細資訊，請查看 displayObjectInstance.root。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__lockroot, "如需詳細資訊，請查看 displayObjectInstance.root。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip__soundbuftime, "請改用 static 屬性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_clear, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginFill, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginGradientFill, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineGradientStyle, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginImageFill, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineStyle, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRect, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRect, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawRoundRectComplex, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_drawCircle, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_moveTo, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_lineTo, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_curveTo, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_endFill, "如需詳細資訊，請查看 Graphics 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_NetStream_setBufferTime, "請改用 NetStream.bufferTime 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NetStream_currentFps, "請改用 NetStream.currentFPS 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NetStream_videocodec, "請改用 NetStream.videoCodec 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NetStream_audiocodec, "請改用 NetStream.audioCodec 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isIntalled, "請改用 ProductManager.isInstalled 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ProductManager_installedVersion, "請改用 ProductManager.installedVersion 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ProductManager_isRunning, "請改用 ProductManager.isRunning 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Point_addTo, "請改用 Point.add() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Proxy_delDescendants, "請改用 Proxy.deleteDescendants 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Profiler_heapdump, "請改用 heapDump() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_current, "請改用 ProgressEvent.bytesLoaded 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ProgressEvent_total, "請改用 ProgressEvent.bytesTotal 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Rectangle_isEmpty, "請改用 Rectangle.isEmpty 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SoundTransform_setPan, "請改用 SoundTransform.pan 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Socket_available, "請改用 Sockect.bytesAvailable 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SharedObject_getSize, "請改用 SharedObject.size 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SharedObject_setFps, "請改用 SharedObject.fps 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sprite_getSWF, "不再支援這項功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sprite_constructChild, "請改用 Sprite.constructChildren() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Sprite__droptarget, "請改用 Sprite.dropTarget 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Stage_getFocus, "請改用 Stage.focus 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Stage_setFocus, "請改用 Stage.focus 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Stage_showMenu, "請改用 Stage.showDefaultContextMenu 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getStyleNames, "請改用 StyleSheet.styleNames 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_onData, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_load, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_StyleSheet_loaded, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesLoaded, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_StyleSheet_getBytesTotal, "請使用 URLLoader 的實體來載入 StyleSheet 資料，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_getEnabled, "請改用 IME.enabled 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_setEnabled, "請改用 IME.enabled 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_getInstance, "請改用 IME.instance 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_getConversionMode, "請改用 IME.conversionMode 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_setConversionMode, "請改用 IME.conversionMode 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_System_getAvmplusVersion, "請改用 System.vmVersion 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_SWFVersion, "請改用 SWFLoaderInfo.swfVersion 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SWFLoaderInfo_ASVersion, "請改用 SWFLoaderInfo.actionScriptVersion 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getNewTextFormat, "請改用 TextField.defaultTextFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_setNewTextFormat, "請改用 TextField.defaultTextFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getDepth, "請改用 DisplayObjectContainer.parent.getChildIndex。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_swapDepths, "請改用 DisplayObjectContainer.parent.setChildIndex。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getInstanceAtDepth, "請改用 DisplayObjectContainer.getChildAt。如需詳細資訊，請查看由 MovieClip 擴充的 DisplayObjectContainer 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getNextHighestDepth, "請改用 DisplayObjectContainer.numChildren。DisplayObjectContainer.addChild 永遠會加入新子系來索引 DisplayObjectContainer.numChildren。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_replaceSel, "請改用 TextField.replaceSelectedText() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getLineIndexOfCharacter, "請改用 TextField.getLineIndexOfChar() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionBeginIndex, "請改用 TextField.selectionBeginIndex 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getSelectionEndIndex, "請改用 TextField.selectionEndIndex 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getCaretIndex, "請改用 TextField.caretIndex 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextField_getFontList, "請改用 Font.enumerateFonts() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_maxscroll, "請改用 TextField.maxScrollV 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_hscroll, "請改用 TextField.scrollH 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_maxhscroll, "請改用 TextField.maxScrollH 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_newTextFormat, "請改用 TextField.defaultTextFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextFormat_getTextExtent, "請建立暫時的 TextField，並改用 TextField.getLineMetrics。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextSnapshot_getCount, "請改用 TextSnapshot.charCount 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLLoader_navigate, "請改用 flash.net 套件中的 navigateToURL() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_URLLoader_send, "請改用 flash.net 套件中的 sendToURL() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLLoader_binary, "請改用 URLLoader.dataFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_URLStream_available, "請改用 URLStream.bytesAvailable 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLRequest_digest, "不再支援這項屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLRequest_importToSandbox, "請改用 URLRequest.applicationDomain 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_URLRequest_addRequestHeader, "若要加入請求標頭，請將 URLRequest.requestHeaders 屬性設定成 URLRequestHeader 物件的陣列。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_load, "請使用 URLLoader 的實體來載入 XML 檔案，然後將 URLLoaders 資料傳遞到 XMLDocuments 建構函式。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_send, "請改用 flash.net 套件中的 sendToURL() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_sendAndLoad, "將 URLRequest 物件設定成 postData 屬性，然後配合 URLLoader 物件一起使用來載入 XML 檔案。將 URLLoaders 資料載入到 XMLDocuments 建構函式。如需詳細資訊，請查看 URLLoader 和 URLRequest 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_onData, "請使用 URLLoader 的實體來載入 XML 檔案，然後將 URLLoaders 資料傳遞到 XMLDocuments 建構函式。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_addRequestHeader, "若要加入請求標頭，請將 URLRequest.requestHeaders 屬性設定成 URLRequestHeader 物件的陣列。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesLoaded, "如需詳細資訊，請查看 URLLoader.bytesLoaded 和 URLLoader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLDocument_getBytesTotal, "如需詳細資訊，請查看 URLLoader.bytesTotal 和 URLLoader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_XMLDocument_loaded, "請使用 URLLoader 的實體來載入 XML 檔案，然後將載入器資料傳遞到 StyleSheet.parseCSS 方法。如需詳細資訊，請查看 URLLoader 和 EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_XMLDocument_contentType, "請改用 URLRequest.contentType 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_XMLDocument_status, "請檢查由 XMLDocument 建構函式或是 XMLDocument.parseXML 方法擲出的可能例外狀況。如需詳細資訊，請查看 XMLDocument。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Button, "Button 類別已經更名為 SimpleButton。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Container, "Container 類別已經更名為 DisplayObjectContainer。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Image, "Image 類別已經更名為 BitmapData。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ImageFilter, "ImageFilter 類別已經更名為 BitmapFilter。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ImageSprite, "ImageSprite 類別已經更名為 Bitmap。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ImageLoaderInfo, "ImageLoaderInfo 類別已經更名為 BitmapLoaderInfo。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_ImeEvent, "ImeEvent 類別已經更名為 IMEEvent。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Key, "Key 類別已經更名為 Keyboard。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LineMetrics, "LineMetrics 類別已經更名為 TextLineMetrics。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LoadVars, "如需詳細資訊，請查看 URLVariables 類別、URLRequest.urlVariables 和 URLRequest.postData 等屬性，以及 URLLoader.dataFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MenuEvent, "MenuEvent 類別已經更名為 ContextMenuEvent。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SystemCapabilities, "SystemCapabilities 類別已經更名為 Capabilities。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextExtents, "請改用 TextField.getLineMetrics 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Button, "Button 類別已經更名為 SimpleButton。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Container, "Container 類別已經更名為 DisplayObjectContainer。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Image, "Image 類別已經更名為 BitmapData。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ImageFilter, "ImageFilter 類別已經更名為 BitmapFilter。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ImageSprite, "ImageSprite 類別已經更名為 Bitmap。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ImageLoaderInfo, "ImageLoaderInfo 類別已經更名為 BitmapLoaderInfo。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ImeEvent, "ImeEvent 類別已經更名為 IMEEvent。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Key, "Key 類別已經更名為 Keyboard。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_LineMetrics, "LineMetrics 類別已經更名為 TextLineMetrics。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_LoadVars, "如需詳細資訊，請查看 URLVariables 類別、URLRequest.urlVariables 和 URLRequest.postData 等屬性，以及 URLLoader.dataFormat 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MenuEvent, "MenuEvent 類別已經更名為 ContextMenuEvent。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_SystemCapabilities, "SystemCapabilities 類別已經更名為 Capabilities。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_TextExtents, "請改用 TextField.getLineMetrics 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Object___resolve , "如需詳細資訊，請查看提供相似功能之 Proxy 類別的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLUI_get, "請改用 XMLUI.getProperty 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_XMLUI_set, "請改用 XMLUI.setProperty 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_DisplayObject_accProps, "請改用 DisplayObject.accessibilityProperties 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_DisplayObject_setScalingGrid, "請改用 DisplayObject.scale9Grid 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Graphics_drawCircle, "請改用 Graphics.drawOval 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_NetConnection_isConnected, "請改用 NetConnection.connected 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Socket_isConnected, "請改用 Socket.connected 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_URLStream_isConnected, "請改用 URLStream.connected 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SyncEvent_list, "請改用 SyncEvent.changeList 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_scroll, "請改用 TextField.scrollV 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_TextField_bottomScroll, "請改用 TextField.bottomScrollV 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapData_RED_CHANNEL, "請改用 BitmapDataChannel.RED 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapData_GREEN_CHANNEL, "請改用 BitmapDataChannel.GREEN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapData_BLUE_CHANNEL, "請改用 BitmapDataChannel.BLUE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, "請改用 BitmapDataChannel.ALPHA 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_instanceof, "請改用 is 運算子。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_System_showSettings, "請改用 flash.system.Security.showSettings 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_System_useCodepage, "請改用 System.useCodePage 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_AsBroadcaster, "請改用 flash.events.EventDispatcher 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SimpleButton_Soundbuftime, "請改用 static 屬性 flash.media.SoundMixer.bufferTime。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_BitmapData_loadBitmap, "請改為建立點陣圖圖庫元件類別的新實體，例如，新的 myBitmapName()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_loadVariables, "如需詳細資訊，請查看 Loader.load()。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClipLoader, "MovieClipLoader 類別已經由 flash.display.Loader 類別所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClipLoader, "MovieClipLoader 類別已經由 flash.display.Loader 類別所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_IME_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_FULL, "請改用 flash.system.IMEConversionMode.ALPHANUMERIC_FULL 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_ALPHANUMERIC_HALF, "請改用 flash.system.IMEConversionMode.ALPHANUMERIC_HALF 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_CHINESE, "請改用 flash.system.IMEConversionMode.CHINESE 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_HIRAGANA, "請改用 flash.system.IMEConversionMode.JAPANESE_HIRAGANA 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, "請改用 flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, "請改用 flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_KOREAN, "請改用 flash.system.IMEConversionMode.KOREAN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_IME_UNKNOWN, "請改用 flash.system.IMEConversionMode.UNKNOWN 常數。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_FileReferenceList_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onCancel, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onCancel 事件處理常式。您必須使用 addEventListener ( cancel, onCancel)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Keyboard__listeners, "沒有直接取代。willTrigger() 方法可以用來判定是否有偵聽程式完成註冊。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onIMEComposition, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onIMEComposition 事件處理常式。您必須使用 addEventListener ( imeComposition, handlerName)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_SimpleButton__url, "如需詳細資訊，請查看 LoaderInfo.url 和 Loader 類別。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Date_getYear, "請改用 getFullYear() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Date_setYear, "請改用 setFullYear() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Date_getUTCYear, "請改用 getUTCFullYear() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Microphone_setRate, "請改用 rate 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Selection, "Selection 類別已經移除。如需詳細資訊，請查看需要其中選取範圍資訊之類別的 addEventListener 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Selection, "Selection 類別已經移除。如需詳細資訊，請查看需要其中選取範圍資訊之類別的 addEventListener 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Microphone_setGain, "請改用 gain 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_getTransform, "顏色值可以直接使用 ColorTransform 類別建構函式或屬性加以指定。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ColorTransform_setTransform, "顏色值可以直接使用 ColorTransform 類別建構函式或屬性加以指定。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_MovieClip_focusEnabled, "請參閱 flash.display.InteractiveObject 類別中與焦點相關屬性的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_beginBitmapFill, "請參閱 flash.display.Graphics.beginBitmapFill 方法的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_hitTest, "請參閱 flash.display.DisplayObject.hitTestObject() 方法的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_MovieClip_attachBitmap, "請參閱 addChild() 方法的說明。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_loadSound, "請改用 load() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getVolume, "請使用 flash.media.SoundChannel.leftPeak 和 flash.media.SoundChannel.rightPeak 來監視和控制聲道的振幅。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getTransform, "請改用 soundTransform 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getPan, "請改用 SoundTransform.pan 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_setPan, "請改用 SoundTransform.pan 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesLoaded, "請改用 bytesLoaded 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Sound_getBytesTotal, "請改用 bytesTotal 屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_SlowTextFieldAddition, "不當地在文字欄位上使用 +=。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_SlowTextFieldAddition_specific, "使用 += is 將文字附加到文字欄位的速度，會比使用 TextField.appendText() 方法的速度慢很多。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_UnlikelyFunctionValue, "可能遺失括號。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_UnlikelyFunctionValue_specific, "需要 %s 類型的位置使用了函數值。可能是因為這個函數參考後面的括號 () 已遺失。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_InstanceOfChanges, "使用 instanceof 運算子。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_InstanceOfChanges_specific, "不再支援 instanceof 運算子，請改用 is 運算子。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowDomain, "allowDomain() 事件處理常式現在是標準的方法，而非事件回呼。如需詳細資訊，請查看新的 LocalConnection.allowDomain 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_LocalConnection_allowInsecureDomain, "allowInsecureDomain() 事件處理常式現在是標準的方法，而非事件回呼。如需詳細資訊，請查看新的 LocalConnection.allowInsecureDomain 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_call, "不再支援 global call() 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_Color, "Color 類別已經移除。請使用 flash.geom.ColorTransform 類別進行相等的功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Color, "Color 類別已經移除。請使用 flash.geom.ColorTransform 類別進行相等的功能。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_System_exactSettings, "ActionScript 3.0 SWF 檔案永遠會使用完全符合網域對應規則。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp_capabilities, "capabilities 類別已經更名為 Capabilities。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_capabilities, "capabilities 類別已經更名為 Capabilities。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_FileReference_addListener, "如需詳細資訊，請查看 addEventListener ( eventName, listener, useCapture, priority )。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_FileReference_removeListener, "如需詳細資訊，請查看 removeEventListener ( eventName, listener, useCapture)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onComplete, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onComplete 事件處理常式。您必須使用 addEventListener ('complete', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onHTTPError, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onHTTPError 事件處理常式。您必須使用 addEventListener ('httpError', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onIOError, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onIOError 事件處理常式。您必須使用 addEventListener ('ioError', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onProgress, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onProgress 事件處理常式。您必須使用 addEventListener ( 'progress', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onSecurityError, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onSecurityError 事件處理常式。您必須使用 addEventListener ('securityError', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Event_onOpen, "在 ActionScript 3.0 中，Flash Player 不會在執行時期自動觸發 onOpen 事件處理常式。您必須使用 addEventListener ('open', callback_handler)，先註冊這個事件的處理常式。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_XML_ClassHasChanged, "可能使用 ActionScript 2.0 XML 類別。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_XML_ClassHasChanged_specific, "移轉問題：ActionScript 2.0 XML 類別已經更名為 XMLDocument。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadDateCast, "Date 轉換操作無效。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadDateCast_specific, "Date(x) 的行為模式與新的 Date().toString() 相同。若要將值轉換成 Date 類型，請使用 \"x as Date\" 而不要使用 Date(x)。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ImportHidesClass, "依據相同於目前類別的名稱來匯入套件，將會造成在此範圍中隱藏類別識別名稱。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_ImportHidesClass_specific, "依據相同於目前類別的名稱來匯入套件，將會造成在此範圍中隱藏類別識別名稱。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DuplicateArgumentNames, "一個以上具有相同名稱的引數。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DuplicateArgumentNames_specific, "指定了一個以上名為 '%s' 的引數。該引數的參考永遠會解析回最後一個。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_Rectangle_containsRectangle, "請改用 Rectangle.containsRect 方法。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_eval, "這項功能已經移除。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_getVersion, "這項功能已經由 flash.system.Capabilities.version 屬性所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedMeth_ifFrameLoaded, "這項功能已經由 flash.display.MovieClip.framesLoaded 屬性所取代。" );
        warningConstantsTW[index++] = new AscWarning(kUnsupportedProp__global, "_global 屬性已經移除。如需相等的功能，請使用類別中的靜態成員。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadBoolAssignment, "需要 Boolean 值的位置使用了非 Boolean 值。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadBoolAssignment_specific, "需要 Boolean 值的位置使用了 %s。運算式會強制轉型成 Boolean 值。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadES3TypeProp, "不明的屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadES3TypeProp_specific, "%s 不是動態類別 %s 的辨識屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadES3TypeMethod, "不明的方法。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_BadES3TypeMethodProp_specific, "%s 不是動態類別 %s 的辨識方法。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DuplicateVariableDef, "變數定義重複。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DuplicateVariableDef_specific, "變數定義重複。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName, "定義名稱相同於匯入的套件名稱。名稱的不合格參考將解析回套件，而不是解析回定義。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DefinitionShadowedByPackageName_specific, "定義名稱相同於匯入的套件名稱。名稱的不合格參考將解析回套件，而不是解析回定義。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeleteOfFixedProperty, "可能嘗試刪除固定的屬性。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeleteOfFixedProperty_specific, "無法刪除已宣告的屬性 %s。若要釋放相關聯的記憶體，請將其值設定為 null。" );
        warningConstantsTW[index++] = new AscWarning(kWarning_Deprecated, "Use of deprecated definition." );
        warningConstantsTW[index++] = new AscWarning(kWarning_Deprecated_specific, "'%s' has been deprecated." );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedMessage, "Use of deprecated definition." );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedMessage_specific, "%s" );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedUseReplacement, "Use of deprecated definition." );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedUseReplacement_specific, "'%s' has been deprecated.  Please use '%s'." );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedSince, "Use of deprecated definition." );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedSince_specific, "'%s' has been deprecated since %s.  Please use '%s'." );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement, "Use of deprecated definition." );
        warningConstantsTW[index++] = new AscWarning(kWarning_DeprecatedSinceNoReplacement_specific, "'%s' has been deprecated since %s." );
   };

    static final AscWarningInstance[] unsupportedProperties =
    {
        new AscWarningInstance(kUnsupportedProp_version, kVoidType, "$version", false ),
        new AscWarningInstance(kUnsupportedProp_Focusrect, kVoidType, "_focusrect", false ),
        new AscWarningInstance(kUnsupportedProp__global, kVoidType, "_global", false ),
        new AscWarningInstance(kUnsupportedProp_Highquality, kVoidType, "_highquality", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObj_HighQuality, kDisplayObjectType, "_highquality", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObj_Quality, kDisplayObjectType, "_quality", false ),
        new AscWarningInstance(kUnsupportedProp_Quality, kVoidType, "_quality", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_Soundbuftime, kTextFieldType, "_soundbuftime", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_Target, kTextFieldType, "_target", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_Url, kTextFieldType, "_url", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_Variable, kTextFieldType, "variable", false ),
        new AscWarningInstance(kUnsupportedProp_NewLine, kVoidType, "newline", false ),
        new AscWarningInstance(kUnsupportedProp_MaxScroll, kVoidType, "maxscroll", false ),
        new AscWarningInstance(kUnsupportedProp_Level, kVoidType, "_level", false ),
        new AscWarningInstance(kUnsupportedProp_Parent, kVoidType, "_parent", false ),
        new AscWarningInstance(kUnsupportedProp_Root, kVoidType, "_root", false ),
        new AscWarningInstance(kUnsupportedProp_Arguments_Caller, kArrayType, "caller", false ),
        new AscWarningInstance(kUnsupportedProp_Button_Target, kDisplayObjectType, "_target", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_Parent, kDisplayObjectType, "_parent", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_target, kDisplayObjectType, "_target", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_hitArea, kDisplayObjectType, "hitArea", false ),
        new AscWarningInstance(kUnsupportedProp_Scroll, kVoidType, "scroll", false ),
        new AscWarningInstance(kUnsupportedProp_TargetPath, kVoidType, "targetPath", false ),
        new AscWarningInstance(kUnsupportedProp_Video_Height, kVideoType, "height", false ),
        new AscWarningInstance(kUnsupportedProp_Video_Width, kVideoType, "width", false ),
        new AscWarningInstance(kUnsupportedProp__Proto__, kObjectType, "__proto__", false ),
        new AscWarningInstance(kUnsupportedProp_Stage, kVoidType, "Stage", false ),
        new AscWarningInstance(kUnsupportedProp__remoteClass, kObjectType, "_remoteClass", false ),
        new AscWarningInstance(kUnsupportedProp_ActivityEvent_ACTIVITY_TYPE, kActivityEventType, "ACTIVITY_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Camera_currentFps, kCameraType, "currentFps", false ),
        new AscWarningInstance(kUnsupportedProp_ContextMenu_forward_back, kContextMenuType, "forward_back", false ),
        new AscWarningInstance(kUnsupportedProp_DataEvent_DATA_TYPE, kDataEventType, "DATA_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_xscale, kDisplayObjectType, "xscale", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__xscale, kDisplayObjectType, "_xscale", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_yscale, kDisplayObjectType, "yscale", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__yscale, kDisplayObjectType, "_yscale", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_xmouse, kDisplayObjectType, "xmouse", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__xmouse, kDisplayObjectType, "_xmouse", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_ymouse, kDisplayObjectType, "ymouse", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__ymouse, kDisplayObjectType, "_ymouse", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_setRootClass, kDisplayObjectType, "setRootClass", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_mapSymbolToClass, kDisplayObjectType, "mapSymbolToClass", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__name, kDisplayObjectType, "_name", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__parent, kDisplayObjectType, "_parent", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__mask, kDisplayObjectType, "_mask", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__visible, kDisplayObjectType, "_visible", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__x, kDisplayObjectType, "_x", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__y, kDisplayObjectType, "_y", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__rotation, kDisplayObjectType, "_rotation", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__alpha, kDisplayObjectType, "_alpha", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__width, kDisplayObjectType, "_width", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject__height, kDisplayObjectType, "_height", false ),
        new AscWarningInstance(kUnsupportedProp_ErrorEvent_ERROR_TYPE, kErrorEventType, "ERROR_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_ACTIVATE_TYPE, kEventType, "ACTIVATE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_ADDED_TYPE, kEventType, "ADDED_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_CANCEL_TYPE, kEventType, "CANCEL_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_CHANGE_TYPE, kEventType, "CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_CLOSE_TYPE, kEventType, "CLOSE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_COMPLETE_TYPE, kEventType, "COMPLETE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_CONNECT_TYPE, kEventType, "CONNECT_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_DEACTIVATE_TYPE, kEventType, "DEACTIVATE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_ENTER_FRAME_TYPE, kEventType, "ENTER_FRAME_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_ID3_TYPE, kEventType, "ID3_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_INIT_TYPE, kEventType, "INIT_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_MOUSE_LEAVE_TYPE, kEventType, "MOUSE_LEAVE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_OPEN_TYPE, kEventType, "OPEN_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_REMOVED_TYPE, kEventType, "REMOVED_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_RENDER_TYPE, kEventType, "RENDER_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_RESIZE_TYPE, kEventType, "RESIZE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_SCROLL_TYPE, kEventType, "SCROLL_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_SELECT_TYPE, kEventType, "SELECT_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_SOUND_COMPLETE_TYPE, kEventType, "SOUND_COMPLETE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_TAB_CHILDREN_CHANGE_TYPE, kEventType, "TAB_CHILDREN_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_TAB_ENABLED_CHANGE_TYPE, kEventType, "TAB_ENABLED_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_TAB_INDEX_CHANGE_TYPE, kEventType, "TAB_INDEX_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_Event_UNLOAD_TYPE, kEventType, "UNLOAD_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_FocusEvent_FOCUS_IN_TYPE, kFocusEventType, "FOCUS_IN_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_FocusEvent_FOCUS_OUT_TYPE, kFocusEventType, "FOCUS_OUT_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_FocusEvent_KEY_FOCUS_CHANGE_TYPE, kFocusEventType, "KEY_FOCUS_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_FocusEvent_MOUSE_FOCUS_CHANGE_TYPE, kFocusEventType, "MOUSE_FOCUS_CHANGE_TYPE", true ),
        new AscWarningInstance(kUnsupportedProp_BitmapFilter_XYZ_QUALITY, kBitmapFilterType, "XYZ_QUALITY", false ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_PGDN, kKeyboardType, "PGDN", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_PGUP, kKeyboardType, "PGUP", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_DELETEKEY, kKeyboardType, "DELETEKEY", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_CAPSLOCK, kKeyboardType, "CAPSLOCK", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard_NUMPAD, kKeyboardType, "NUMPAD", true ),
        new AscWarningInstance(kUnsupportedProp_InteractiveObject__focusrect, kInteractiveObjectType, "_focusrect", false ),
        new AscWarningInstance(kUnsupportedProp_InteractiveObject_menu, kInteractiveObjectType, "menu", false ),
        new AscWarningInstance(kUnsupportedProp_KeyboardEvent_ascii, kKeyboardEventType, "ascii", false ),
        new AscWarningInstance(kUnsupportedProp_KeyboardEvent_code, kKeyboardEventType, "code", false ),
        new AscWarningInstance(kUnsupportedProp_Loader_loaderInfo, kLoaderType, "loaderInfo", false ),
        new AscWarningInstance(kUnsupportedProp_Loader_preload, kLoaderType, "preload", false ),
        new AscWarningInstance(kUnsupportedProp_Loader_loadCached, kLoaderType, "loadCached", false ),
        new AscWarningInstance(kUnsupportedProp_LoaderInfo_loaderUrl, kLoaderInfoType, "loaderUrl", false ),
        new AscWarningInstance(kUnsupportedProp_ContextMenuEvent_menuOwner, kContextMenuEventType, "menuOwner", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_url, kMovieClipType, "url", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__url, kMovieClipType, "_url", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__currentframe, kMovieClipType, "_currentframe", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__framesloaded, kMovieClipType, "_framesloaded", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__totalframes, kMovieClipType, "_totalframes", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_lockroot, kMovieClipType, "lockroot", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__lockroot, kMovieClipType, "_lockroot", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip__soundbuftime, kMovieClipType, "_soundbuftime", false ),
        new AscWarningInstance(kUnsupportedProp_NetStream_currentFps, kNetStreamType, "currentFps", false ),
        new AscWarningInstance(kUnsupportedProp_NetStream_videocodec, kNetStreamType, "videocodec", false ),
        new AscWarningInstance(kUnsupportedProp_NetStream_audiocodec, kNetStreamType, "audiocodec", false ),
        new AscWarningInstance(kUnsupportedProp_Proxy_delDescendants, kProxyType, "delDescendants", false ),
        new AscWarningInstance(kUnsupportedProp_ProgressEvent_current, kProgressEventType, "current", false ),
        new AscWarningInstance(kUnsupportedProp_ProgressEvent_total, kProgressEventType, "total", false ),
        new AscWarningInstance(kUnsupportedProp_Sprite__droptarget, kSpriteType, "_droptarget", false ),
        new AscWarningInstance(kUnsupportedProp_Stage_showMenu, kStageType, "showMenu", false ),
        new AscWarningInstance(kUnsupportedProp_StyleSheet_loaded, kStyleSheetType, "loaded", false ),
        new AscWarningInstance(kUnsupportedProp_System_getAvmplusVersion, kSystemType, "getAvmplusVersion", true ),
        new AscWarningInstance(kUnsupportedProp_SWFLoaderInfo_SWFVersion, kSWFLoaderInfoType, "SWFVersion", false ),
        new AscWarningInstance(kUnsupportedProp_SWFLoaderInfo_ASVersion, kSWFLoaderInfoType, "ASVersion", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_maxscroll, kTextFieldType, "maxscroll", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_hscroll, kTextFieldType, "hscroll", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_maxhscroll, kTextFieldType, "maxhscroll", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_newTextFormat, kTextFieldType, "newTextFormat", false ),
        new AscWarningInstance(kUnsupportedProp_URLLoader_navigate, kURLLoaderType, "navigate", false ),
        new AscWarningInstance(kUnsupportedProp_URLLoader_binary, kURLLoaderType, "binary", false ),
        new AscWarningInstance(kUnsupportedProp_URLRequest_digest, kURLRequestType, "digest", false ),
        new AscWarningInstance(kUnsupportedProp_URLRequest_importToSandbox, kURLRequestType, "importToSandbox", false ),
        new AscWarningInstance(kUnsupportedProp_XMLDocument_loaded, kXMLDocumentType, "loaded", false ),
        new AscWarningInstance(kUnsupportedProp_XMLDocument_contentType, kXMLDocumentType, "contentType", false ),
        new AscWarningInstance(kUnsupportedProp_XMLDocument_status, kXMLDocumentType, "status", false ),
        new AscWarningInstance(kUnsupportedProp_Button, kVoidType, "Button", false ),
        new AscWarningInstance(kUnsupportedProp_Container, kVoidType, "Container", false ),
        new AscWarningInstance(kUnsupportedProp_Image, kVoidType, "Image", false ),
        new AscWarningInstance(kUnsupportedProp_ImageFilter, kVoidType, "ImageFilter", false ),
        new AscWarningInstance(kUnsupportedProp_ImageSprite, kVoidType, "ImageSprite", false ),
        new AscWarningInstance(kUnsupportedProp_ImageLoaderInfo, kVoidType, "ImageLoaderInfo", false ),
        new AscWarningInstance(kUnsupportedProp_ImeEvent, kVoidType, "ImeEvent", false ),
        new AscWarningInstance(kUnsupportedProp_Key, kVoidType, "Key", false ),
        new AscWarningInstance(kUnsupportedProp_LineMetrics, kVoidType, "LineMetrics", false ),
        new AscWarningInstance(kUnsupportedProp_LoadVars, kVoidType, "LoadVars", false ),
        new AscWarningInstance(kUnsupportedProp_MenuEvent, kVoidType, "MenuEvent", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClipLoader, kVoidType, "MovieClipLoader", false ),
        new AscWarningInstance(kUnsupportedProp_SystemCapabilities, kVoidType, "SystemCapabilities", false ),
        new AscWarningInstance(kUnsupportedProp_SystemCapabilities, kVoidType, "SystemCapabilities", false ),
        new AscWarningInstance(kUnsupportedProp_TextExtents, kVoidType, "TextExtents", false ),
        new AscWarningInstance(kUnsupportedProp_TextExtents, kVoidType, "TextExtents", false ),
        new AscWarningInstance(kUnsupportedProp_DisplayObject_accProps, kDisplayObjectType, "accProps", false ),
        new AscWarningInstance(kUnsupportedProp_NetConnection_isConnected, kNetConnectionType, "isConnected", false ),
        new AscWarningInstance(kUnsupportedProp_Socket_isConnected, kSocketType, "isConnected", false ),
        new AscWarningInstance(kUnsupportedProp_URLStream_isConnected, kURLStreamType, "isConnected", false ),
        new AscWarningInstance(kUnsupportedProp_SyncEvent_list, kSyncEventType, "list", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_scroll, kTextFieldType, "scroll", false ),
        new AscWarningInstance(kUnsupportedProp_TextField_bottomScroll, kTextFieldType, "bottomScroll", false ),
        new AscWarningInstance(kUnsupportedProp_BitmapData_RED_CHANNEL, kBitmapDataType, "RED_CHANNEL", false ),
        new AscWarningInstance(kUnsupportedProp_BitmapData_GREEN_CHANNEL, kBitmapDataType, "GREEN_CHANNEL", false ),
        new AscWarningInstance(kUnsupportedProp_BitmapData_BLUE_CHANNEL, kBitmapDataType, "BLUE_CHANNEL", false ),
        new AscWarningInstance(kUnsupportedProp_BitmapData_ALPHA_CHANNEL, kBitmapDataType, "ALPHA_CHANNEL", false ),
        new AscWarningInstance(kUnsupportedProp_System_useCodepage, kSystemType, "useCodepage", true ),
        new AscWarningInstance(kUnsupportedProp_SimpleButton_Soundbuftime, kSimpleButtonType, "_soundbuftime", false ),
        new AscWarningInstance(kUnsupportedProp_AsBroadcaster, kVoidType, "AsBroadcaster", false ),
        new AscWarningInstance(kUnsupportedProp_IME_ALPHANUMERIC_FULL, kIMEType, "ALPHANUMERIC_FULL", true ),
        new AscWarningInstance(kUnsupportedProp_IME_ALPHANUMERIC_HALF, kIMEType, "ALPHANUMERIC_HALF", true ),
        new AscWarningInstance(kUnsupportedProp_IME_CHINESE, kIMEType, "CHINESE", true ),
        new AscWarningInstance(kUnsupportedProp_IME_JAPANESE_HIRAGANA, kIMEType, "JAPANESE_HIRAGANA", true ),
        new AscWarningInstance(kUnsupportedProp_IME_JAPANESE_KATAKANA_FULL, kIMEType, "JAPANESE_KATAKANA_FULL", true ),
        new AscWarningInstance(kUnsupportedProp_IME_JAPANESE_KATAKANA_HALF, kIMEType, "JAPANESE_KATAKANA_HALF", true ),
        new AscWarningInstance(kUnsupportedProp_IME_KOREAN, kIMEType, "KOREAN", true ),
        new AscWarningInstance(kUnsupportedProp_IME_UNKNOWN, kIMEType, "UNKNOWN", true ),
        new AscWarningInstance(kUnsupportedProp_Keyboard__listeners, kKeyboardType, "_listeners", false ),
        new AscWarningInstance(kUnsupportedProp_SimpleButton__url, kSimpleButtonType, "_url", false ),
        new AscWarningInstance(kUnsupportedProp_Selection, kVoidType, "Selection", false ),
        new AscWarningInstance(kUnsupportedProp_MovieClip_focusEnabled, kDisplayObjectType, "focusEnabled", false ),
        new AscWarningInstance(kUnsupportedProp_LocalConnection_allowDomain, kLocalConnectionType, "allowDomain", false ),
        new AscWarningInstance(kUnsupportedProp_LocalConnection_allowInsecureDomain, kLocalConnectionType, "allowInsecureDomain", false ),
        new AscWarningInstance(kUnsupportedProp_Color, kVoidType, "Color", false ),
        new AscWarningInstance(kUnsupportedProp_System_exactSettings, kSystemType, "exactSettings", false ),
        new AscWarningInstance(kUnsupportedProp_capabilities, kVoidType, "capabilities", false ),
        new AscWarningInstance(kUnsupportedProp_Object___resolve, kObjectType, "__resolve", false ),
        };

    static final AscWarningInstance[] unsupportedMethods =
    {
        new AscWarningInstance(kUnsupportedMeth_instanceof, kVoidType, "instanceof", false ),
        new AscWarningInstance(kUnsupportedMeth_DisplayObject_setScalingGrid, kDisplayObjectType, "setScalingGrid", false ),
        new AscWarningInstance(kUnsupportedMeth_Graphics_drawCircle, kGraphicsType, "drawCircle", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLUI_get, kXMLUIType, "get", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLUI_set, kXMLUIType, "set", false ),
        new AscWarningInstance(kUnsupportedMeth_hasChildNodes, kXMLNodeType, "hasChildNodes", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLEvent, kVoidType, "XMLEvent", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDoc, kVoidType, "XMLDoc", false ),
        new AscWarningInstance(kUnsupportedMeth_random, kVoidType, "random", false ),
        new AscWarningInstance(kUnsupportedMeth_chr, kVoidType, "chr", false ),
        new AscWarningInstance(kUnsupportedMeth_mbchr, kVoidType, "mbchr", false ),
        new AscWarningInstance(kUnsupportedMeth_ord, kVoidType, "ord", false ),
        new AscWarningInstance(kUnsupportedMeth_mbord, kVoidType, "mbord", false ),
        new AscWarningInstance(kUnsupportedMeth_substring, kVoidType, "substring", false ),
        new AscWarningInstance(kUnsupportedMeth_mbsubstring, kVoidType, "mbsubstring", false ),
        new AscWarningInstance(kUnsupportedMeth_length, kVoidType, "length", false ),
        new AscWarningInstance(kUnsupportedMeth_mblength, kVoidType, "mblength", false ),
        new AscWarningInstance(kUnsupportedMeth_ASNative, kVoidType, "ASnative", false ),
        new AscWarningInstance(kUnsupportedMeth_addProperty, kObjectType, "addProperty", false ),
        new AscWarningInstance(kUnsupportedMeth_getProperty, kVoidType, "getProperty", false ),
        new AscWarningInstance(kUnsupportedMeth_setProperty, kVoidType, "setProperty", false ),
        new AscWarningInstance(kUnsupportedMeth_asfunction, kVoidType, "asfunction", false ),
        new AscWarningInstance(kUnsupportedMeth_clearInterval, kVoidType, "clearInterval", false ),
        new AscWarningInstance(kUnsupportedMeth_duplicateMovieClip, kVoidType, "duplicateMovieClip", false ),
        new AscWarningInstance(kUnsupportedMeth_fscommand, kVoidType, "fscommand", false ),
        new AscWarningInstance(kUnsupportedMeth_getURL, kVoidType, "getURL", false ),
        new AscWarningInstance(kUnsupportedMeth_gotoAndPlay, kVoidType, "gotoAndPlay", false ),
        new AscWarningInstance(kUnsupportedMeth_gotoAndStop, kVoidType, "gotoAndStop", false ),
        new AscWarningInstance(kUnsupportedMeth_play, kVoidType, "play", false ),
        new AscWarningInstance(kUnsupportedMeth_print, kVoidType, "print", false ),
        new AscWarningInstance(kUnsupportedMeth_printAsBitmap, kVoidType, "printAsBitmap", false ),
        new AscWarningInstance(kUnsupportedMeth_printAsBitmapNum, kVoidType, "printAsBitmapNum", false ),
        new AscWarningInstance(kUnsupportedMeth_printNum, kVoidType, "printNum", false ),
        new AscWarningInstance(kUnsupportedMeth_removeMovieClip, kVoidType, "removeMovieClip", false ),
        new AscWarningInstance(kUnsupportedMeth_setInterval, kVoidType, "setInterval", false ),
        new AscWarningInstance(kUnsupportedMeth_nextFrame, kVoidType, "nextFrame", false ),
        new AscWarningInstance(kUnsupportedMeth_startDrag, kVoidType, "startDrag", false ),
        new AscWarningInstance(kUnsupportedMeth_stop, kVoidType, "stop", false ),
        new AscWarningInstance(kUnsupportedMeth_stopAllSounds, kVoidType, "stopAllSounds", false ),
        new AscWarningInstance(kUnsupportedMeth_stopDrag, kVoidType, "stopDrag", false ),
        new AscWarningInstance(kUnsupportedMeth_tellTarget, kVoidType, "tellTarget", false ),
        new AscWarningInstance(kUnsupportedMeth_toggleHighQuality, kVoidType, "toggleHighQuality", false ),
        new AscWarningInstance(kUnsupportedMeth_unloadMovie, kVoidType, "unloadMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_unloadMovieNum, kVoidType, "unloadMovieNum", false ),
        new AscWarningInstance(kUnsupportedMeth_updateAfterEvent, kVoidType, "updateAfterEvent", false ),
        new AscWarningInstance(kUnsupportedMeth_Video_attachVideo, kVideoType, "attachVideo", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_StyleSheet_load, kStyleSheetType, "load", false ),
        new AscWarningInstance(kUnsupportedMeth_Object_registerClass, kObjectType, "registerClass", false ),
        new AscWarningInstance(kUnsupportedMeth_Object_unwatch, kObjectType, "unwatch", false ),
        new AscWarningInstance(kUnsupportedMeth_Object_watch, kObjectType, "watch", false ),
        new AscWarningInstance(kUnsupportedMeth_loadMovie, kVoidType, "loadMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_loadMovieNum, kVoidType, "loadMovieNum", false ),
        new AscWarningInstance(kUnsupportedMeth_loadVariables, kVoidType, "loadVariables", false ),
        new AscWarningInstance(kUnsupportedMeth_loadVariablesNum, kVoidType, "loadVariablesNum", false ),
        new AscWarningInstance(kUnsupportedMeth_Stage_addListener, kStageType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Stage_removeListener, kStageType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_addListener, kTextFieldType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_removeListener, kTextFieldType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Mouse_addListener, kMouseType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Mouse_removeListener, kMouseType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_addListener, kKeyboardType, "addListener", true ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_removeListener, kKeyboardType, "removeListener", true ),
        new AscWarningInstance(kUnsupportedMeth_Sound_attachSound, kSoundType, "attachSound", false ),
        new AscWarningInstance(kUnsupportedMeth_Accessibility_isActive, kAccessibilityType, "isActive", false ),
        new AscWarningInstance(kUnsupportedMeth_SimpleButton_getDepth, kSimpleButtonType, "getDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_SimpleButton_swapDepths, kSimpleButtonType, "swapDepths", false ),
        new AscWarningInstance(kUnsupportedMeth_SimpleButton_getInstanceAtDepth, kSimpleButtonType, "getInstanceAtDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_SimpleButton_getNextHighestDepth, kSimpleButtonType, "getNextHighestDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_ByteArray_available, kByteArrayType, "available", false ),
        new AscWarningInstance(kUnsupportedMeth_ByteArray_getFilePointer, kByteArrayType, "getFilePointer", false ),
        new AscWarningInstance(kUnsupportedMeth_ByteArray_seek, kByteArrayType, "seek", false ),
        new AscWarningInstance(kUnsupportedMeth_Camera_get, kCameraType, "get", false ),
        new AscWarningInstance(kUnsupportedMeth_Camera_setKeyFrameInterval, kCameraType, "setKeyFrameInterval", false ),
        new AscWarningInstance(kUnsupportedMeth_Camera_setLoopback, kCameraType, "setLoopback", false ),
        new AscWarningInstance(kUnsupportedMeth_ColorTransform_getRGB, kColorTransformType, "getRGB", false ),
        new AscWarningInstance(kUnsupportedMeth_ColorTransform_setRGB, kColorTransformType, "setRGB", false ),
        new AscWarningInstance(kUnsupportedMeth_DisplayObjectContainer_getTextSnapshot, kDisplayObjectContainerType, "getTextSnapshot", false ),
        new AscWarningInstance(kUnsupportedMeth_ContextMenu_copy, kContextMenuType, "copy", false ),
        new AscWarningInstance(kUnsupportedMeth_ContextMenuItem_copy, kContextMenuItemType, "copy", false ),
        new AscWarningInstance(kUnsupportedMeth_CustomActions_listActions, kCustomActionsType, "listActions", false ),
        new AscWarningInstance(kUnsupportedMeth_ExternalInterface_available, kExternalInterfaceType, "available", false ),
        new AscWarningInstance(kUnsupportedMeth_Event_isDefaultPrevented, kEventType, "isDefaultPrevented", false ),
        new AscWarningInstance(kUnsupportedMeth_Graphics_beginImageFill, kGraphicsType, "beginImageFill", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_getAscii, kKeyboardType, "getAscii", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_getCode, kKeyboardType, "getCode", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_isDown, kKeyboardType, "isDown", false ),
        new AscWarningInstance(kUnsupportedMeth_Keyboard_isToggled, kKeyboardType, "isToggled", false ),
        new AscWarningInstance(kUnsupportedMeth_LocalConnection_domain, kLocalConnectionType, "domain", false ),
        new AscWarningInstance(kUnsupportedMeth_Microphone_get, kMicrophoneType, "get", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_attachMovie, kMovieClipType, "attachMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_createEmptyMovieClip, kMovieClipType, "createEmptyMovieClip", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_createTextField, kMovieClipType, "createTextField", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_removeMovieClip, kMovieClipType, "removeMovieClip", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_loadMovie, kMovieClipType, "loadMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_unloadMovie, kMovieClipType, "unloadMovie", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_unloadMovieNum, kMovieClipType, "unloadMovieNum", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getDepth, kMovieClipType, "getDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_swapDepths, kMovieClipType, "swapDepths", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getInstanceAtDepth, kMovieClipType, "getInstanceAtDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getNextHighestDepth, kMovieClipType, "getNextHighestDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_attachAudio, kMovieClipType, "attachAudio", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getBytesLoaded, kMovieClipType, "getBytesLoaded", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getBytesTotal, kMovieClipType, "getBytesTotal", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getURL, kMovieClipType, "getURL", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_setMask, kMovieClipType, "setMask", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_getSWFVersion, kMovieClipType, "getSWFVersion", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_clear, kMovieClipType, "clear", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_beginFill, kMovieClipType, "beginFill", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_beginGradientFill, kMovieClipType, "beginGradientFill", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_lineGradientStyle, kMovieClipType, "lineGradientStyle", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_beginImageFill, kMovieClipType, "beginImageFill", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_lineStyle, kMovieClipType, "lineStyle", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_drawRect, kMovieClipType, "drawRect", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_drawRoundRect, kMovieClipType, "drawRoundRect", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_drawRoundRectComplex, kMovieClipType, "drawRoundRectComplex", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_drawCircle, kMovieClipType, "drawCircle", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_moveTo, kMovieClipType, "moveTo", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_lineTo, kMovieClipType, "lineTo", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_curveTo, kMovieClipType, "curveTo", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_endFill, kMovieClipType, "endFill", false ),
        new AscWarningInstance(kUnsupportedMeth_NetStream_setBufferTime, kNetStreamType, "setBufferTime", false ),
        new AscWarningInstance(kUnsupportedMeth_ProductManager_isIntalled, kProductManagerType, "isIntalled", false ),
        new AscWarningInstance(kUnsupportedMeth_ProductManager_installedVersion, kProductManagerType, "installedVersion", false ),
        new AscWarningInstance(kUnsupportedMeth_ProductManager_isRunning, kProductManagerType, "isRunning", false ),
        new AscWarningInstance(kUnsupportedMeth_Point_addTo, kPointType, "addTo", false ),
        new AscWarningInstance(kUnsupportedMeth_Profiler_heapdump, kVoidType, "heapdump", false ),
        new AscWarningInstance(kUnsupportedMeth_Rectangle_isEmpty, kRectangleType, "isEmpty", false ),
        new AscWarningInstance(kUnsupportedMeth_Rectangle_containsRectangle, kRectangleType, "containsRectangle", false ),
        new AscWarningInstance(kUnsupportedMeth_SoundTransform_setPan, kSoundTransformType, "setPan", false ),
        new AscWarningInstance(kUnsupportedMeth_Socket_available, kSocketType, "available", false ),
        new AscWarningInstance(kUnsupportedMeth_SharedObject_getSize, kSharedObjectType, "getSize", false ),
        new AscWarningInstance(kUnsupportedMeth_SharedObject_setFps, kSharedObjectType, "setFps", false ),
        new AscWarningInstance(kUnsupportedMeth_Sprite_getSWF, kSpriteType, "getSWF", false ),
        new AscWarningInstance(kUnsupportedMeth_Sprite_constructChild, kSpriteType, "constructChild", false ),
        new AscWarningInstance(kUnsupportedMeth_Stage_getFocus, kStageType, "getFocus", false ),
        new AscWarningInstance(kUnsupportedMeth_Stage_setFocus, kStageType, "setFocus", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_getStyleNames, kStyleSheetType, "getStyleNames", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_onData, kStyleSheetType, "onData", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_load, kStyleSheetType, "load", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_getBytesLoaded, kStyleSheetType, "getBytesLoaded", false ),
        new AscWarningInstance(kUnsupportedMeth_StyleSheet_getBytesTotal, kStyleSheetType, "getBytesTotal", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_addListener, kIMEType, "addListener", true ),
        new AscWarningInstance(kUnsupportedMeth_IME_removeListener, kIMEType, "removeListener", true ),
        new AscWarningInstance(kUnsupportedMeth_IME_getEnabled, kIMEType, "getEnabled", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_setEnabled, kIMEType, "setEnabled", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_getInstance, kIMEType, "getInstance", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_getConversionMode, kIMEType, "getConversionMode", false ),
        new AscWarningInstance(kUnsupportedMeth_IME_setConversionMode, kIMEType, "setConversionMode", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getNewTextFormat, kTextFieldType, "getNewTextFormat", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_setNewTextFormat, kTextFieldType, "setNewTextFormat", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getDepth, kTextFieldType, "getDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_swapDepths, kTextFieldType, "swapDepths", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getInstanceAtDepth, kTextFieldType, "getInstanceAtDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getNextHighestDepth, kTextFieldType, "getNextHighestDepth", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_replaceSel, kTextFieldType, "replaceSel", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getLineIndexOfCharacter, kTextFieldType, "getLineIndexOfCharacter", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getSelectionBeginIndex, kTextFieldType, "getSelectionBeginIndex", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getSelectionEndIndex, kTextFieldType, "getSelectionEndIndex", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getCaretIndex, kTextFieldType, "getCaretIndex", false ),
        new AscWarningInstance(kUnsupportedMeth_TextField_getFontList, kTextFieldType, "getFontList", false ),
        new AscWarningInstance(kUnsupportedMeth_TextSnapshot_getCount, kTextSnapshotType, "getCount", false ),
        new AscWarningInstance(kUnsupportedMeth_URLLoader_send, kURLLoaderType, "send", false ),
        new AscWarningInstance(kUnsupportedMeth_URLStream_available, kURLStreamType, "available", false ),
        new AscWarningInstance(kUnsupportedMeth_URLRequest_addRequestHeader, kURLRequestType, "addRequestHeader", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_load, kXMLDocumentType, "load", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_send, kXMLDocumentType, "send", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_sendAndLoad, kXMLDocumentType, "sendAndLoad", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_onData, kXMLDocumentType, "onData", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_addRequestHeader, kXMLDocumentType, "addRequestHeader", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_getBytesLoaded, kXMLDocumentType, "getBytesLoaded", false ),
        new AscWarningInstance(kUnsupportedMeth_XMLDocument_getBytesTotal, kXMLDocumentType, "getBytesTotal", false ),
        new AscWarningInstance(kUnsupportedMeth_Button, kVoidType, "Button", false ),
        new AscWarningInstance(kUnsupportedMeth_Container, kVoidType, "Container", false ),
        new AscWarningInstance(kUnsupportedMeth_Image, kVoidType, "Image", false ),
        new AscWarningInstance(kUnsupportedMeth_ImageFilter, kVoidType, "ImageFilter", false ),
        new AscWarningInstance(kUnsupportedMeth_ImageSprite, kVoidType, "ImageSprite", false ),
        new AscWarningInstance(kUnsupportedMeth_ImageLoaderInfo, kVoidType, "ImageLoaderInfo", false ),
        new AscWarningInstance(kUnsupportedMeth_ImeEvent, kVoidType, "ImeEvent", false ),
        new AscWarningInstance(kUnsupportedMeth_Key, kVoidType, "Key", false ),
        new AscWarningInstance(kUnsupportedMeth_LineMetrics, kVoidType, "LineMetrics", false ),
        new AscWarningInstance(kUnsupportedMeth_LoadVars, kVoidType, "LoadVars", false ),
        new AscWarningInstance(kUnsupportedMeth_MenuEvent, kVoidType, "MenuEvent", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClipLoader, kVoidType, "MovieClipLoader", false ),
        new AscWarningInstance(kUnsupportedMeth_SystemCapabilities, kVoidType, "SystemCapabilities", false ),
        new AscWarningInstance(kUnsupportedMeth_SystemCapabilities, kVoidType, "SystemCapabilities", false ),
        new AscWarningInstance(kUnsupportedMeth_TextExtents, kVoidType, "TextExtents", false ),
        new AscWarningInstance(kUnsupportedMeth_System_showSettings, kSystemType, "showSettings", true ),
        new AscWarningInstance(kUnsupportedMeth_BitmapData_loadBitmap, kBitmapDataType, "loadBitmap", true ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_loadVariables, kMovieClipType, "loadVariables", false ),
        new AscWarningInstance(kUnsupportedMeth_FileReferenceList_addListener, kFileReferenceListType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_FileReferenceList_removeListener, kFileReferenceListType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_Date_getYear, kDateType, "getYear", false ),
        new AscWarningInstance(kUnsupportedMeth_Date_setYear, kDateType, "setYear", false ),
        new AscWarningInstance(kUnsupportedMeth_Date_getUTCYear, kDateType, "getUTCYear", false ),
        new AscWarningInstance(kUnsupportedMeth_Microphone_setGain, kMicrophoneType, "setGain", false ),
        new AscWarningInstance(kUnsupportedMeth_Microphone_setRate, kMicrophoneType, "setRate", false ),
        new AscWarningInstance(kUnsupportedMeth_Selection, kVoidType, "Selection", false ),
        new AscWarningInstance(kUnsupportedMeth_ColorTransform_getTransform, kColorTransformType, "getTransform", false ),
        new AscWarningInstance(kUnsupportedMeth_ColorTransform_setTransform, kColorTransformType, "setTransform", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_loadSound, kSoundType, "loadSound", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getVolume, kSoundType, "getVolume", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getTransform, kSoundType, "getTransform", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getPan, kSoundType, "getPan", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_setPan, kSoundType, "setPan", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_beginBitmapFill, kDisplayObjectType, "beginBitmapFill", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_hitTest, kDisplayObjectType, "hitTest", false ),
        new AscWarningInstance(kUnsupportedMeth_MovieClip_attachBitmap, kDisplayObjectType, "attachBitmap", false ),
        new AscWarningInstance(kUnsupportedMeth_call, kVoidType, "call", false ),
        new AscWarningInstance(kUnsupportedMeth_Color, kVoidType, "Color", false ),
        new AscWarningInstance(kUnsupportedMeth_capabilities, kVoidType, "capabilities", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getBytesLoaded, kSoundType, "getBytesLoaded", false ),
        new AscWarningInstance(kUnsupportedMeth_Sound_getBytesTotal, kSoundType, "getBytesTotal", false ),
        new AscWarningInstance(kUnsupportedMeth_TextFormat_getTextExtent, kTextFormatType, "getTextExtent", false ),
        new AscWarningInstance(kUnsupportedMeth_FileReference_addListener, kFileReferenceType, "addListener", false ),
        new AscWarningInstance(kUnsupportedMeth_FileReference_removeListener, kFileReferenceType, "removeListener", false ),
        new AscWarningInstance(kUnsupportedMeth_eval, kVoidType, "eval", false ),
        new AscWarningInstance(kUnsupportedMeth_getVersion, kVoidType, "getVersion", false ),
        new AscWarningInstance(kUnsupportedMeth_ifFrameLoaded, kVoidType, "ifFrameLoaded", false ),
        };

    static final AscWarningInstance[] unsupportedEvents =
    {
        new AscWarningInstance(kWarning_Event_onStatus, kSystemType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onID3, kSoundType, "onID3", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kSoundType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onSoundComplete, kSoundType, "onSoundComplete", false ),
        new AscWarningInstance(kWarning_Event_onResize, kStageType, "onResize", false ),
        new AscWarningInstance(kWarning_Event_onChanged, kTextFieldType, "onChanged", false ),
        new AscWarningInstance(kWarning_Event_onKillFocus, kTextFieldType, "onKillFocus", false ),
        new AscWarningInstance(kWarning_Event_onScroller, kTextFieldType, "onScroller", false ),
        new AscWarningInstance(kWarning_Event_onSetFocus, kTextFieldType, "onSetFocus", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kStyleSheetType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onMouseDown, kMouseType, "onMouseDown", false ),
        new AscWarningInstance(kWarning_Event_onMouseUp, kMouseType, "onMouseUp", false ),
        new AscWarningInstance(kWarning_Event_onMouseMove, kMouseType, "onMouseMove", false ),
        new AscWarningInstance(kWarning_Event_onMouseWheel, kMouseType, "onMouseWheel", false ),
        new AscWarningInstance(kWarning_Event_onKeyDown, kKeyboardType, "onKeyDown", false ),
        new AscWarningInstance(kWarning_Event_onKeyUp, kKeyboardType, "onKeyUp", false ),
        new AscWarningInstance(kWarning_Event_onData, kLoaderType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kLoaderType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onDragOut, kSimpleButtonType, "onDragOut", false ),
        new AscWarningInstance(kWarning_Event_onDragOver, kSimpleButtonType, "onDragOver", false ),
        new AscWarningInstance(kWarning_Event_onKeyDown, kSimpleButtonType, "onKeyDown", false ),
        new AscWarningInstance(kWarning_Event_onKeyUp, kSimpleButtonType, "onKeyUp", false ),
        new AscWarningInstance(kWarning_Event_onKillFocus, kSimpleButtonType, "onKillFocus", false ),
        new AscWarningInstance(kWarning_Event_onPress, kSimpleButtonType, "onPress", false ),
        new AscWarningInstance(kWarning_Event_onRelease, kSimpleButtonType, "onRelease", false ),
        new AscWarningInstance(kWarning_Event_onReleaseOutside, kSimpleButtonType, "onReleaseOutside", false ),
        new AscWarningInstance(kWarning_Event_onRollOut, kSimpleButtonType, "onRollOut", false ),
        new AscWarningInstance(kWarning_Event_onRollOver, kSimpleButtonType, "onRollOver", false ),
        new AscWarningInstance(kWarning_Event_onSetFocus, kSimpleButtonType, "onSetFocus", false ),
        new AscWarningInstance(kWarning_Event_onActivity, kCameraType, "onActivity", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kCameraType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onSelect, kContextMenuType, "onSelect", false ),
        new AscWarningInstance(kWarning_Event_onSelect, kContextMenuItemType, "onSelect", false ),
        new AscWarningInstance(kWarning_Event_onActivity, kMicrophoneType, "onActivity", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kMicrophoneType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onData, kDisplayObjectType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onDragOut, kDisplayObjectType, "onDragOut", false ),
        new AscWarningInstance(kWarning_Event_onDragOver, kDisplayObjectType, "onDragOver", false ),
        new AscWarningInstance(kWarning_Event_onEnterFrame, kDisplayObjectType, "onEnterFrame", false ),
        new AscWarningInstance(kWarning_Event_onKeyDown, kDisplayObjectType, "onKeyDown", false ),
        new AscWarningInstance(kWarning_Event_onKeyUp, kDisplayObjectType, "onKeyUp", false ),
        new AscWarningInstance(kWarning_Event_onKillFocus, kDisplayObjectType, "onKillFocus", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kDisplayObjectType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onMouseDown, kDisplayObjectType, "onMouseDown", false ),
        new AscWarningInstance(kWarning_Event_onMouseMove, kDisplayObjectType, "onMouseMove", false ),
        new AscWarningInstance(kWarning_Event_onMouseUp, kDisplayObjectType, "onMouseUp", false ),
        new AscWarningInstance(kWarning_Event_onPress, kDisplayObjectType, "onPress", false ),
        new AscWarningInstance(kWarning_Event_onRelease, kDisplayObjectType, "onRelease", false ),
        new AscWarningInstance(kWarning_Event_onReleaseOutside, kDisplayObjectType, "onReleaseOutside", false ),
        new AscWarningInstance(kWarning_Event_onRollOut, kDisplayObjectType, "onRollOut", false ),
        new AscWarningInstance(kWarning_Event_onRollOver, kDisplayObjectType, "onRollOver", false ),
        new AscWarningInstance(kWarning_Event_onSetFocus, kDisplayObjectType, "onSetFocus", false ),
        new AscWarningInstance(kWarning_Event_onUnload, kDisplayObjectType, "onUnload", false ),
        new AscWarningInstance(kWarning_Event_onLoadComplete, kLoaderType, "onLoadComplete", false ),
        new AscWarningInstance(kWarning_Event_onLoadError, kLoaderType, "onLoadError", false ),
        new AscWarningInstance(kWarning_Event_onLoadInit, kLoaderType, "onLoadInit", false ),
        new AscWarningInstance(kWarning_Event_onLoadProgress, kLoaderType, "onLoadProgress", false ),
        new AscWarningInstance(kWarning_Event_onLoadStart, kLoaderType, "onLoadStart", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kNetStreamType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onData, kXMLType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kXMLType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onClose, kXMLSocketType, "onClose", false ),
        new AscWarningInstance(kWarning_Event_onConnect, kXMLSocketType, "onConnect", false ),
        new AscWarningInstance(kWarning_Event_onData, kXMLSocketType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onXML, kXMLSocketType, "onXML", false ),
        new AscWarningInstance(kWarning_Event_onSelect, kFileReferenceListType, "onSelect", false ),
        new AscWarningInstance(kWarning_Event_onCancel, kFileReferenceListType, "onCancel", false ),
        new AscWarningInstance(kWarning_Event_onData, kXMLDocumentType, "onData", false ),
        new AscWarningInstance(kWarning_Event_onHTTPStatus, kXMLDocumentType, "onHTTPStatus", false ),
        new AscWarningInstance(kWarning_Event_onLoad, kXMLDocumentType, "onLoad", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kSharedObjectType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onStatus, kLocalConnectionType, "onStatus", false ),
        new AscWarningInstance(kWarning_Event_onIMEComposition, kIMEType, "onIMEComposition", false ),
        new AscWarningInstance(kWarning_Event_onCancel, kFileReferenceType, "onCancel", false ),
        new AscWarningInstance(kWarning_Event_onComplete, kFileReferenceType, "onComplete", false ),
        new AscWarningInstance(kWarning_Event_onHTTPError, kFileReferenceType, "onHTTPError", false ),
        new AscWarningInstance(kWarning_Event_onIOError, kFileReferenceType, "onIOError", false ),
        new AscWarningInstance(kWarning_Event_onOpen, kFileReferenceType, "onOpen", false ),
        new AscWarningInstance(kWarning_Event_onProgress, kFileReferenceType, "onProgress", false ),
        new AscWarningInstance(kWarning_Event_onSecurityError, kFileReferenceType, "onSecurityError", false ),
        new AscWarningInstance(kWarning_Event_onSelect, kFileReferenceType, "onSelect", false ),
        };

        public static final AscWarning[][] allWarningConstants =
        {
              warningConstantsEN,
              warningConstantsDE,
              warningConstantsES,
              warningConstantsFR,
              warningConstantsIT,
              warningConstantsJP,
              warningConstantsKR,
              warningConstantsCN,
              warningConstantsTW,
        };

};
